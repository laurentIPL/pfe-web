{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\CreateQRCodeContainer\\\\AskQRCodeForm.js\";\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CustomInput from \"../utils/CustomInput\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport { Card, Title, Button } from \"react-native-paper\";\nvar QRCodeSchema = yup.object({\n  quantity: yup.number().required(\"quantity is required\"),\n  quantity: yup.number().typeError(\"That doesn't look like a number\")\n});\n\nvar AskQRCodeForm = function AskQRCodeForm(_ref) {\n  var handleFormSubmit = _ref.handleFormSubmit;\n  var isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\n  return React.createElement(Formik, {\n    initialValues: {\n      quantity: 1,\n      names: \"\"\n    },\n    onSubmit: function onSubmit(data) {\n      return handleFormSubmit(data);\n    },\n    validationSchema: QRCodeSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isValid = _ref2.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(Title, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"Combien de QR Code avez-vous besoin ?\"), React.createElement(Field, {\n      component: CustomInput,\n      name: \"quantity\",\n      placeholder: \"1\",\n      type: \"number\",\n      label: \"Nombre de QR Codes \\xE0 g\\xE9n\\xE9rer\",\n      min: \"1\",\n      max: \"30\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), isEntreprise && React.createElement(Field, {\n      component: CustomInput,\n      label: \"Ajouter un nom \\xE0 vos QR Codes\",\n      name: \"names\",\n      placeholder: \"ex: QRCode1, QRCode2, ..\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), React.createElement(Card.Actions, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Ask QR Code Now\")));\n  });\n};\n\nvar styles = StyleSheet.create({\n  numberInput: {\n    textAlign: \"center\"\n  },\n  title: {\n    textAlign: \"center\"\n  },\n  button: {\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  }\n});\nexport default AskQRCodeForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/CreateQRCodeContainer/AskQRCodeForm.js"],"names":["React","useState","CustomInput","Formik","Field","yup","Card","Title","Button","QRCodeSchema","object","quantity","number","required","typeError","AskQRCodeForm","handleFormSubmit","isEntreprise","JSON","parse","localStorage","getItem","role","names","data","handleSubmit","isValid","styles","title","button","StyleSheet","create","numberInput","textAlign","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,oBAApC;AAEA,IAAMC,YAAY,GAAGJ,GAAG,CAACK,MAAJ,CAAW;AAC9BC,EAAAA,QAAQ,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CADoB;AAE9BF,EAAAA,QAAQ,EAAEN,GAAG,CAACO,MAAJ,GAAaE,SAAb,CAAuB,iCAAvB;AAFoB,CAAX,CAArB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA0B;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;AAC9C,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,IAAzC,IAAiD,GAAtE;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEX,MAAAA,QAAQ,EAAE,CAAZ;AAAeY,MAAAA,KAAK,EAAE;AAAtB,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACC,IAAD;AAAA,aAAUR,gBAAgB,CAACQ,IAAD,CAA1B;AAAA,KAFZ;AAGE,IAAA,gBAAgB,EAAEf,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG;AAAA,QAAGgB,YAAH,SAAGA,YAAH;AAAA,QAAiBC,OAAjB,SAAiBA,OAAjB;AAAA,WACC,0CACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,MAAM,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAIE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAE1B,WADb;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,GAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAC,uCALR;AAME,MAAA,GAAG,EAAC,GANN;AAOE,MAAA,GAAG,EAAC,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAaGe,YAAY,IACX,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEf,WADb;AAEE,MAAA,KAAK,EAAC,kCAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,WAAW,EAAC,0BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAqBE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAEyB,MAAM,CAACE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAEJ,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CArBF,CADD;AAAA,GALH,CADF;AAqCD,CAxCD;;AA0CA,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE;AADA,GADkB;AAI/BL,EAAAA,KAAK,EAAE;AACLK,IAAAA,SAAS,EAAE;AADN,GAJwB;AAO/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,cAAc,EAAE,QADV;AAEND,IAAAA,SAAS,EAAE;AAFL;AAPuB,CAAlB,CAAf;AAaA,eAAelB,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, View } from \"react-native\";\r\nimport CustomInput from \"components/utils/CustomInput\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Card, Title, Button } from \"react-native-paper\";\r\n\r\nconst QRCodeSchema = yup.object({\r\n  quantity: yup.number().required(\"quantity is required\"),\r\n  quantity: yup.number().typeError(\"That doesn't look like a number\"),\r\n});\r\n\r\nconst AskQRCodeForm = ({ handleFormSubmit }) => {\r\n  const isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ quantity: 1, names: \"\" }}\r\n      onSubmit={(data) => handleFormSubmit(data)}\r\n      validationSchema={QRCodeSchema}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <>\r\n          <Title style={styles.title}>\r\n            Combien de QR Code avez-vous besoin ?\r\n          </Title>\r\n          <Field\r\n            component={CustomInput}\r\n            name=\"quantity\"\r\n            placeholder=\"1\"\r\n            type=\"number\"\r\n            label=\"Nombre de QR Codes à générer\"\r\n            min=\"1\"\r\n            max=\"30\"\r\n          />\r\n          {isEntreprise && (\r\n            <Field\r\n              component={CustomInput}\r\n              label=\"Ajouter un nom à vos QR Codes\"\r\n              name=\"names\"\r\n              placeholder=\"ex: QRCode1, QRCode2, ..\"\r\n            />\r\n          )}\r\n          <Card.Actions style={styles.button}>\r\n            <Button mode=\"contained\" onPress={handleSubmit}>\r\n              Ask QR Code Now\r\n            </Button>\r\n          </Card.Actions>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  numberInput: {\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default AskQRCodeForm;\r\n"]},"metadata":{},"sourceType":"module"}