{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\ListQRCodes\\\\ListQRCodes.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Service from \"../../services/Service\";\nimport { Card, Button, DataTable } from \"react-native-paper\";\n\nvar ListQRCodes = function ListQRCodes(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      codes = _useState2[0],\n      setCodes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var itemsPerPage = 1;\n  useEffect(function () {\n    if (data.length > 0) {\n      var array = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var temp = React.createElement(DataTable.Row, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }, React.createElement(DataTable.Cell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        }, data[i].name), React.createElement(DataTable.Cell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: styles.image,\n          source: data[i].image,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }\n        })), React.createElement(DataTable.Cell, {\n          numeric: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }, data[i].count));\n        array.push(temp);\n      }\n\n      setCodes(array);\n    }\n  }, [data]);\n  return React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(DataTable.Title, {\n    style: styles.statistics,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Name\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"QR Code\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"nbr of scans\")), codes[currentPage], React.createElement(DataTable.Pagination, {\n    page: currentPage,\n    numberOfPages: codes.length,\n    perPage: itemsPerPage,\n    onPageChange: function onPageChange(page) {\n      setCurrentPage(page);\n    },\n    label: currentPage + 1 + \" of \" + codes.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  statistics: {\n    paddingLeft: 25,\n    paddingRight: 25,\n    width: \"100%\"\n  },\n  cardContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  downloadButton: {},\n  image: {\n    display: \"block\",\n    height: \"100\",\n    width: \"100\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: 40,\n    backgroundColor: \"red\",\n    objectFit: \"cover\"\n  }\n});\nexport default ListQRCodes;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/ListQRCodes/ListQRCodes.js"],"names":["React","useState","useEffect","Service","Card","Button","DataTable","ListQRCodes","data","codes","setCodes","currentPage","setCurrentPage","itemsPerPage","length","array","i","temp","name","styles","image","count","push","statistics","page","StyleSheet","create","paddingLeft","paddingRight","width","cardContainer","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","downloadButton","display","height","padding","backgroundColor","objectFit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Image, Text } from \"react-native\";\r\nimport Service from \"services/Service\";\r\nimport { Card, Button, DataTable } from \"react-native-paper\";\r\n\r\nconst ListQRCodes = ({ data }) => {\r\n  const [codes, setCodes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const itemsPerPage = 1;\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      const array = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        const temp = (\r\n          <DataTable.Row key={i}>\r\n            <DataTable.Cell>{data[i].name}</DataTable.Cell>\r\n            <DataTable.Cell>\r\n              <Image style={styles.image} source={data[i].image} />\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric>{data[i].count}</DataTable.Cell>\r\n          </DataTable.Row>\r\n        );\r\n        array.push(temp);\r\n      }\r\n      setCodes(array);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Card.Content>\r\n      <DataTable>\r\n        <DataTable.Header>\r\n          <DataTable.Title style={styles.statistics}>Name</DataTable.Title>\r\n          <DataTable.Title>QR Code</DataTable.Title>\r\n          <DataTable.Title numeric>nbr of scans</DataTable.Title>\r\n        </DataTable.Header>\r\n\r\n        {codes[currentPage]}\r\n\r\n        <DataTable.Pagination\r\n          page={currentPage}\r\n          numberOfPages={codes.length}\r\n          perPage={itemsPerPage}\r\n          onPageChange={(page) => {\r\n            setCurrentPage(page);\r\n          }}\r\n          label={`${currentPage + 1} of ${codes.length}`}\r\n        />\r\n      </DataTable>\r\n    </Card.Content>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  statistics: {\r\n    paddingLeft: 25,\r\n    paddingRight: 25,\r\n    width: \"100%\",\r\n  },\r\n  cardContainer: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"80px\",\r\n    paddingBottom: \"80px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  downloadButton: {},\r\n  image: {\r\n    display: \"block\",\r\n    height: \"100\",\r\n    width: \"100\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: 40,\r\n    backgroundColor: \"red\",\r\n    objectFit: \"cover\",\r\n  },\r\n});\r\n\r\nexport default ListQRCodes;\r\n"]},"metadata":{},"sourceType":"module"}