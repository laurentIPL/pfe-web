{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\ListQRCodes\\\\ListQRCodes.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Service from \"../../services/Service\";\nimport { Card, Button, DataTable } from \"react-native-paper\";\n\nvar ListQRCodes = function ListQRCodes(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      codes = _useState2[0],\n      setCodes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  var itemsPerPage = 1;\n  console.log(data);\n  return React.createElement(React.Fragment, null, data.map(function (item, index) {\n    React.createElement(React.Fragment, null, React.createElement(Image, {\n      key: index,\n      style: styles.fixed,\n      source: item.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }), \";\");\n  }));\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  downloadButton: {},\n  image: {\n    display: \"block\",\n    height: \"100\",\n    width: \"100\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: 40,\n    backgroundColor: \"red\",\n    objectFit: \"cover\"\n  },\n  fixed: {\n    position: \"fixed\",\n    width: 500,\n    zIndex: 5\n  }\n});\nexport default ListQRCodes;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/ListQRCodes/ListQRCodes.js"],"names":["React","useState","useEffect","Service","Card","Button","DataTable","ListQRCodes","data","codes","setCodes","currentPage","setCurrentPage","load","setLoad","itemsPerPage","console","log","map","item","index","styles","fixed","image","StyleSheet","create","cardContainer","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","downloadButton","display","height","width","padding","backgroundColor","objectFit","position","zIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,OAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,oBAAxC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACNP,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MACzBQ,KADyB;AAAA,MAClBC,QADkB;;AAAA,mBAEMT,QAAQ,CAAC,CAAD,CAFd;AAAA;AAAA,MAEzBU,WAFyB;AAAA,MAEZC,cAFY;;AAAA,mBAGRX,QAAQ,CAAC,IAAD,CAHA;AAAA;AAAA,MAGzBY,IAHyB;AAAA,MAGnBC,OAHmB;;AAKhC,MAAMC,YAAY,GAAG,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,SACE,0CACGA,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACzB,8CACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,KAAK,EAAEC,MAAM,CAACC,KAAjC;AAAwC,MAAA,MAAM,EAAEH,IAAI,CAACI,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CADH,CADF;AAkCD,CA1CD;;AA2CA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE,MADC;AAEbC,IAAAA,WAAW,EAAE,MAFA;AAGbC,IAAAA,UAAU,EAAE,MAHC;AAIbC,IAAAA,aAAa,EAAE,MAJF;AAKbC,IAAAA,WAAW,EAAE,SALA;AAMbC,IAAAA,WAAW,EAAE,KANA;AAObC,IAAAA,YAAY,EAAE;AAPD,GADgB;AAU/BC,EAAAA,cAAc,EAAE,EAVe;AAW/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,KAAK,EAAE,KAHF;AAILV,IAAAA,UAAU,EAAE,MAJP;AAKLC,IAAAA,WAAW,EAAE,MALR;AAMLU,IAAAA,OAAO,EAAE,EANJ;AAOLC,IAAAA,eAAe,EAAE,KAPZ;AAQLC,IAAAA,SAAS,EAAE;AARN,GAXwB;AAqB/BlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,QAAQ,EAAE,OADL;AAELJ,IAAAA,KAAK,EAAE,GAFF;AAGLK,IAAAA,MAAM,EAAE;AAHH;AArBwB,CAAlB,CAAf;AA4BA,eAAenC,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Image, Text } from \"react-native\";\r\nimport Service from \"services/Service\";\r\nimport { Card, Button, DataTable } from \"react-native-paper\";\r\n\r\nconst ListQRCodes = ({ data }) => {\r\n  const [codes, setCodes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const itemsPerPage = 1;\r\n\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {data.map((item, index) => {\r\n        <>\r\n          <Image key={index} style={styles.fixed} source={item.image} />;\r\n        </>;\r\n      })}\r\n    </>\r\n    /*     <Card.Content>\r\n      <DataTable>\r\n        <DataTable.Header>\r\n          <DataTable.Title>QR Code</DataTable.Title>\r\n          <DataTable.Title numeric>nbr of scans</DataTable.Title>\r\n        </DataTable.Header>\r\n        {data.map((item, index) => {\r\n          <DataTable.Row key={index}>\r\n            <DataTable.Cell>\r\n              <Image style={styles.image} source={item.image} />\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric>{item.count}</DataTable.Cell>\r\n          </DataTable.Row>;\r\n        })}\r\n        <DataTable.Pagination\r\n          page={currentPage}\r\n          numberOfPages={data.length}\r\n          perPage={itemsPerPage}\r\n          onPageChange={(page) => {\r\n            setCurrentPage(page);\r\n          }}\r\n          label={`${currentPage + 1} of ${data.length}`}\r\n        />\r\n      </DataTable>\r\n    </Card.Content> */\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"80px\",\r\n    paddingBottom: \"80px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  downloadButton: {},\r\n  image: {\r\n    display: \"block\",\r\n    height: \"100\",\r\n    width: \"100\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: 40,\r\n    backgroundColor: \"red\",\r\n    objectFit: \"cover\",\r\n  },\r\n  fixed: {\r\n    position: \"fixed\",\r\n    width: 500,\r\n    zIndex: 5,\r\n  },\r\n});\r\n\r\nexport default ListQRCodes;\r\n"]},"metadata":{},"sourceType":"module"}