{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\Home\\\\Home.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Title, ActivityIndicator } from \"react-native-paper\";\nimport LogoutButton from \"./LogoutButton\";\nimport CreateQRCodeContainer from \"../CreateQRCodeContainer/CreateQRCodeContainer\";\nimport ListQRCodes from \"../ListQRCodes/ListQRCodes\";\nimport Service from \"../../services/Service\";\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      QRList = _useState2[0],\n      setQRList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showQRList = _useState4[0],\n      setShowQRList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      charging = _useState6[0],\n      setCharging = _useState6[1];\n\n  var isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\n  useEffect(function () {\n    console.log(QRList);\n  }, [QRList]);\n  useEffect(function () {\n    handleList();\n  }, []);\n\n  var handleList = function handleList() {\n    setShowQRList(false);\n    setCharging(true);\n    Service.listQR().then(function (resp) {\n      var array = [];\n\n      for (var i = 0; i < resp.data.data.length; i++) {\n        var images = resp.data.data[i].image;\n        var count = resp.data.data[i].count;\n        var name = resp.data.data[i].name;\n        array.push({\n          image: \"data:image/png;base64,\" + images.substring(2, images.length - 1),\n          count: count,\n          name: name\n        });\n      }\n\n      console.log(\"test\");\n      setQRList(array);\n      setShowQRList(true);\n      setCharging(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(LogoutButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(CreateQRCodeContainer, {\n    setQRList: setQRList,\n    QRList: QRList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), isEntreprise && React.createElement(View, {\n    style: styles.col,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(Card, {\n    style: styles.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \" Liste de vos QR Codes \"), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, showQRList ? React.createElement(ListQRCodes, {\n    data: QRList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }) : React.createElement(ActivityIndicator, {\n    animating: charging,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  title: {\n    textAlign: \"center\"\n  },\n  cardContainer: {\n    width: \"450px\",\n    height: \"300px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"20px\",\n    paddingBottom: \"20px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n  col: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/Home/Home.js"],"names":["React","useState","useEffect","Card","Title","ActivityIndicator","LogoutButton","CreateQRCodeContainer","ListQRCodes","Service","Home","QRList","setQRList","showQRList","setShowQRList","charging","setCharging","isEntreprise","JSON","parse","localStorage","getItem","role","console","log","handleList","listQR","then","resp","array","i","data","length","images","image","count","name","push","substring","catch","error","styles","row","col","cardContainer","title","StyleSheet","create","textAlign","width","height","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","display","flexDirection","flexWrap","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Card, Title, ActivityIndicator } from \"react-native-paper\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport CreateQRCodeContainer from \"components/CreateQRCodeContainer/CreateQRCodeContainer\";\r\nimport ListQRCodes from \"components/ListQRCodes/ListQRCodes\";\r\nimport Service from \"services/Service\";\r\n\r\nconst Home = () => {\r\n  const [QRList, setQRList] = useState([]);\r\n  const [showQRList, setShowQRList] = useState(false);\r\n  const [charging, setCharging] = useState(false);\r\n\r\n  const isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\r\n\r\n  useEffect(() => {\r\n    console.log(QRList);\r\n  }, [QRList]);\r\n  useEffect(() => {\r\n    handleList();\r\n  }, []);\r\n\r\n  const handleList = () => {\r\n    setShowQRList(false);\r\n    setCharging(true);\r\n    Service.listQR()\r\n      .then((resp) => {\r\n        var array = [];\r\n        for (var i = 0; i < resp.data.data.length; i++) {\r\n          const images = resp.data.data[i].image;\r\n          const count = resp.data.data[i].count;\r\n          const name = resp.data.data[i].name;\r\n          array.push({\r\n            image:\r\n              \"data:image/png;base64,\" + images.substring(2, images.length - 1),\r\n            count: count,\r\n            name: name,\r\n          });\r\n        }\r\n        console.log(\"test\");\r\n        setQRList(array);\r\n        setShowQRList(true);\r\n        setCharging(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LogoutButton />\r\n      <View style={styles.row}>\r\n        <View style={styles.col}>\r\n          <CreateQRCodeContainer setQRList={setQRList} QRList={QRList} />\r\n        </View>\r\n        {isEntreprise && (\r\n          <View style={styles.col}>\r\n            <Card style={styles.cardContainer}>\r\n              <Title style={styles.title}> Liste de vos QR Codes </Title>\r\n              <Card.Content>\r\n                {showQRList ? (\r\n                  <ListQRCodes data={QRList} />\r\n                ) : (\r\n                  <ActivityIndicator animating={charging} size=\"large\" />\r\n                )}\r\n              </Card.Content>\r\n            </Card>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  cardContainer: {\r\n    width: \"450px\",\r\n    height: \"300px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n  },\r\n  col: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}