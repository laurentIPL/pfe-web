{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\web_app\\\\src\\\\components\\\\CreateQRCodeContainer\\\\AskQRCodeForm.js\";\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CustomInput from \"../utils/CustomInput\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport GeneratePDF from \"./GeneratePDF\";\nimport { Card, Title, Button } from \"react-native-paper\";\nvar loginSchema = yup.object({\n  quantity: yup.number().required(\"quantity is required\"),\n  quantity: yup.number().typeError(\"That doesn't look like a number\")\n});\n\nvar AskQRCodeForm = function AskQRCodeForm(_ref) {\n  var handleFormSubmit = _ref.handleFormSubmit;\n  return React.createElement(Formik, {\n    initialValues: {\n      quantity: 1\n    },\n    onSubmit: function onSubmit(data) {\n      return handleFormSubmit(data);\n    },\n    validationSchema: loginSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isValid = _ref2.isValid;\n    return React.createElement(Card, {\n      style: styles.cardContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, React.createElement(Title, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Combien de QR Code avez-vous besoin ?\"), React.createElement(Field, {\n      component: CustomInput,\n      name: \"quantity\",\n      placeholder: \"1\",\n      type: \"number\",\n      min: \"1\",\n      max: \"30\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), React.createElement(Card.Actions, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"Ask QR Code Now\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  numberInput: {\n    textAlign: \"center\"\n  },\n  title: {\n    textAlign: \"center\"\n  },\n  button: {\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  QR: {\n    height: 100,\n    scale: 0.5\n  }\n});\nexport default AskQRCodeForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/web_app/src/components/CreateQRCodeContainer/AskQRCodeForm.js"],"names":["React","useState","CustomInput","Formik","Field","yup","GeneratePDF","Card","Title","Button","loginSchema","object","quantity","number","required","typeError","AskQRCodeForm","handleFormSubmit","data","handleSubmit","isValid","styles","cardContainer","title","button","StyleSheet","create","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","numberInput","textAlign","justifyContent","QR","height","scale"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, View } from \"react-native\";\r\nimport CustomInput from \"components/utils/CustomInput\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneratePDF from \"./GeneratePDF\";\r\nimport { Card, Title, Button } from \"react-native-paper\";\r\n\r\nconst loginSchema = yup.object({\r\n  quantity: yup.number().required(\"quantity is required\"),\r\n  quantity: yup.number().typeError(\"That doesn't look like a number\"),\r\n});\r\n\r\nconst AskQRCodeForm = ({ handleFormSubmit }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ quantity: 1 }}\r\n      onSubmit={(data) => handleFormSubmit(data)}\r\n      validationSchema={loginSchema}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Card style={styles.cardContainer}>\r\n          <Card.Content>\r\n            <Title style={styles.title}>\r\n              Combien de QR Code avez-vous besoin ?\r\n            </Title>\r\n            <Field\r\n              component={CustomInput}\r\n              name=\"quantity\"\r\n              placeholder=\"1\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n            />\r\n            <Card.Actions style={styles.button}>\r\n              <Button mode=\"contained\" onPress={handleSubmit}>\r\n                Ask QR Code Now\r\n              </Button>\r\n            </Card.Actions>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"80px\",\r\n    paddingBottom: \"80px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  numberInput: {\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  QR: {\r\n    height: 100,\r\n    scale: 0.5,\r\n  },\r\n});\r\n\r\nexport default AskQRCodeForm;\r\n"]},"metadata":{},"sourceType":"module"}