{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport http from \"../http-common\";\n\nvar getAll = function getAll() {\n  return http.get(\"/tutorials\");\n};\n\nvar get = function get(id) {\n  return http.get(\"/tutorials/\" + id);\n};\n\nvar create = function create(data) {\n  return http.post(\"/tutorials\", data);\n};\n\nvar askForQR = function askForQR(payload) {\n  var user = localStorage.getItem(\"user\");\n\n  var data = _objectSpread(_objectSpread({}, payload), {}, {\n    user: user\n  });\n\n  console.log(data);\n};\n\nvar update = function update(id, data) {\n  return http.put(\"/tutorials/\" + id, data);\n};\n\nvar remove = function remove(id) {\n  return http.delete(\"/tutorials/\" + id);\n};\n\nvar removeAll = function removeAll() {\n  return http.delete(\"/tutorials\");\n};\n\nvar findByTitle = function findByTitle(title) {\n  return http.get(\"/tutorials?title=\" + title);\n};\n\nexport default {\n  getAll: getAll,\n  get: get,\n  create: create,\n  askForQR: askForQR,\n  update: update,\n  remove: remove,\n  removeAll: removeAll,\n  findByTitle: findByTitle\n};","map":{"version":3,"sources":["C:/Users/Laurent/PFE/web_app/src/services/Service.js"],"names":["http","getAll","get","id","create","data","post","askForQR","payload","user","localStorage","getItem","console","log","update","put","remove","delete","removeAll","findByTitle","title"],"mappings":";;;;;;AAAA,OAAOA,IAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SAAOD,IAAI,CAACE,GAAL,CAAS,YAAT,CAAP;AACD,CAFD;;AAIA,IAAMA,GAAG,GAAG,SAANA,GAAM,CAACC,EAAD,EAAQ;AAClB,SAAOH,IAAI,CAACE,GAAL,iBAAuBC,EAAvB,CAAP;AACD,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AACvB,SAAOL,IAAI,CAACM,IAAL,CAAU,YAAV,EAAwBD,IAAxB,CAAP;AACD,CAFD;;AAIA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAa;AAC5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,MAAMN,IAAI,mCAAQG,OAAR;AAAiBC,IAAAA,IAAI,EAAJA;AAAjB,IAAV;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAED,CALD;;AAOA,IAAMS,MAAM,GAAG,SAATA,MAAS,CAACX,EAAD,EAAKE,IAAL,EAAc;AAC3B,SAAOL,IAAI,CAACe,GAAL,iBAAuBZ,EAAvB,EAA6BE,IAA7B,CAAP;AACD,CAFD;;AAIA,IAAMW,MAAM,GAAG,SAATA,MAAS,CAACb,EAAD,EAAQ;AACrB,SAAOH,IAAI,CAACiB,MAAL,iBAA0Bd,EAA1B,CAAP;AACD,CAFD;;AAIA,IAAMe,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAOlB,IAAI,CAACiB,MAAL,cAAP;AACD,CAFD;;AAIA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,SAAOpB,IAAI,CAACE,GAAL,uBAA6BkB,KAA7B,CAAP;AACD,CAFD;;AAIA,eAAe;AACbnB,EAAAA,MAAM,EAANA,MADa;AAEbC,EAAAA,GAAG,EAAHA,GAFa;AAGbE,EAAAA,MAAM,EAANA,MAHa;AAIbG,EAAAA,QAAQ,EAARA,QAJa;AAKbO,EAAAA,MAAM,EAANA,MALa;AAMbE,EAAAA,MAAM,EAANA,MANa;AAObE,EAAAA,SAAS,EAATA,SAPa;AAQbC,EAAAA,WAAW,EAAXA;AARa,CAAf","sourcesContent":["import http from \"http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/tutorials\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/tutorials/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/tutorials\", data);\r\n};\r\n\r\nconst askForQR = (payload) => {\r\n  const user = localStorage.getItem(\"user\");\r\n  const data = { ...payload, user };\r\n  console.log(data);\r\n  //return http.post(\"/get_code\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/tutorials/${id}`, data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/tutorials/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/tutorials`);\r\n};\r\n\r\nconst findByTitle = (title) => {\r\n  return http.get(`/tutorials?title=${title}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  askForQR,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByTitle,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}