{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport http from \"../http-common\";\n\nvar askForQR = function askForQR(payload) {\n  var user = JSON.parse(localStorage.getItem(\"user\"));\n\n  var data = _objectSpread(_objectSpread({}, payload), user);\n\n  return http.post(\"/get_code\", data);\n};\n\nvar listQR = function listQR() {\n  var user = JSON.parse(localStorage.getItem(\"user\"));\n\n  var data = _objectSpread({}, user);\n\n  return http.post(\"/get_list\", data);\n};\n\nexport default {\n  askForQR: askForQR,\n  listQR: listQR\n};","map":{"version":3,"sources":["C:/Users/Pierre/PFE/Web_app/src/services/Service.js"],"names":["http","askForQR","payload","user","JSON","parse","localStorage","getItem","data","post","listQR"],"mappings":";;;;;;AAAA,OAAOA,IAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAa;AAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAMC,IAAI,mCAAQN,OAAR,GAAoBC,IAApB,CAAV;;AACA,SAAOH,IAAI,CAACS,IAAL,CAAU,WAAV,EAAuBD,IAAvB,CAAP;AACD,CAJD;;AAMA,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMP,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAMC,IAAI,qBAAQL,IAAR,CAAV;;AACA,SAAOH,IAAI,CAACS,IAAL,CAAU,WAAV,EAAuBD,IAAvB,CAAP;AACD,CAJD;;AAMA,eAAe;AACbP,EAAAA,QAAQ,EAARA,QADa;AAEbS,EAAAA,MAAM,EAANA;AAFa,CAAf","sourcesContent":["import http from \"http-common\";\r\n\r\nconst askForQR = (payload) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const data = { ...payload, ...user };\r\n  return http.post(\"/get_code\", data);\r\n};\r\n\r\nconst listQR = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const data = { ...user };\r\n  return http.post(\"/get_list\", data);\r\n}\r\n\r\nexport default {\r\n  askForQR,\r\n  listQR\r\n};\r\n"]},"metadata":{},"sourceType":"module"}