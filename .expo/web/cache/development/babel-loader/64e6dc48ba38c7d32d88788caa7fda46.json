{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\web_app\\\\src\\\\components\\\\CreateQRCodeContainer\\\\PDFDocument.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Page, Text, View, Document, StyleSheet, Image } from \"@react-pdf/renderer\";\n\nvar PDFDocument = function PDFDocument(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      numPages = _useState2[0],\n      setNumPages = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pageNumber = _useState4[0],\n      setPageNumber = _useState4[1];\n\n  var onDocumentLoadSuccess = function onDocumentLoadSuccess() {\n    setNumPages(data.length);\n  };\n\n  return React.createElement(Document, {\n    file: \"dummy.pdf\",\n    onLoadSuccess: onDocumentLoadSuccess,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, _toConsumableArray(Array(numPages).keys()).map(function (p) {\n    return React.createElement(Page, {\n      pageNumber: p + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nvar styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  image: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"50%\",\n    padding: 10,\n    backgroundColor: \"red\",\n    objectFit: \"cover\"\n  },\n  section: {\n    width: \"100%\",\n    height: \"100%\",\n    flexGrow: 1\n  },\n  QR: {\n    height: 500,\n    scale: 0.5\n  },\n  footer: {\n    height: 100\n  }\n});\nexport default PDFDocument;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/web_app/src/components/CreateQRCodeContainer/PDFDocument.js"],"names":["React","useState","useEffect","Page","Text","View","Document","StyleSheet","Image","PDFDocument","data","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","length","Array","keys","map","p","styles","create","page","flexDirection","width","textAlign","image","display","marginLeft","marginRight","padding","backgroundColor","objectFit","section","height","flexGrow","QR","scale","footer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,KANF,QAOO,qBAPP;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACAT,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MACzBU,QADyB;AAAA,MACfC,WADe;;AAAA,mBAEIX,QAAQ,CAAC,CAAD,CAFZ;AAAA;AAAA,MAEzBY,UAFyB;AAAA,MAEbC,aAFa;;AAGhC,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCH,IAAAA,WAAW,CAACF,IAAI,CAACM,MAAN,CAAX;AACD,GAFD;;AAGA,SACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,aAAa,EAAED,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,mBAAIE,KAAK,CAACN,QAAD,CAAL,CAAgBO,IAAhB,EAAJ,EAA4BC,GAA5B,CAAgC,UAACC,CAAD;AAAA,WAC/B,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAEA,CAAC,GAAG,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD+B;AAAA,GAAhC,CADH,CADF;AAiBD,CAvBD;;AAyBA,IAAMC,MAAM,GAAGd,UAAU,CAACe,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,SAAS,EAAE;AAHP,GADyB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILL,IAAAA,KAAK,EAAE,KAJF;AAKLM,IAAAA,OAAO,EAAE,EALJ;AAMLC,IAAAA,eAAe,EAAE,KANZ;AAOLC,IAAAA,SAAS,EAAE;AAPN,GANwB;AAe/BC,EAAAA,OAAO,EAAE;AACPT,IAAAA,KAAK,EAAE,MADA;AAEPU,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GAfsB;AAoB/BC,EAAAA,EAAE,EAAE;AACFF,IAAAA,MAAM,EAAE,GADN;AAEFG,IAAAA,KAAK,EAAE;AAFL,GApB2B;AAwB/BC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,MAAM,EAAE;AADF;AAxBuB,CAAlB,CAAf;AA6BA,eAAe1B,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image,\r\n} from \"@react-pdf/renderer\";\r\n\r\nconst PDFDocument = ({ data }) => {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const onDocumentLoadSuccess = () => {\r\n    setNumPages(data.length);\r\n  };\r\n  return (\r\n    <Document file=\"dummy.pdf\" onLoadSuccess={onDocumentLoadSuccess}>\r\n      {[...Array(numPages).keys()].map((p) => (\r\n        <Page pageNumber={p + 1} />\r\n      ))}\r\n      {/*       <Page></Page>\r\n      {data.map((image, index) => {\r\n        <Page style={styles.page} key={index} size=\"A4\">\r\n          <View style={styles.section}>\r\n            <Text>Scan me to save lives!!</Text>\r\n            <Image style={styles.image} source={image} />\r\n            <Text>{`Page ${index + 1}/${data.length}`}</Text>\r\n          </View>\r\n        </Page>;\r\n      })} */}\r\n    </Document>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"50%\",\r\n    padding: 10,\r\n    backgroundColor: \"red\",\r\n    objectFit: \"cover\",\r\n  },\r\n  section: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flexGrow: 1,\r\n  },\r\n  QR: {\r\n    height: 500,\r\n    scale: 0.5,\r\n  },\r\n  footer: {\r\n    height: 100,\r\n  },\r\n});\r\n\r\nexport default PDFDocument;\r\n"]},"metadata":{},"sourceType":"module"}