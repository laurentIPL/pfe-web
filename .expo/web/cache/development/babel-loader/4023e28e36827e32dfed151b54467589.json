{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DJsimon93\\\\Desktop\\\\IPL\\\\bloc 3\\\\PFE\\\\PFE\\\\Web_app\\\\src\\\\components\\\\AuthForm\\\\LoginForm.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport AuthService from \"../../services/authService\";\nimport CustomInput from \"./CustomInput\";\nimport { Button, Card, Title } from \"react-native-paper\";\nimport mailIcon from \"../../assets/svg/mail.svg\";\nimport passwordIcon from \"../../assets/svg/lock.svg\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useHistory } from \"react-router-dom\";\nvar loginSchema = yup.object({\n  email: yup.string(),\n  password: yup.string()\n});\n\nvar LoginForm = function LoginForm(_ref) {\n  var setShowRegisterForm = _ref.setShowRegisterForm;\n  var history = useHistory();\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(data, actions) {\n      console.log(data);\n      AuthService.authenticateUser(data).then(function (resp) {\n        console.log(resp);\n        localStorage.setItem(\"token\", resp.token);\n        history.push(\"/home\");\n        console.log(localStorage.getItem(\"token\"));\n      });\n    },\n    validationSchema: loginSchema,\n    validateOnChange: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isValid = _ref2.isValid;\n    return React.createElement(Card, {\n      style: styles.loginContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, React.createElement(Title, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Connectez vous\"), React.createElement(Field, {\n      icon: mailIcon,\n      component: CustomInput,\n      name: \"email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), React.createElement(Field, {\n      icon: passwordIcon,\n      component: CustomInput,\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), React.createElement(Card.Actions, {\n      style: styles.buttons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      mode: \"flat\",\n      onPress: function onPress() {\n        return setShowRegisterForm(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Cr\\xE9er un compte\"), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Se connecter\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: \"500px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  textInput: {\n    height: 40,\n    margin: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"25px\"\n  },\n  buttons: {\n    justifyContent: \"space-between\"\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/DJsimon93/Desktop/IPL/bloc 3/PFE/PFE/Web_app/src/components/AuthForm/LoginForm.js"],"names":["React","Formik","Field","yup","AuthService","CustomInput","Button","Card","Title","mailIcon","passwordIcon","BrowserRouter","Router","Switch","Route","Link","Redirect","useRouteMatch","useHistory","loginSchema","object","email","string","password","LoginForm","setShowRegisterForm","history","data","actions","console","log","authenticateUser","then","resp","localStorage","setItem","token","push","getItem","handleSubmit","isValid","styles","loginContainer","title","buttons","StyleSheet","create","width","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","textInput","height","margin","backgroundColor","textAlign","marginBottom","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"services/authService\";\r\nimport CustomInput from \"components/AuthForm/CustomInput\";\r\nimport { Button, Card, Title } from \"react-native-paper\";\r\nimport mailIcon from \"assets/svg/mail.svg\";\r\nimport passwordIcon from \"assets/svg/lock.svg\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nconst loginSchema = yup.object({\r\n  email: yup.string(),\r\n  password: yup.string(),\r\n});\r\n\r\nconst LoginForm = ({ setShowRegisterForm }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(data, actions) => {\r\n        console.log(data);\r\n        // CALL API TO LOGIN USER\r\n        AuthService.authenticateUser(data).then((resp) => {\r\n          console.log(resp);\r\n          localStorage.setItem(\"token\", resp.token);\r\n          history.push(\"/home\");\r\n          console.log(localStorage.getItem(\"token\"));\r\n        });\r\n      }}\r\n      validationSchema={loginSchema}\r\n      validateOnChange={true}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Card style={styles.loginContainer}>\r\n          <Card.Content>\r\n            {/*          <TextInput\r\n            mode=\"outlined\"\r\n            style={styles.textInput}\r\n            theme={{\r\n              colors: { primary: \"green\", underlineColor: \"transparent\" },\r\n            }}\r\n          /> */}\r\n            <Title style={styles.title}>Connectez vous</Title>\r\n            <Field\r\n              icon={mailIcon}\r\n              component={CustomInput}\r\n              name=\"email\"\r\n              label=\"Email\"\r\n            />\r\n            <Field\r\n              icon={passwordIcon}\r\n              component={CustomInput}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              secureTextEntry\r\n            />\r\n            <Card.Actions style={styles.buttons}>\r\n              <Button mode=\"flat\" onPress={() => setShowRegisterForm(true)}>\r\n                Créer un compte\r\n              </Button>\r\n              <Button mode=\"contained\" onPress={handleSubmit}>\r\n                Se connecter\r\n              </Button>\r\n            </Card.Actions>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loginContainer: {\r\n    width: \"500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"80px\",\r\n    paddingBottom: \"80px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  buttons: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}