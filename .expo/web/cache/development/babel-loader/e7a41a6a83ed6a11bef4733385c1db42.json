{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\web_app\\\\src\\\\components\\\\AuthForm\\\\RegisterForm.js\";\n\nimport React, { useState } from \"react\";\nimport SelectAccountForm from \"./SelectAccountForm\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Button, IconButton } from \"react-native-paper\";\nimport DoctorForm from \"./DoctorForm\";\nimport EstablishmentForm from \"./EstablishmentForm\";\nimport AuthService from \"../../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nvar RegisterForm = function RegisterForm() {\n  var userLoggedIn = AuthService.getCurrentUser();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  if (userLoggedIn) return React.createElement(Redirect, {\n    to: {\n      pathname: \"/home\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 28\n    }\n  });else return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, !account && React.createElement(SelectAccountForm, {\n    setAccount: setAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 22\n    }\n  }), account === \"Médecin\" && React.createElement(DoctorForm, {\n    setAccount: setAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 35\n    }\n  }), account === \"Établissement\" && React.createElement(EstablishmentForm, {\n    setAccount: setAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/web_app/src/components/AuthForm/RegisterForm.js"],"names":["React","useState","SelectAccountForm","Card","Button","IconButton","DoctorForm","EstablishmentForm","AuthService","Redirect","RegisterForm","userLoggedIn","getCurrentUser","account","setAccount","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,iBAAP;;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,oBAAzC;AACA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,YAAY,GAAGH,WAAW,CAACI,cAAZ,EAArB;;AADyB,kBAEKX,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAElBY,OAFkB;AAAA,MAETC,UAFS;;AAIzB,MAAIH,YAAJ,EAAkB,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAAlB,KAEE,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,OAAD,IAAY,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAEGD,OAAO,KAAK,SAAZ,IAAyB,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,EAGGD,OAAO,KAAK,eAAZ,IACC,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASH,CAfD;;AAiBA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport SelectAccountForm from \"components/AuthForm/SelectAccountForm\";\r\nimport { View } from \"react-native\";\r\nimport { Card, Button, IconButton } from \"react-native-paper\";\r\nimport DoctorForm from \"components/AuthForm/DoctorForm\";\r\nimport EstablishmentForm from \"components/AuthForm/EstablishmentForm\";\r\nimport AuthService from \"services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n  const userLoggedIn = AuthService.getCurrentUser();\r\n  const [account, setAccount] = useState(\"\");\r\n\r\n  if (userLoggedIn) return <Redirect to={{ pathname: \"/home\" }} />;\r\n  else\r\n    return (\r\n      <View>\r\n        {!account && <SelectAccountForm setAccount={setAccount} />}\r\n        {account === \"Médecin\" && <DoctorForm setAccount={setAccount} />}\r\n        {account === \"Établissement\" && (\r\n          <EstablishmentForm setAccount={setAccount} />\r\n        )}\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}