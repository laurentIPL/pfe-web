{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Pierre\\\\PFE1\\\\PFE\\\\Web_app\\\\src\\\\components\\\\LoginForm.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport AuthService from \"../services/authService\";\nvar loginSchema = yup.object({\n  email: yup.string().required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\")\n});\n\nvar LoginForm = function LoginForm() {\n  return React.createElement(Formik, {\n    style: styles.container,\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(data, actions) {\n      console.log(data);\n      AuthService.authenticate(data);\n    },\n    validationSchema: loginSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      style: styles.loginContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      style: [styles.textInput, props.errors.email && props.touched.email && styles.errorInput],\n      value: props.values.email,\n      onBlur: props.handleBlur(\"email\"),\n      onChangeText: props.handleChange(\"email\"),\n      placeholder: \"Entrer votre email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), props.errors.email && props.touched.email && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, props.errors.email), React.createElement(TextInput, {\n      style: [styles.textInput, props.errors.password && props.touched.password && styles.errorInput],\n      value: props.values.password,\n      onBlur: props.handleBlur(\"password\"),\n      onChangeText: props.handleChange(\"password\"),\n      placeholder: \"Entrer votre mot de passe\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), props.errors.password && props.touched.password && React.createElement(Text, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, props.errors.password), React.createElement(Button, {\n      onPress: props.handleSubmit,\n      title: \"Login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loginContainer: {\n    width: \"30%\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 10,\n    elevation: 10,\n    backgroundColor: \"#e6e6e6\"\n  },\n  textInput: {\n    height: 40,\n    width: \"100%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderColor: \"gray\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10\n  },\n  errorText: {\n    fontSize: 10,\n    color: \"red\"\n  },\n  errorInput: {\n    borderColor: \"red\"\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Pierre/PFE1/PFE/Web_app/src/components/LoginForm.js"],"names":["React","Formik","yup","AuthService","loginSchema","object","email","string","required","password","LoginForm","styles","container","data","actions","console","log","authenticate","props","loginContainer","textInput","errors","touched","errorInput","values","handleBlur","handleChange","errorText","handleSubmit","StyleSheet","create","justifyContent","alignItems","width","backgroundColor","padding","elevation","height","margin","borderColor","borderWidth","hairlineWidth","borderRadius","fontSize","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Button, TextInput, View, Text } from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required(\"Email is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  return (\r\n    <Formik\r\n      style={styles.container}\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(data, actions) => {\r\n        console.log(data);\r\n        AuthService.authenticate(data);\r\n      }}\r\n      validationSchema={loginSchema}\r\n    >\r\n      {(props) => (\r\n        <View style={styles.loginContainer}>\r\n          <TextInput\r\n            style={[\r\n              styles.textInput,\r\n              props.errors.email && props.touched.email && styles.errorInput,\r\n            ]}\r\n            value={props.values.email}\r\n            onBlur={props.handleBlur(\"email\")}\r\n            onChangeText={props.handleChange(\"email\")}\r\n            placeholder=\"Entrer votre email\"\r\n          />\r\n          {props.errors.email && props.touched.email && (\r\n            <Text style={styles.errorText}>{props.errors.email}</Text>\r\n          )}\r\n          <TextInput\r\n            style={[\r\n              styles.textInput,\r\n              props.errors.password &&\r\n                props.touched.password &&\r\n                styles.errorInput,\r\n            ]}\r\n            value={props.values.password}\r\n            onBlur={props.handleBlur(\"password\")}\r\n            onChangeText={props.handleChange(\"password\")}\r\n            placeholder=\"Entrer votre mot de passe\"\r\n          />\r\n          {props.errors.password && props.touched.password && (\r\n            <Text style={styles.errorText}>{props.errors.password}</Text>\r\n          )}\r\n          <Button onPress={props.handleSubmit} title=\"Login\" />\r\n        </View>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loginContainer: {\r\n    width: \"30%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    elevation: 10,\r\n    backgroundColor: \"#e6e6e6\",\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: \"100%\",\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"gray\",\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderRadius: 10,\r\n  },\r\n  errorText: {\r\n    fontSize: 10,\r\n    color: \"red\",\r\n  },\r\n  errorInput: {\r\n    borderColor: \"red\",\r\n  },\r\n});\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}