{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\AuthForm\\\\LoginForm.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport AuthService from \"../../services/authService\";\nimport CustomInput from \"../utils/CustomInput\";\nimport { Button, Card, Title } from \"react-native-paper\";\nimport mailIcon from \"../../assets/svg/mail.svg\";\nimport passwordIcon from \"../../assets/svg/lock.svg\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nvar loginSchema = yup.object({\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: yup.string().min(8, \"Password must contain at least 8 characters\").required(\"Password is required\")\n});\n\nvar LoginForm = function LoginForm() {\n  var userLoggedIn = AuthService.getCurrentUser();\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleRedirectToRegister = function handleRedirectToRegister() {\n    history.push(\"/register\");\n  };\n\n  if (userLoggedIn) return React.createElement(Redirect, {\n    to: {\n      pathname: \"/home\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 28\n    }\n  });else return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(data, actions) {\n      console.log(data);\n      AuthService.authenticateUser(data).then(function (resp) {\n        console.log(resp);\n\n        if (resp.token) {\n          var user = {\n            token: resp.token,\n            role: resp.role\n          };\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n\n        history.push(\"/home\");\n      }).catch(function (error) {\n        if (error.status === 400) {\n          setError(\"Email ou password incorrect\");\n        }\n      });\n    },\n    validationSchema: loginSchema,\n    validateOnChange: true,\n    validateOnBlur: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var handleSubmit = _ref.handleSubmit,\n        isValid = _ref.isValid;\n    return React.createElement(Card, {\n      style: styles.loginContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, React.createElement(Title, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Connectez vous\"), React.createElement(Field, {\n      icon: mailIcon,\n      component: CustomInput,\n      name: \"email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      icon: passwordIcon,\n      component: CustomInput,\n      name: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, error), React.createElement(Card.Actions, {\n      style: styles.buttons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, React.createElement(Button, {\n      mode: \"flat\",\n      onPress: handleRedirectToRegister,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Cr\\xE9er un compte\"), React.createElement(Button, {\n      mode: \"flat\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Se connecter\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: \"400px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"40px\",\n    paddingBottom: \"40px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 30px rgba(0, 0, 0, 0.1)\",\n    transition: \"0.1s ease\"\n  },\n  textInput: {\n    height: 40,\n    margin: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"25px\"\n  },\n  buttons: {\n    justifyContent: \"space-between\"\n  },\n  error: {\n    textAlign: \"center\",\n    color: \"red\"\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/AuthForm/LoginForm.js"],"names":["React","useEffect","useState","Formik","Field","yup","AuthService","CustomInput","Button","Card","Title","mailIcon","passwordIcon","useHistory","Redirect","loginSchema","object","email","string","required","password","min","LoginForm","userLoggedIn","getCurrentUser","history","error","setError","handleRedirectToRegister","push","pathname","data","actions","console","log","authenticateUser","then","resp","token","user","role","localStorage","setItem","JSON","stringify","catch","status","handleSubmit","isValid","styles","loginContainer","title","buttons","StyleSheet","create","width","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","boxShadow","transition","textInput","height","margin","backgroundColor","textAlign","marginBottom","justifyContent","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, Image, Text } from \"react-native\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"services/authService\";\r\nimport CustomInput from \"components/utils/CustomInput\";\r\nimport { Button, Card, Title } from \"react-native-paper\";\r\nimport mailIcon from \"assets/svg/mail.svg\";\r\nimport passwordIcon from \"assets/svg/lock.svg\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must contain at least 8 characters\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const userLoggedIn = AuthService.getCurrentUser();\r\n  const history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleRedirectToRegister = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  if (userLoggedIn) return <Redirect to={{ pathname: \"/home\" }} />;\r\n  else\r\n    return (\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={(data, actions) => {\r\n          console.log(data);\r\n          // CALL API TO LOGIN USER\r\n          AuthService.authenticateUser(data)\r\n            .then((resp) => {\r\n              console.log(resp);\r\n              if (resp.token) {\r\n                const user = {\r\n                  token: resp.token,\r\n                  role: resp.role,\r\n                };\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n              }\r\n              history.push(\"/home\");\r\n            })\r\n            .catch((error) => {\r\n              if (error.status === 400) {\r\n                setError(\"Email ou password incorrect\");\r\n              }\r\n            });\r\n        }}\r\n        validationSchema={loginSchema}\r\n        validateOnChange={true}\r\n        validateOnBlur={true}\r\n      >\r\n        {({ handleSubmit, isValid }) => (\r\n          <Card style={styles.loginContainer}>\r\n            <Card.Content>\r\n              <Title style={styles.title}>Connectez vous</Title>\r\n              <Field\r\n                icon={mailIcon}\r\n                component={CustomInput}\r\n                name=\"email\"\r\n                label=\"Email\"\r\n              />\r\n              <Field\r\n                icon={passwordIcon}\r\n                component={CustomInput}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              <Text style={styles.error}>{error}</Text>\r\n              <Card.Actions style={styles.buttons}>\r\n                <Button mode=\"flat\" onPress={handleRedirectToRegister}>\r\n                  Créer un compte\r\n                </Button>\r\n                <Button mode=\"flat\" onPress={handleSubmit}>\r\n                  Se connecter\r\n                </Button>\r\n              </Card.Actions>\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loginContainer: {\r\n    width: \"400px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"40px\",\r\n    paddingBottom: \"40px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 0px 30px rgba(0, 0, 0, 0.1)\",\r\n    transition: \"0.1s ease\",\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  buttons: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  error: {\r\n    textAlign: \"center\",\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}