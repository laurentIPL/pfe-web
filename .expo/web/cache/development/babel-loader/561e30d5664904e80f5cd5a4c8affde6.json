{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { NetworkInfo } from \"react-native-network-info\";\n\nfunction getIp() {\n  return _regeneratorRuntime.async(function getIp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(NetworkInfo.getIPAddress());\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default axios.create({\n  baseURL: \"http://\" + getIp() + \":8080/api\",\n  headers: {\n    \"Content-type\": \"application/x-www-form-urlencoded\",\n    Accept: \"application/json\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Codep/Desktop/workspacePFE/PFE/Web_app/src/http-common.js"],"names":["axios","NetworkInfo","getIp","getIPAddress","create","baseURL","headers","Accept"],"mappings":";AASA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAQA,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeD,WAAW,CAACE,YAAZ,EADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,cAAYH,KAAK,EAAjB,cADmB;AAE1BI,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAFiB,CAAb,CAAf","sourcesContent":["// import axios from \"axios\";\r\n\r\n// export default axios.create({\r\n//   baseURL: \"http://localhost:8080/api\",\r\n//   headers: {\r\n//     \"Content-type\": \"application/json\"\r\n//   }\r\n// });\r\n\r\nimport axios from \"axios\";\r\nimport { NetworkInfo } from \"react-native-network-info\";\r\n\r\n// Get Local IP\r\n// const ipAddress = await NetworkInfo.getIPAddress();\r\n\r\n// const uri = `http://${ipAddress}:8080/api`;\r\n\r\n// console.log(\"url : \" + uri);\r\nasync function getIp () {\r\n  return await NetworkInfo.getIPAddress();\r\n}\r\n\r\nexport default axios.create({\r\n  baseURL: `http://${getIp()}:8080/api`,\r\n  headers: {\r\n    \"Content-type\": \"application/x-www-form-urlencoded\",\r\n    Accept: \"application/json\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}