{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DJsimon93\\\\Desktop\\\\IPL\\\\bloc 3\\\\PFE\\\\PFE\\\\Web_app\\\\src\\\\components\\\\ListQRCodes\\\\ListQRCodes.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Service from \"../../services/Service\";\nimport { Card, Button, DataTable } from \"react-native-paper\";\n\nvar ListQRCodes = function ListQRCodes(_ref) {\n  var datas = _ref.datas;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      codes = _useState2[0],\n      setCodes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  var itemsPerPage = 1;\n\n  if (!load) {\n    var array = [];\n    console.log(datas);\n\n    for (var i = 0; i < datas.length; i++) {\n      var temp = React.createElement(DataTable.Row, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(DataTable.Cell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: datas[i].image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 37\n        }\n      })), React.createElement(DataTable.Cell, {\n        numeric: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, datas[i].count));\n      array.push(temp);\n      console.log(i);\n    }\n\n    setLoad(true);\n    setCodes(array);\n  }\n\n  return React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"QR Code\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"nbr of scans\")), codes[currentPage], React.createElement(DataTable.Pagination, {\n    page: currentPage,\n    numberOfPages: codes.length,\n    perPage: itemsPerPage,\n    onPageChange: function onPageChange(page) {\n      setCurrentPage(page);\n    },\n    label: currentPage + 1 + \" of \" + codes.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  downloadButton: {},\n  image: {\n    display: \"block\",\n    height: \"100\",\n    width: \"100\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: 40,\n    backgroundColor: \"red\",\n    objectFit: \"cover\"\n  }\n});\nexport default ListQRCodes;","map":{"version":3,"sources":["C:/Users/DJsimon93/Desktop/IPL/bloc 3/PFE/PFE/Web_app/src/components/ListQRCodes/ListQRCodes.js"],"names":["React","useState","useEffect","Service","Card","Button","DataTable","ListQRCodes","datas","codes","setCodes","currentPage","setCurrentPage","load","setLoad","itemsPerPage","array","console","log","i","length","temp","styles","image","count","push","page","StyleSheet","create","cardContainer","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","downloadButton","display","height","width","padding","backgroundColor","objectFit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Image,Text } from \"react-native\";\r\nimport Service from \"services/Service\";\r\nimport { Card, Button,DataTable } from \"react-native-paper\";\r\n\r\nconst ListQRCodes = ({datas}) => {\r\n    \r\n    const [codes, setCodes] = useState([]);\r\n    const [currentPage,setCurrentPage] = useState(0);\r\n    const [load,setLoad]=useState(false);\r\n\r\n    const itemsPerPage = 1;\r\n    \r\n    if(!load){\r\n        const array= []\r\n        console.log(datas)\r\n        for(var i=0;i<datas.length;i++){\r\n            const temp = (\r\n                <DataTable.Row key={i}>\r\n                    <DataTable.Cell><Image style={styles.image} source={datas[i].image} /></DataTable.Cell>\r\n                    <DataTable.Cell numeric>{datas[i].count}</DataTable.Cell>\r\n                </DataTable.Row>)\r\n                array.push(temp)\r\n                console.log(i)\r\n        }\r\n        \r\n        setLoad(true);\r\n        setCodes(array);\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Card.Content>\r\n          <DataTable>\r\n            <DataTable.Header>\r\n              <DataTable.Title>QR Code</DataTable.Title>\r\n              <DataTable.Title numeric>nbr of scans</DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n          {codes[currentPage]}\r\n            \r\n          <DataTable.Pagination\r\n              page={currentPage}\r\n              numberOfPages={codes.length}\r\n              perPage={itemsPerPage}\r\n              onPageChange={page => {\r\n                setCurrentPage(page)\r\n              }}\r\n              label={`${currentPage+1} of ${codes.length}`}\r\n            />\r\n          </DataTable>\r\n          \r\n        </Card.Content>   \r\n    );\r\n  };\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      paddingTop: \"80px\",\r\n      paddingBottom: \"80px\",\r\n      borderColor: \"#D3D3D3\",\r\n      borderWidth: \"1px\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    downloadButton: {},\r\n    image: {\r\n        display: \"block\",\r\n        height:\"100\",\r\n        width: \"100\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 40,\r\n        backgroundColor: \"red\",\r\n        objectFit: \"cover\",\r\n      }\r\n  });\r\n  \r\n  export default ListQRCodes;\r\n  "]},"metadata":{},"sourceType":"module"}