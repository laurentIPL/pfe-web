{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport r from 'restructure';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\nvar fs = {};\nvar fontkit$1 = {};\nfontkit$1.logErrors = false;\nvar formats = [];\n\nfontkit$1.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit$1.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n  var buffer = fs.readFileSync(filename);\n  return fontkit$1.create(buffer, postscriptName);\n};\n\nfontkit$1.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit$1.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n  return;\n};\n\nfontkit$1.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    length: r.uint16,\n    language: r.uint16,\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    length: r.uint16,\n    language: r.uint16,\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n});\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\nvar head = new r.Struct({\n  version: r.int32,\n  revision: r.int32,\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  glyphDataFormat: r.int16\n});\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  descent: r.int16,\n  lineGap: r.int16,\n  advanceWidthMax: r.uint16,\n  minLeftSideBearing: r.int16,\n  minRightSideBearing: r.int16,\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  numberOfMetrics: r.uint16\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  maxPoints: r.uint16,\n  maxContours: r.uint16,\n  maxComponentPoints: r.uint16,\n  maxComponentContours: r.uint16,\n  maxZones: r.uint16,\n  maxTwilightPoints: r.uint16,\n  maxStorage: r.uint16,\n  maxFunctionDefs: r.uint16,\n  maxInstructionDefs: r.uint16,\n  maxStackElements: r.uint16,\n  maxSizeOfInstructions: r.uint16,\n  maxComponentElements: r.uint16,\n  maxComponentDepth: r.uint16\n});\n\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n}\n\nvar ENCODINGS = [['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], ['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], ['ascii'], ['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']];\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  146: 'macgaelic'\n};\nvar LANGUAGES = [[], {\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, [], {\n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', 'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, 'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref;\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    usWeightClass: r.uint16,\n    usWidthClass: r.uint16,\n    fsType: new r.Bitfield(r.uint16, [null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    ySubscriptYSize: r.int16,\n    ySubscriptXOffset: r.int16,\n    ySubscriptYOffset: r.int16,\n    ySuperscriptXSize: r.int16,\n    ySuperscriptYSize: r.int16,\n    ySuperscriptXOffset: r.int16,\n    ySuperscriptYOffset: r.int16,\n    yStrikeoutSize: r.int16,\n    yStrikeoutPosition: r.int16,\n    sFamilyClass: r.int16,\n    panose: new r.Array(r.uint8, 10),\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    fsSelection: new r.Bitfield(r.uint16, ['italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    usLastCharIndex: r.uint16\n  },\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    italicAngle: r.fixed32,\n    underlinePosition: r.int16,\n    underlineThickness: r.int16,\n    isFixedPitch: r.uint32,\n    minMemType42: r.uint32,\n    maxMemType42: r.uint32,\n    minMemType1: r.uint32,\n    maxMemType1: r.uint32\n  },\n  1: {},\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version != null) return;\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\nvar glyf = new r.Array(new r.Buffer());\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    classCallCheck(this, CFFIndex);\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer();\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer();\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    stream.writeUInt8(offsetType.size());\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, CFFDict);\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = [];\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    });\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    classCallCheck(this, Ptr);\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop();\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]);\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16);\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\nvar Device = new r.Struct({\n  a: r.uint16,\n  b: r.uint16,\n  deltaFormat: r.uint16\n});\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _['axisIndex'] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    classCallCheck(this, PredefinedOp);\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    classCallCheck(this, CFFEncodingVersion);\n    return possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  }\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n}));\n\nvar RangeArray = function (_r$Array) {\n  inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    classCallCheck(this, RangeArray);\n    return possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null]]);\nvar CFFTopDict = new CFFDict([[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    classCallCheck(this, CFFFont);\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  classCallCheck(this, BitAligned);\n};\n\nvar glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n});\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  paletteIndex: r.uint16\n});\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  firstLayerIndex: r.uint16,\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    coordinate: r.int16\n  },\n  2: {\n    coordinate: r.int16,\n    referenceGlyph: r.uint16,\n    baseCoordPoint: r.uint16\n  },\n  3: {\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  })\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  featMinMaxCount: r.uint16,\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount')\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  baseLangSysCount: r.uint16,\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount')\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis),\n    vertAxis: new r.Pointer(r.uint16, Axis)\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    coordinate: r.int16\n  },\n  2: {\n    caretValuePoint: r.uint16\n  },\n  3: {\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n    classCallCheck(this, ValueRecord);\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  8: ChainingContext,\n  9: {\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n});\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  6: ChainingContext,\n  7: {\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n});\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    classCallCheck(this, VariableSizeNumber);\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  usNumSigs: r.uint16,\n  usFlag: r.uint16,\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  rangeGaspBehavior: new r.Bitfield(r.uint16, ['grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit'])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges')\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n});\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    subVersion: r.uint16,\n    length: r.uint16,\n    format: r.uint8,\n    coverage: new r.Bitfield(r.uint8, ['horizontal', 'minimum', 'crossStream', 'override']),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', 'crossStream', 'vertical']),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    reserved: new r.Reserved(r.uint16),\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  xRatio: r.uint8,\n  yStartRatio: r.uint8,\n  yEndRatio: r.uint8\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  yMax: r.int16,\n  yMin: r.int16\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  startsz: r.uint8,\n  endsz: r.uint8,\n  entries: new r.Array(vTable, 'recs')\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  numRecs: r.uint16,\n  numRatios: r.uint16,\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  groups: new r.Array(VdmxGroup, 'numRecs')\n});\nvar vhea = new r.Struct({\n  version: r.uint16,\n  ascent: r.int16,\n  descent: r.int16,\n  lineGap: r.int16,\n  advanceHeightMax: r.int16,\n  minTopSideBearing: r.int16,\n  minBottomSideBearing: r.int16,\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  numberOfMetrics: r.uint16\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    classCallCheck(this, UnboundedArrayAccessor);\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    classCallCheck(this, UnboundedArray);\n    return possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : r.uint16;\n\n  var Shadow = function () {\n    function Shadow(type) {\n      classCallCheck(this, Shadow);\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType)\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var entry = _extends({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n}\n\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  var entry = _extends({\n    newStateOffset: r.uint16,\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis$1 = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis$1, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable$1 = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    addGlyph: r.uint16\n  },\n  2: {\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  4: {\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable$1, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    stateTable: new StateTable()\n  },\n  1: {\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    lookupTable: new LookupTable()\n  },\n  5: {\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post;\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\ntables.HVAR = HVAR;\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables$$1 = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$1.length;\n  this.tables = tables$$1;\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    classCallCheck(this, CmapProcessor);\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [[3, 10], [0, 6], [0, 4], [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]);\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      }\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    classCallCheck(this, KernProcessor);\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      }\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    classCallCheck(this, UnicodeLayoutEngine);\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy();\n\n    if (base.codePoints.length > 1) {\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16;\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint);\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      case 'CCC10':\n      case 'CCC11':\n      case 'CCC12':\n      case 'CCC13':\n      case 'CCC14':\n      case 'CCC15':\n      case 'CCC16':\n      case 'CCC17':\n      case 'CCC18':\n      case 'CCC20':\n      case 'CCC22':\n        return 'Below';\n\n      case 'CCC23':\n        return 'Attached_Above';\n\n      case 'CCC24':\n        return 'Above_Right';\n\n      case 'CCC25':\n      case 'CCC19':\n        return 'Above_Left';\n\n      case 'CCC26':\n        return 'Above';\n\n      case 'CCC21':\n        break;\n\n      case 'CCC27':\n      case 'CCC28':\n      case 'CCC30':\n      case 'CCC31':\n      case 'CCC33':\n      case 'CCC34':\n      case 'CCC35':\n      case 'CCC36':\n        return 'Above';\n\n      case 'CCC29':\n      case 'CCC32':\n        return 'Below';\n\n      case 'CCC103':\n        return 'Below_Right';\n\n      case 'CCC107':\n        return 'Above_Right';\n\n      case 'CCC118':\n        return 'Below';\n\n      case 'CCC122':\n        return 'Above';\n\n      case 'CCC129':\n      case 'CCC132':\n        return 'Below';\n\n      case 'CCC130':\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    classCallCheck(this, BBox);\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  createClass(BBox, [{\n    key: \"width\",\n    get: function get$$1() {\n      return this.maxX - this.minX;\n    }\n  }, {\n    key: \"height\",\n    get: function get$$1() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}();\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++);\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx);\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nvar RTL = {\n  arab: true,\n  hebr: true,\n  syrc: true,\n  thaa: true,\n  cprt: true,\n  khar: true,\n  phnx: true,\n  'nko ': true,\n  lydi: true,\n  avst: true,\n  armi: true,\n  phli: true,\n  prti: true,\n  sarb: true,\n  orkh: true,\n  samr: true,\n  mand: true,\n  merc: true,\n  mero: true,\n  mani: true,\n  mend: true,\n  nbat: true,\n  narb: true,\n  palm: true,\n  phlp: true\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$1) {\n    classCallCheck(this, GlyphRun);\n    this.glyphs = glyphs;\n    this.positions = null;\n    this.stringIndices = null;\n    this.script = script;\n    this.language = language || null;\n    this.direction = direction$$1 || direction(script);\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n\n  createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get$$1() {\n      var width = 0;\n\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      var height = 0;\n\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  classCallCheck(this, GlyphPosition);\n  this.xAdvance = xAdvance;\n  this.yAdvance = yAdvance;\n  this.xOffset = xOffset;\n  this.yOffset = yOffset;\n};\n\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    slashedZero: 4\n  },\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  numr: feature('fractions', 'diagonalFractions'),\n  afrc: feature('fractions', 'verticalFractions'),\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  twid: feature('textSpacing', 'thirdWidthText'),\n  fwid: feature('textSpacing', 'proportionalText'),\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n}\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r$$1 = void 0;\n\n    if (r$$1 = OTMapping[k]) {\n      if (res[r$$1[0]] == null) {\n        res[r$$1[0]] = {};\n      }\n\n      res[r$$1[0]][r$$1[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r$$1 = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r$$1 = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r$$1] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    classCallCheck(this, AATLookupTable);\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        return this.table.values.getItem(glyph);\n\n      case 2:\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid];\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid];\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2:\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    classCallCheck(this, AATStateMachine);\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE;\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n    var row = stateArray.getItem(state);\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex);\n\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000f;\nvar SET_MARK = 0x8000;\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000;\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3fffffff;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03e0;\nvar MARKED_INSERT_COUNT = 0x001f;\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    classCallCheck(this, AATMorxProcessor);\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n        var f = void 0;\n\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2;\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var stringIndex = this.glyphs[glyphIndex].stringIndex;\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        });\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      return glyphs;\n\n    case 1:\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    classCallCheck(this, AATLayoutEngine);\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction$$1) {\n    classCallCheck(this, ShapingPlan);\n    this.font = font;\n    this.script = script;\n    this.direction = direction$$1;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\n\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features);\n\n    _plan.assignGlobalFeatures(glyphs);\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {};\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        var start = i;\n        var end = i + 1;\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\nvar type = \"Buffer\";\nvar data = [0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 49, 160, 1, 149, 1, 106, 254, 237, 216, 43, 79, 3, 65, 20, 5, 224, 217, 7, 77, 41, 138, 127, 64, 37, 146, 4, 131, 37, 4, 143, 68, 33, 193, 224, 192, 129, 3, 137, 196, 32, 81, 4, 73, 80, 72, 28, 18, 137, 194, 224, 144, 224, 48, 156, 210, 153, 228, 102, 152, 217, 206, 238, 206, 62, 40, 231, 38, 95, 102, 186, 219, 121, 246, 238, 35, 29, 167, 74, 173, 194, 26, 108, 192, 88, 127, 254, 43, 229, 14, 236, 194, 30, 236, 195, 33, 28, 195, 41, 156, 195, 5, 92, 194, 21, 92, 139, 118, 183, 112, 167, 63, 79, 60, 136, 250, 163, 168, 211, 124, 123, 130, 35, 237, 25, 94, 224, 181, 7, 243, 106, 203, 155, 168, 191, 247, 96, 62, 68, 68, 68, 68, 68, 68, 68, 68, 77, 153, 252, 255, 243, 209, 131, 121, 16, 17, 17, 17, 17, 205, 179, 124, 113, 234, 108, 216, 140, 45, 244, 125, 2, 247, 240, 9, 235, 35, 165, 14, 70, 211, 115, 55, 40, 183, 149, 82, 155, 195, 230, 214, 247, 5, 89, 246, 251, 248, 18, 142, 45, 59, 142, 119, 101, 37, 77, 126, 48, 24, 255, 57, 18, 15, 121, 222, 85, 143, 21, 185, 238, 55, 179, 228, 142, 210, 230, 106, 83, 150, 108, 215, 167, 144, 115, 146, 107, 180, 247, 42, 100, 125, 49, 84, 217, 219, 54, 100, 86, 61, 100, 29, 174, 188, 50, 231, 149, 40, 125, 17, 227, 58, 144, 227, 133, 132, 92, 179, 60, 86, 55, 22, 28, 253, 15, 180, 162, 223, 63, 52, 39, 50, 209, 167, 221, 110, 16, 97, 254, 170, 196, 92, 92, 121, 82, 55, 247, 138, 246, 198, 117, 126, 214, 184, 161, 209, 245, 117, 87, 55, 247, 124, 237, 103, 221, 235, 203, 228, 158, 252, 174, 235, 217, 230, 155, 87, 217, 28, 50, 247, 100, 223, 111, 92, 37, 18, 171, 173, 221, 79, 172, 103, 113, 215, 57, 226, 123, 255, 48, 235, 111, 43, 143, 235, 230, 115, 209, 250, 154, 232, 219, 247, 190, 22, 59, 98, 237, 113, 90, 113, 158, 190, 107, 47, 177, 74, 83, 79, 244, 88, 33, 239, 48, 105, 65, 255, 174, 241, 204, 88, 161, 115, 45, 243, 124, 47, 234, 211, 126, 158, 184, 230, 103, 215, 237, 251, 101, 157, 240, 237, 99, 19, 121, 247, 13];\nvar trieData = {\n  type: type,\n  data: data\n};\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null;\nvar STATE_TABLE = [[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], [[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n\nvar ArabicShaper = function (_DefaultShaper) {\n  inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    classCallCheck(this, ArabicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = [];\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type$$1 = getShapingClass(glyph.codePoints[0]);\n\n      if (type$$1 === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type$$1];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    classCallCheck(this, GlyphIterator);\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get$$1() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    classCallCheck(this, OTProcessor);\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {};\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n    this.selectScript();\n    this.glyphs = [];\n    this.positions = [];\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$1) {\n    var changed = false;\n    var entry = void 0;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$1 || direction$$1 !== this.direction) {\n      this.direction = direction$$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n    var lookups = [];\n\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11;\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _iterator11[Symbol.iterator]();;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _iterator12[Symbol.iterator]();;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _iterator13[Symbol.iterator]();;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.ruleSets[index];\n\n        for (var _iterator14 = set$$1, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _iterator14[Symbol.iterator]();;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set$$1 = table.classSet[index];\n\n        for (var _iterator15 = set$$1, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _iterator15[Symbol.iterator]();;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.chainRuleSets[index];\n\n        for (var _iterator16 = set$$1, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _iterator16[Symbol.iterator]();;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _iterator17[Symbol.iterator]();;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n    var stringIndex = arguments[4];\n    classCallCheck(this, GlyphInfo);\n    this._font = font;\n    this.codePoints = codePoints;\n    this.stringIndex = stringIndex;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      _extends(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features, this.stringIndex);\n  };\n\n  createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get$$1() {\n      return this._id;\n    },\n    set: function set$$1(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._font.getGlyph(this.id, this.codePoints).advanceWidth;\n    }\n  }]);\n  return GlyphInfo;\n}();\n\nvar _class$5;\n\nvar _temp$1;\n\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    classCallCheck(this, HangulShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100;\nvar V_BASE = 0x1161;\nvar T_BASE = 0x11a7;\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n};\n\nvar X = 0;\nvar L = 1;\nvar V = 2;\nvar T = 3;\nvar LV = 4;\nvar LVT = 5;\nvar M = 6;\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n}\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5;\nvar STATE_TABLE$1 = [[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], [[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], [[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], [[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT;\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  }\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev);\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n\n  if (prevType === LV && type === T) {\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0];\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE);\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n};\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories,\n  decompositions: decompositions$1,\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n};\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  Coeng: 1 << 14,\n  Repha: 1 << 15,\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  Symbol: 1 << 18\n};\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\nvar INDIC_DECOMPOSITIONS = {\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 194, 160, 1, 177, 13, 78, 242, 237, 157, 127, 172, 29, 69, 21, 199, 247, 245, 222, 119, 127, 188, 119, 251, 110, 95, 133, 68, 98, 251, 71, 67, 137, 49, 197, 152, 166, 16, 107, 138, 105, 21, 9, 34, 81, 219, 24, 132, 104, 177, 6, 67, 176, 36, 4, 106, 48, 109, 132, 82, 130, 63, 10, 216, 31, 198, 146, 148, 88, 19, 172, 37, 65, 44, 137, 40, 38, 160, 173, 41, 70, 146, 106, 172, 169, 70, 76, 99, 180, 182, 9, 105, 32, 169, 5, 98, 65, 41, 45, 224, 119, 238, 206, 188, 123, 238, 220, 153, 217, 249, 181, 187, 239, 209, 61, 201, 39, 187, 59, 59, 59, 115, 230, 156, 51, 179, 179, 179, 123, 223, 59, 94, 75, 146, 151, 192, 171, 224, 13, 48, 167, 158, 36, 239, 5, 243, 193, 37, 224, 21, 164, 253, 175, 22, 190, 189, 24, 101, 45, 2, 75, 192, 50, 135, 114, 175, 64, 222, 79, 128, 107, 192, 42, 112, 61, 88, 3, 110, 6, 183, 129, 175, 131, 141, 134, 242, 150, 226, 220, 10, 240, 77, 240, 93, 176, 25, 108, 7, 59, 193, 35, 224, 56, 242, 60, 134, 237, 207, 64, 194, 121, 154, 111, 15, 128, 131, 224, 79, 224, 111, 224, 40, 56, 1, 78, 130, 211, 224, 44, 168, 141, 38, 73, 27, 76, 130, 139, 192, 2, 240, 126, 240, 33, 240, 97, 176, 28, 92, 5, 62, 13, 174, 3, 55, 130, 155, 193, 109, 224, 78, 112, 55, 184, 15, 60, 8, 190, 15, 126, 0, 126, 4, 126, 2, 158, 228, 199, 207, 128, 103, 193, 239, 193, 159, 193, 17, 112, 12, 188, 8, 94, 1, 175, 129, 115, 163, 169, 206, 245, 70, 146, 116, 192, 5, 141, 244, 120, 30, 182, 11, 193, 165, 96, 49, 88, 10, 150, 131, 171, 249, 249, 207, 98, 123, 61, 88, 3, 110, 1, 183, 55, 82, 155, 172, 231, 91, 91, 54, 242, 252, 223, 198, 246, 46, 176, 149, 31, 63, 192, 183, 155, 80, 215, 14, 150, 94, 239, 95, 179, 203, 177, 14, 27, 118, 144, 50, 247, 96, 127, 47, 120, 10, 236, 3, 191, 3, 127, 4, 127, 5, 255, 0, 47, 128, 147, 36, 255, 155, 124, 123, 154, 167, 109, 99, 62, 198, 126, 173, 153, 36, 227, 224, 61, 205, 212, 94, 239, 195, 246, 226, 102, 154, 103, 17, 79, 91, 130, 237, 50, 112, 101, 51, 141, 39, 17, 75, 215, 226, 120, 37, 184, 1, 172, 1, 183, 128, 219, 249, 53, 235, 249, 118, 19, 182, 155, 121, 121, 226, 186, 173, 56, 222, 209, 52, 183, 117, 87, 198, 121, 106, 227, 31, 35, 239, 22, 110, 251, 245, 216, 254, 20, 199, 191, 0, 191, 38, 101, 252, 22, 251, 127, 0, 247, 224, 124, 7, 252, 69, 81, 254, 223, 45, 234, 180, 101, 173, 136, 5, 148, 121, 204, 177, 220, 151, 34, 234, 81, 20, 255, 134, 206, 255, 1, 111, 128, 164, 149, 36, 163, 173, 52, 125, 111, 61, 181, 185, 156, 127, 54, 63, 47, 250, 226, 5, 56, 158, 7, 22, 114, 104, 222, 69, 173, 52, 110, 150, 144, 244, 179, 6, 93, 88, 108, 47, 35, 121, 87, 241, 250, 175, 145, 244, 248, 56, 242, 92, 77, 242, 49, 93, 133, 223, 62, 211, 82, 235, 45, 48, 157, 171, 168, 168, 240, 99, 91, 213, 175, 42, 42, 42, 42, 42, 42, 42, 42, 42, 28, 217, 198, 215, 25, 202, 214, 67, 102, 39, 127, 214, 189, 174, 101, 127, 205, 91, 154, 244, 55, 53, 233, 95, 224, 207, 202, 95, 198, 246, 171, 224, 14, 176, 1, 220, 11, 238, 7, 91, 193, 67, 224, 135, 224, 81, 240, 4, 120, 170, 149, 174, 45, 237, 195, 246, 0, 56, 8, 14, 131, 35, 224, 40, 56, 1, 78, 181, 210, 245, 156, 215, 177, 125, 139, 61, 223, 183, 241, 12, 15, 46, 108, 167, 245, 206, 107, 247, 117, 88, 136, 253, 75, 219, 246, 109, 172, 168, 168, 168, 168, 8, 135, 173, 91, 94, 134, 177, 247, 76, 173, 191, 222, 94, 22, 101, 219, 162, 162, 162, 34, 14, 175, 145, 119, 82, 91, 121, 255, 94, 134, 113, 230, 74, 112, 173, 52, 215, 251, 156, 227, 220, 175, 195, 199, 138, 83, 188, 142, 183, 193, 23, 219, 253, 247, 169, 95, 193, 254, 173, 82, 153, 119, 180, 251, 239, 117, 40, 236, 189, 204, 6, 156, 187, 119, 26, 204, 63, 147, 57, 41, 43, 192, 157, 96, 127, 55, 155, 45, 200, 119, 72, 147, 247, 85, 164, 47, 156, 76, 146, 213, 224, 33, 240, 252, 228, 224, 249, 227, 56, 223, 153, 139, 185, 56, 88, 13, 238, 29, 75, 146, 103, 65, 50, 14, 95, 129, 187, 192, 10, 28, 239, 227, 219, 163, 124, 75, 153, 223, 25, 78, 147, 185, 17, 121, 54, 146, 124, 191, 193, 254, 57, 126, 124, 197, 236, 36, 185, 27, 236, 7, 15, 143, 196, 229, 28, 47, 243, 178, 9, 216, 115, 34, 221, 223, 52, 161, 214, 241, 128, 38, 189, 162, 162, 162, 162, 34, 127, 222, 41, 121, 12, 142, 125, 255, 113, 97, 121, 183, 252, 250, 203, 126, 254, 43, 155, 171, 192, 253, 152, 7, 126, 175, 61, 252, 60, 202, 190, 243, 121, 24, 233, 187, 200, 60, 113, 55, 246, 31, 111, 167, 243, 209, 45, 138, 242, 196, 247, 119, 236, 219, 177, 51, 252, 26, 246, 188, 205, 190, 169, 99, 229, 253, 156, 151, 245, 43, 69, 125, 12, 86, 230, 254, 246, 224, 243, 241, 205, 124, 251, 92, 123, 184, 62, 155, 57, 38, 251, 102, 138, 173, 119, 179, 57, 179, 124, 253, 33, 148, 121, 24, 28, 105, 247, 231, 198, 199, 120, 61, 47, 98, 251, 50, 248, 175, 164, 207, 219, 237, 254, 60, 188, 129, 62, 52, 27, 92, 56, 70, 230, 180, 60, 223, 124, 158, 118, 134, 127, 247, 181, 27, 233, 151, 32, 237, 131, 99, 195, 250, 95, 62, 214, 63, 62, 202, 203, 254, 232, 152, 157, 15, 5, 247, 248, 248, 31, 117, 124, 10, 172, 2, 159, 7, 95, 2, 55, 129, 29, 56, 183, 22, 219, 117, 96, 195, 88, 58, 79, 254, 14, 216, 198, 206, 129, 93, 96, 15, 216, 11, 158, 36, 122, 62, 51, 150, 206, 167, 15, 130, 195, 224, 8, 56, 10, 78, 128, 83, 22, 237, 121, 29, 121, 206, 128, 145, 113, 245, 249, 7, 224, 203, 54, 206, 77, 142, 247, 143, 47, 194, 254, 2, 126, 252, 32, 142, 63, 128, 253, 197, 252, 248, 35, 216, 126, 76, 83, 22, 181, 255, 82, 69, 108, 217, 194, 174, 223, 211, 40, 191, 47, 219, 232, 89, 36, 91, 13, 245, 127, 114, 92, 127, 221, 59, 138, 126, 58, 19, 219, 175, 226, 95, 205, 119, 81, 28, 120, 182, 37, 70, 221, 172, 191, 177, 241, 110, 37, 233, 219, 236, 158, 116, 3, 137, 171, 213, 216, 191, 9, 156, 203, 41, 158, 178, 218, 183, 174, 158, 234, 120, 171, 52, 254, 124, 205, 48, 30, 157, 15, 80, 63, 126, 3, 182, 216, 52, 158, 95, 159, 119, 141, 63, 241, 109, 229, 183, 52, 249, 46, 39, 247, 249, 117, 26, 63, 138, 243, 108, 222, 177, 221, 112, 126, 61, 223, 103, 191, 97, 217, 140, 178, 86, 242, 227, 237, 216, 223, 9, 30, 49, 140, 145, 50, 187, 45, 126, 75, 241, 114, 14, 223, 204, 63, 10, 29, 159, 152, 65, 241, 172, 107, 199, 47, 103, 72, 27, 88, 140, 236, 135, 174, 207, 129, 67, 224, 121, 240, 79, 174, 251, 11, 22, 109, 96, 109, 165, 191, 225, 96, 191, 17, 184, 15, 233, 39, 199, 211, 216, 103, 223, 95, 236, 37, 249, 214, 146, 107, 79, 35, 207, 217, 241, 52, 109, 164, 227, 222, 183, 92, 17, 191, 101, 88, 105, 81, 46, 123, 222, 104, 119, 6, 211, 232, 239, 31, 196, 111, 186, 68, 219, 39, 121, 94, 246, 108, 177, 143, 204, 253, 22, 75, 115, 212, 139, 120, 59, 31, 15, 152, 31, 78, 39, 98, 247, 255, 233, 194, 188, 214, 187, 187, 125, 148, 167, 13, 237, 220, 114, 158, 216, 64, 135, 203, 220, 42, 180, 46, 213, 250, 199, 76, 98, 129, 52, 94, 186, 216, 167, 232, 57, 117, 53, 22, 198, 133, 197, 238, 177, 218, 72, 194, 150, 64, 103, 26, 245, 241, 193, 125, 27, 202, 214, 121, 186, 114, 190, 75, 217, 246, 143, 22, 155, 77, 206, 76, 208, 117, 26, 35, 36, 235, 124, 86, 190, 46, 57, 159, 149, 207, 87, 207, 178, 109, 53, 211, 218, 225, 226, 179, 233, 96, 15, 149, 190, 101, 235, 23, 203, 7, 58, 41, 91, 23, 31, 157, 203, 210, 127, 186, 199, 68, 153, 54, 41, 35, 118, 108, 164, 108, 189, 203, 182, 81, 153, 177, 84, 134, 253, 169, 222, 121, 213, 239, 43, 101, 196, 196, 68, 107, 144, 250, 172, 8, 140, 68, 100, 142, 93, 190, 118, 51, 165, 133, 103, 233, 137, 185, 233, 254, 172, 102, 63, 221, 133, 86, 189, 127, 109, 207, 70, 99, 28, 110, 35, 154, 55, 83, 55, 110, 147, 54, 41, 143, 225, 250, 156, 236, 107, 107, 217, 199, 137, 169, 44, 142, 16, 221, 177, 171, 15, 123, 215, 26, 252, 43, 206, 83, 81, 149, 193, 68, 248, 183, 195, 253, 219, 81, 248, 79, 200, 44, 158, 71, 72, 135, 231, 103, 254, 149, 235, 83, 73, 167, 57, 156, 54, 212, 38, 201, 191, 83, 249, 44, 253, 43, 226, 59, 100, 108, 177, 245, 239, 80, 91, 10, 246, 175, 156, 87, 222, 103, 194, 252, 43, 108, 47, 252, 43, 144, 69, 78, 167, 254, 165, 146, 53, 38, 235, 218, 99, 188, 198, 210, 191, 83, 227, 42, 233, 143, 245, 201, 12, 133, 36, 113, 237, 191, 194, 167, 218, 227, 130, 252, 107, 219, 127, 101, 68, 63, 18, 125, 74, 248, 88, 229, 223, 144, 251, 45, 181, 137, 28, 75, 174, 227, 179, 177, 142, 140, 88, 106, 206, 144, 241, 217, 213, 191, 163, 22, 227, 243, 168, 69, 255, 85, 201, 168, 102, 76, 136, 61, 62, 119, 147, 126, 191, 13, 153, 235, 49, 223, 138, 252, 54, 227, 179, 169, 47, 235, 238, 149, 98, 95, 78, 83, 229, 147, 211, 180, 233, 150, 243, 47, 89, 104, 95, 86, 141, 223, 226, 222, 60, 75, 234, 219, 140, 134, 101, 255, 86, 249, 95, 39, 121, 188, 151, 80, 137, 60, 159, 238, 213, 29, 50, 86, 231, 208, 159, 93, 253, 201, 250, 115, 179, 57, 12, 237, 83, 52, 93, 62, 110, 100, 244, 103, 122, 157, 41, 166, 168, 93, 232, 53, 46, 254, 205, 18, 27, 159, 207, 36, 255, 234, 242, 10, 17, 227, 181, 141, 127, 233, 177, 216, 183, 241, 175, 60, 246, 170, 100, 74, 215, 8, 254, 237, 118, 83, 124, 196, 213, 23, 190, 253, 139, 250, 64, 220, 47, 117, 48, 201, 26, 47, 109, 218, 155, 53, 94, 210, 152, 12, 157, 15, 153, 198, 74, 113, 79, 53, 218, 196, 113, 190, 107, 59, 39, 142, 230, 103, 151, 62, 73, 98, 67, 228, 179, 209, 131, 138, 170, 143, 233, 214, 47, 196, 57, 177, 21, 107, 25, 170, 245, 16, 109, 44, 56, 142, 167, 116, 125, 195, 85, 98, 251, 194, 151, 174, 193, 166, 58, 59, 83, 97, 215, 211, 126, 58, 171, 57, 184, 142, 196, 182, 141, 218, 32, 44, 77, 172, 41, 249, 172, 11, 153, 236, 41, 246, 109, 210, 109, 125, 147, 229, 47, 249, 60, 45, 223, 164, 139, 171, 253, 19, 158, 151, 61, 75, 211, 231, 105, 149, 253, 133, 111, 152, 200, 246, 103, 63, 19, 18, 227, 76, 79, 23, 199, 184, 87, 197, 80, 158, 180, 56, 186, 243, 214, 235, 78, 14, 113, 70, 227, 183, 203, 109, 40, 215, 203, 76, 82, 203, 136, 13, 235, 113, 50, 194, 88, 76, 197, 103, 13, 152, 174, 245, 178, 251, 51, 139, 147, 134, 78, 247, 73, 123, 122, 237, 119, 200, 159, 7, 162, 63, 152, 160, 107, 213, 170, 123, 185, 79, 236, 170, 164, 236, 49, 191, 135, 229, 252, 65, 23, 43, 170, 251, 42, 139, 157, 222, 220, 154, 61, 247, 79, 12, 142, 85, 83, 176, 186, 61, 231, 85, 116, 109, 66, 213, 6, 89, 31, 99, 204, 142, 164, 121, 198, 107, 41, 34, 143, 184, 86, 164, 83, 104, 89, 153, 117, 217, 48, 57, 108, 75, 85, 189, 140, 22, 175, 191, 167, 135, 165, 253, 196, 181, 242, 123, 152, 172, 24, 87, 73, 87, 218, 15, 69, 85, 142, 77, 249, 73, 224, 245, 161, 245, 231, 221, 62, 159, 114, 139, 128, 74, 222, 117, 248, 158, 207, 171, 189, 178, 248, 172, 99, 244, 174, 147, 210, 108, 158, 73, 98, 213, 175, 130, 214, 111, 211, 238, 188, 234, 119, 149, 24, 246, 103, 226, 93, 127, 81, 247, 104, 155, 117, 149, 8, 107, 4, 194, 247, 166, 245, 24, 25, 250, 172, 49, 181, 38, 195, 239, 253, 189, 253, 217, 41, 34, 93, 85, 6, 155, 35, 116, 44, 238, 75, 98, 46, 58, 101, 255, 192, 117, 207, 208, 49, 160, 168, 241, 59, 70, 253, 177, 245, 103, 244, 236, 91, 84, 31, 80, 244, 99, 155, 103, 25, 121, 238, 79, 69, 164, 247, 222, 81, 27, 158, 25, 76, 107, 30, 42, 123, 90, 63, 99, 198, 180, 137, 199, 90, 160, 235, 253, 110, 200, 126, 30, 62, 163, 162, 123, 158, 160, 107, 71, 186, 103, 12, 149, 127, 101, 196, 188, 87, 171, 191, 195, 243, 135, 210, 207, 57, 198, 183, 170, 237, 81, 234, 215, 197, 133, 56, 239, 242, 28, 61, 225, 183, 190, 160, 91, 39, 84, 173, 17, 54, 106, 131, 215, 210, 216, 9, 29, 255, 67, 175, 167, 239, 194, 196, 61, 207, 251, 254, 155, 67, 12, 201, 182, 203, 242, 135, 156, 62, 94, 55, 151, 31, 210, 159, 92, 97, 247, 253, 86, 210, 95, 139, 82, 225, 122, 31, 180, 246, 91, 158, 247, 50, 197, 125, 70, 229, 11, 214, 215, 6, 214, 78, 70, 236, 237, 205, 230, 77, 202, 58, 53, 99, 131, 109, 220, 100, 221, 31, 101, 25, 154, 63, 104, 108, 97, 138, 73, 211, 152, 68, 215, 45, 91, 53, 115, 221, 46, 247, 233, 129, 24, 39, 250, 134, 206, 159, 178, 100, 234, 219, 219, 49, 62, 255, 29, 243, 96, 174, 132, 42, 77, 140, 99, 99, 131, 125, 91, 148, 97, 235, 207, 88, 184, 214, 23, 122, 158, 230, 51, 109, 77, 215, 132, 180, 51, 143, 178, 109, 235, 179, 173, 195, 75, 151, 81, 208, 232, 31, 199, 184, 23, 248, 232, 49, 213, 110, 139, 103, 76, 37, 205, 196, 249, 55, 173, 190, 190, 163, 18, 211, 231, 62, 18, 90, 87, 12, 253, 99, 180, 195, 86, 92, 117, 170, 119, 226, 182, 81, 27, 183, 57, 83, 84, 61, 42, 95, 250, 92, 155, 87, 172, 196, 142, 185, 60, 237, 230, 83, 135, 141, 174, 190, 82, 100, 204, 248, 232, 80, 196, 249, 162, 37, 111, 155, 103, 181, 189, 104, 253, 99, 148, 17, 59, 22, 243, 142, 233, 188, 218, 90, 100, 125, 182, 229, 229, 41, 54, 122, 210, 247, 32, 242, 247, 4, 242, 179, 42, 253, 93, 83, 158, 235, 127, 170, 119, 115, 58, 123, 133, 250, 62, 215, 117, 14, 151, 53, 73, 213, 121, 221, 154, 133, 106, 13, 97, 164, 255, 155, 19, 151, 248, 138, 246, 59, 224, 28, 215, 138, 92, 214, 89, 109, 126, 75, 68, 227, 38, 120, 61, 212, 103, 125, 194, 102, 205, 130, 147, 21, 207, 165, 188, 119, 177, 137, 103, 5, 173, 90, 159, 41, 251, 231, 60, 126, 152, 214, 209, 92, 223, 127, 119, 73, 127, 49, 174, 161, 234, 236, 18, 217, 230, 166, 53, 75, 186, 150, 56, 240, 126, 168, 238, 127, 63, 11, 233, 47, 38, 127, 139, 113, 222, 170, 221, 1, 241, 222, 235, 47, 101, 172, 119, 91, 198, 169, 188, 254, 171, 122, 255, 148, 37, 33, 223, 136, 38, 30, 254, 29, 154, 79, 4, 218, 70, 46, 67, 59, 111, 25, 73, 223, 115, 54, 20, 223, 39, 198, 246, 141, 238, 221, 172, 234, 61, 30, 211, 77, 108, 243, 22, 211, 124, 206, 166, 173, 170, 54, 169, 202, 20, 223, 180, 134, 232, 101, 51, 39, 182, 61, 239, 83, 119, 55, 194, 121, 215, 241, 50, 84, 95, 27, 188, 99, 157, 198, 137, 237, 248, 151, 49, 134, 100, 221, 127, 153, 190, 226, 155, 92, 33, 161, 243, 47, 23, 31, 196, 242, 109, 168, 207, 77, 250, 184, 182, 49, 182, 254, 166, 244, 68, 147, 183, 72, 29, 125, 109, 173, 146, 50, 234, 13, 109, 111, 17, 254, 14, 185, 222, 166, 189, 177, 219, 17, 98, 203, 44, 187, 230, 113, 62, 203, 62, 182, 118, 178, 21, 223, 120, 202, 58, 31, 18, 47, 161, 101, 219, 232, 239, 122, 189, 141, 221, 242, 138, 197, 24, 109, 241, 41, 67, 213, 230, 50, 165, 8, 155, 103, 197, 102, 30, 49, 145, 151, 132, 212, 19, 67, 47, 155, 254, 101, 202, 151, 135, 255, 116, 109, 44, 35, 126, 92, 252, 83, 68, 28, 21, 97, 243, 60, 234, 114, 209, 169, 140, 250, 203, 106, 127, 86, 157, 236, 185, 109, 84, 250, 150, 152, 109, 233, 223, 225, 162, 34, 242, 201, 127, 199, 110, 96, 13, 205, 112, 28, 27, 89, 26, 100, 13, 121, 168, 237, 19, 254, 207, 145, 58, 251, 197, 236, 195, 62, 117, 217, 214, 235, 91, 102, 140, 54, 186, 74, 104, 27, 125, 203, 142, 85, 71, 104, 253, 121, 248, 64, 64, 191, 207, 23, 127, 23, 105, 218, 189, 211, 179, 88, 11, 151, 105, 100, 188, 183, 144, 197, 250, 61, 65, 224, 120, 97, 146, 222, 119, 232, 62, 127, 107, 57, 178, 125, 179, 254, 46, 50, 123, 103, 74, 223, 201, 229, 53, 254, 217, 148, 97, 180, 87, 1, 241, 152, 21, 155, 38, 91, 138, 223, 6, 9, 223, 251, 252, 46, 196, 57, 198, 10, 236, 183, 114, 140, 216, 72, 148, 191, 53, 158, 163, 127, 93, 255, 102, 56, 123, 127, 106, 122, 47, 63, 133, 244, 183, 39, 166, 252, 229, 25, 23, 212, 230, 177, 198, 54, 159, 49, 46, 150, 175, 122, 101, 229, 112, 191, 96, 113, 198, 124, 36, 222, 207, 103, 141, 63, 38, 253, 133, 142, 42, 93, 125, 245, 247, 185, 222, 212, 215, 202, 238, 67, 46, 136, 223, 41, 101, 222, 143, 164, 119, 68, 3, 237, 13, 253, 94, 199, 243, 239, 181, 210, 124, 67, 182, 143, 236, 123, 122, 94, 151, 87, 72, 151, 252, 255, 3, 29, 66, 228, 191, 143, 79, 199, 180, 169, 242, 244, 166, 211, 250, 132, 246, 43, 97, 19, 185, 110, 211, 183, 79, 84, 178, 206, 103, 9, 213, 161, 140, 251, 140, 77, 124, 235, 206, 211, 184, 20, 115, 50, 249, 94, 147, 37, 161, 253, 35, 175, 182, 11, 145, 207, 171, 218, 28, 243, 25, 74, 70, 246, 185, 172, 95, 12, 255, 187, 66, 219, 175, 250, 6, 195, 69, 138, 244, 63, 253, 237, 105, 86, 204, 143, 215, 213, 107, 54, 177, 245, 15, 149, 162, 238, 133, 3, 117, 90, 124, 67, 145, 213, 175, 92, 237, 151, 53, 207, 180, 125, 134, 115, 125, 62, 148, 197, 247, 121, 209, 247, 121, 201, 183, 126, 157, 62, 62, 207, 200, 62, 245, 135, 232, 234, 98, 87, 185, 158, 16, 201, 91, 207, 34, 36, 166, 45, 99, 180, 53, 52, 62, 105, 186, 156, 199, 116, 141, 79, 27, 92, 174, 205, 210, 53, 164, 111, 248, 232, 31, 35, 94, 109, 245, 160, 182, 178, 105, 115, 72, 123, 66, 36, 15, 219, 134, 138, 169, 204, 24, 62, 116, 209, 33, 73, 134, 235, 119, 209, 67, 149, 87, 46, 199, 164, 131, 46, 77, 181, 85, 213, 105, 210, 223, 166, 60, 213, 245, 46, 177, 98, 123, 141, 174, 45, 121, 245, 153, 172, 152, 176, 169, 39, 207, 250, 93, 36, 70, 57, 161, 250, 231, 209, 254, 24, 182, 45, 194, 23, 121, 215, 27, 234, 223, 80, 125, 66, 109, 20, 106, 243, 60, 226, 168, 104, 41, 163, 78, 157, 252, 31];\nvar trieData$1 = {\n  type: type$1,\n  data: data$1\n};\n\nvar _class$6;\n\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine = new StateMachine(indicMachine);\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    classCallCheck(this, IndicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  classCallCheck(this, IndicInfo);\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags$$1 = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags$$1[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n      var _i5 = start;\n\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    }\n\n    var base = end;\n    var limit = start;\n    var hasReph = false;\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo;\n\n            if (isConsonant(glyphs[_i6])) {\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              }\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          } while (_i6 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          base = start;\n\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    }\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    }\n\n    var last = base;\n\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr));\n\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    }\n\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    }\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    }\n\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          }\n\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--;\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var tryPref = !!features.pref;\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        }\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++;\n\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    if (start + 1 < end && start < base) {\n      var newPos = base === end ? base - 2 : base - 1;\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start;\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    }\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false;\n\n      if (rephPos !== POSITIONS.After_Post) {\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      if (!found) {\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            var _newPos = base;\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              }\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 169, 208, 1, 81, 12, 174, 243, 237, 156, 127, 168, 29, 71, 21, 199, 231, 221, 247, 222, 253, 245, 110, 94, 242, 108, 126, 244, 217, 24, 155, 182, 20, 35, 98, 173, 138, 105, 21, 12, 109, 197, 90, 5, 83, 21, 141, 69, 169, 173, 149, 38, 42, 216, 7, 66, 26, 80, 82, 193, 104, 161, 137, 86, 37, 226, 175, 170, 49, 40, 36, 129, 162, 45, 20, 76, 171, 96, 219, 32, 54, 234, 31, 166, 138, 86, 13, 180, 193, 254, 209, 98, 181, 85, 12, 175, 180, 20, 191, 227, 206, 225, 158, 119, 50, 51, 59, 179, 187, 179, 123, 159, 185, 7, 62, 204, 238, 236, 236, 204, 153, 51, 115, 118, 103, 102, 127, 60, 223, 82, 106, 98, 82, 169, 30, 152, 3, 27, 193, 38, 112, 41, 184, 220, 196, 205, 87, 16, 190, 21, 188, 29, 188, 27, 124, 192, 147, 238, 122, 112, 179, 37, 126, 7, 88, 0, 59, 193, 110, 240, 69, 240, 101, 176, 31, 220, 101, 248, 33, 75, 127, 8, 252, 4, 252, 20, 252, 194, 146, 223, 207, 192, 49, 240, 60, 234, 255, 107, 163, 219, 156, 65, 199, 81, 248, 40, 194, 63, 128, 147, 224, 73, 240, 12, 248, 55, 120, 1, 76, 78, 41, 53, 3, 230, 192, 60, 216, 8, 54, 129, 75, 192, 102, 176, 101, 42, 75, 127, 53, 194, 173, 96, 27, 248, 8, 216, 14, 110, 1, 59, 193, 110, 176, 7, 236, 3, 251, 193, 93, 224, 32, 56, 2, 238, 53, 251, 247, 131, 135, 192, 113, 112, 2, 60, 6, 158, 0, 79, 129, 231, 192, 105, 240, 210, 84, 166, 115, 123, 90, 169, 89, 176, 118, 58, 219, 223, 128, 240, 98, 240, 90, 240, 6, 240, 22, 112, 37, 120, 167, 57, 254, 94, 132, 31, 4, 55, 128, 29, 96, 97, 58, 171, 183, 102, 23, 219, 174, 130, 207, 33, 191, 61, 21, 231, 201, 217, 43, 242, 254, 42, 246, 191, 5, 126, 0, 14, 131, 123, 166, 179, 250, 30, 5, 15, 130, 71, 192, 239, 114, 244, 121, 12, 199, 159, 0, 79, 129, 127, 152, 243, 79, 131, 23, 193, 84, 91, 169, 65, 59, 139, 91, 141, 112, 61, 184, 8, 188, 166, 61, 236, 75, 111, 196, 246, 102, 176, 5, 92, 13, 182, 130, 109, 230, 156, 235, 77, 120, 51, 194, 79, 129, 237, 172, 15, 238, 196, 254, 238, 118, 58, 91, 17, 95, 64, 25, 95, 2, 95, 7, 223, 5, 63, 2, 119, 179, 114, 239, 195, 246, 207, 193, 49, 19, 119, 28, 225, 9, 240, 71, 112, 50, 64, 191, 39, 145, 230, 153, 118, 102, 171, 103, 193, 34, 56, 4, 84, 71, 169, 110, 39, 139, 95, 129, 112, 208, 201, 210, 175, 52, 113, 154, 181, 108, 155, 179, 1, 241, 23, 131, 87, 139, 227, 175, 119, 164, 39, 46, 235, 100, 101, 79, 49, 189, 125, 233, 121, 186, 162, 232, 60, 222, 132, 114, 183, 128, 171, 192, 53, 96, 43, 216, 6, 62, 220, 241, 159, 123, 147, 56, 62, 152, 60, 51, 205, 39, 145, 230, 211, 224, 51, 157, 172, 223, 124, 158, 217, 224, 164, 167, 94, 119, 32, 221, 87, 192, 55, 193, 1, 135, 30, 54, 255, 63, 212, 25, 214, 235, 199, 157, 172, 175, 220, 135, 240, 1, 83, 174, 222, 126, 216, 108, 223, 157, 99, 219, 42, 236, 59, 102, 204, 217, 200, 216, 127, 198, 140, 25, 51, 102, 204, 152, 49, 99, 198, 196, 50, 103, 153, 79, 54, 205, 225, 246, 112, 77, 96, 123, 128, 126, 191, 98, 115, 215, 223, 136, 121, 236, 39, 60, 231, 83, 221, 127, 143, 115, 254, 218, 201, 214, 97, 254, 134, 240, 239, 224, 159, 224, 52, 120, 201, 196, 183, 187, 208, 167, 155, 165, 95, 131, 112, 30, 108, 4, 155, 186, 217, 241, 75, 17, 94, 14, 174, 48, 251, 215, 32, 124, 15, 184, 174, 235, 46, 95, 167, 187, 209, 115, 124, 204, 152, 49, 99, 198, 164, 101, 110, 178, 89, 154, 174, 255, 152, 49, 99, 210, 144, 218, 191, 119, 96, 252, 184, 208, 205, 158, 11, 221, 138, 240, 54, 203, 120, 242, 246, 110, 246, 108, 95, 111, 223, 41, 142, 127, 99, 4, 198, 159, 31, 27, 100, 236, 1, 199, 192, 219, 2, 88, 4, 151, 173, 88, 26, 183, 139, 237, 31, 192, 246, 159, 192, 185, 179, 74, 93, 11, 22, 102, 77, 60, 194, 199, 103, 135, 233, 158, 197, 246, 1, 216, 224, 113, 112, 126, 79, 169, 15, 129, 239, 128, 27, 176, 255, 189, 118, 22, 254, 210, 236, 115, 218, 253, 51, 227, 36, 87, 34, 205, 71, 89, 186, 131, 216, 62, 101, 246, 47, 152, 193, 49, 112, 112, 166, 249, 251, 79, 211, 228, 249, 203, 247, 181, 237, 76, 63, 61, 130, 240, 30, 112, 180, 155, 205, 19, 31, 236, 198, 223, 79, 247, 154, 52, 131, 156, 244, 182, 252, 30, 41, 80, 158, 43, 95, 121, 254, 111, 145, 247, 163, 221, 165, 233, 72, 223, 189, 158, 242, 254, 130, 115, 78, 129, 167, 187, 195, 186, 233, 116, 207, 97, 255, 63, 38, 191, 23, 88, 190, 147, 61, 119, 253, 108, 249, 199, 182, 101, 108, 251, 207, 64, 159, 21, 96, 13, 88, 15, 46, 2, 175, 2, 15, 152, 252, 94, 135, 237, 205, 96, 11, 184, 202, 28, 127, 23, 120, 159, 241, 215, 155, 192, 142, 222, 48, 191, 5, 108, 239, 2, 159, 5, 123, 192, 62, 240, 53, 240, 109, 112, 176, 151, 175, 143, 126, 159, 230, 8, 210, 221, 235, 72, 171, 231, 237, 247, 227, 216, 67, 189, 225, 254, 113, 108, 159, 96, 251, 127, 238, 101, 239, 150, 232, 253, 83, 216, 126, 218, 83, 110, 81, 91, 219, 242, 104, 218, 151, 99, 124, 189, 46, 92, 229, 255, 171, 23, 231, 167, 203, 217, 86, 77, 151, 191, 216, 91, 154, 239, 139, 198, 246, 45, 220, 15, 251, 253, 102, 108, 62, 138, 109, 62, 74, 253, 109, 208, 175, 215, 38, 190, 119, 132, 238, 48, 239, 19, 173, 238, 103, 225, 121, 8, 47, 4, 155, 204, 254, 37, 253, 97, 218, 205, 125, 127, 254, 189, 142, 255, 62, 220, 20, 121, 239, 73, 133, 188, 71, 245, 102, 211, 102, 87, 32, 124, 71, 205, 237, 87, 117, 255, 91, 110, 126, 233, 211, 61, 164, 14, 186, 13, 175, 101, 253, 88, 191, 187, 247, 126, 236, 95, 215, 207, 250, 255, 97, 246, 126, 163, 78, 183, 200, 222, 49, 189, 17, 251, 31, 55, 113, 183, 228, 244, 127, 27, 139, 145, 125, 141, 222, 49, 60, 29, 144, 86, 191, 11, 120, 107, 127, 105, 28, 127, 47, 241, 97, 51, 166, 166, 186, 223, 102, 194, 219, 17, 238, 235, 12, 245, 191, 83, 212, 107, 191, 217, 63, 106, 25, 147, 47, 71, 22, 91, 19, 255, 99, 20, 100, 130, 209, 18, 251, 60, 13, 133, 147, 236, 248, 84, 32, 50, 63, 229, 136, 75, 45, 163, 97, 241, 177, 144, 80, 95, 106, 89, 160, 182, 106, 89, 206, 107, 137, 112, 218, 64, 18, 210, 183, 82, 247, 133, 201, 196, 249, 87, 45, 237, 166, 21, 40, 33, 33, 109, 121, 54, 249, 190, 205, 103, 206, 38, 153, 112, 48, 10, 34, 245, 224, 215, 188, 229, 46, 182, 49, 131, 220, 94, 46, 82, 180, 207, 216, 198, 82, 69, 218, 87, 218, 111, 57, 217, 176, 46, 191, 11, 205, 59, 198, 246, 85, 251, 33, 111, 123, 215, 117, 41, 143, 255, 119, 113, 205, 59, 202, 74, 81, 123, 147, 14, 29, 6, 166, 158, 193, 243, 157, 170, 233, 1, 76, 129, 213, 140, 217, 215, 219, 3, 19, 174, 16, 244, 4, 125, 193, 44, 59, 151, 234, 184, 146, 217, 172, 199, 242, 10, 213, 143, 210, 23, 153, 23, 170, 18, 118, 33, 253, 187, 134, 144, 188, 148, 72, 39, 247, 139, 232, 16, 114, 156, 139, 75, 167, 144, 246, 37, 25, 24, 228, 190, 110, 223, 16, 31, 234, 91, 226, 92, 117, 146, 101, 199, 218, 40, 239, 254, 231, 59, 206, 253, 207, 87, 182, 175, 46, 69, 116, 142, 109, 223, 188, 109, 45, 51, 38, 180, 181, 175, 20, 242, 95, 185, 63, 107, 73, 235, 147, 144, 254, 152, 119, 142, 11, 221, 46, 171, 84, 54, 215, 165, 249, 238, 92, 164, 126, 161, 237, 235, 107, 147, 24, 157, 171, 106, 223, 162, 254, 75, 109, 202, 175, 209, 74, 45, 189, 62, 87, 37, 101, 253, 151, 198, 174, 121, 101, 228, 149, 223, 132, 253, 233, 222, 87, 228, 250, 153, 39, 210, 55, 101, 125, 165, 158, 69, 237, 223, 18, 245, 43, 42, 218, 191, 242, 238, 181, 182, 122, 184, 108, 110, 75, 171, 44, 233, 93, 233, 92, 229, 216, 226, 67, 251, 16, 23, 242, 37, 62, 254, 225, 50, 80, 75, 219, 159, 239, 135, 250, 159, 237, 254, 233, 146, 34, 245, 176, 173, 137, 230, 173, 21, 240, 177, 80, 204, 120, 40, 198, 31, 203, 250, 115, 172, 29, 244, 190, 111, 60, 171, 212, 153, 215, 82, 190, 159, 215, 158, 52, 222, 181, 217, 65, 74, 89, 127, 46, 35, 212, 230, 69, 198, 187, 77, 181, 175, 43, 45, 137, 188, 94, 167, 104, 95, 155, 255, 75, 145, 186, 150, 105, 223, 151, 25, 138, 72, 89, 191, 41, 226, 99, 100, 127, 9, 183, 65, 222, 245, 242, 156, 128, 186, 133, 180, 65, 29, 254, 37, 215, 26, 108, 235, 14, 49, 254, 85, 68, 183, 20, 109, 25, 147, 46, 68, 15, 46, 54, 31, 227, 125, 133, 124, 145, 218, 108, 5, 75, 51, 112, 224, 235, 15, 177, 54, 37, 61, 138, 172, 29, 213, 233, 115, 33, 109, 211, 99, 113, 114, 45, 199, 54, 142, 37, 105, 41, 127, 222, 250, 252, 142, 96, 149, 9, 245, 177, 178, 207, 243, 165, 61, 21, 11, 243, 226, 93, 18, 219, 207, 229, 113, 101, 9, 109, 186, 196, 218, 95, 153, 253, 57, 71, 190, 46, 63, 146, 246, 87, 44, 204, 171, 155, 45, 79, 91, 188, 124, 134, 94, 148, 22, 11, 229, 152, 211, 53, 38, 173, 218, 39, 116, 158, 211, 34, 92, 165, 220, 18, 234, 99, 169, 253, 152, 11, 95, 147, 117, 173, 209, 74, 104, 140, 199, 247, 59, 106, 184, 198, 234, 171, 239, 234, 8, 84, 100, 250, 20, 104, 201, 155, 235, 76, 123, 142, 241, 243, 93, 253, 216, 230, 19, 54, 73, 221, 55, 98, 176, 221, 91, 53, 3, 101, 239, 47, 122, 13, 95, 247, 153, 89, 19, 183, 6, 172, 85, 217, 53, 106, 46, 178, 108, 105, 67, 122, 79, 39, 79, 87, 215, 115, 131, 57, 181, 84, 143, 190, 26, 142, 177, 100, 30, 93, 11, 60, 47, 89, 247, 34, 182, 157, 83, 195, 177, 9, 229, 99, 43, 183, 107, 236, 58, 101, 209, 195, 7, 157, 75, 237, 215, 196, 243, 125, 91, 31, 111, 250, 89, 99, 158, 159, 87, 97, 167, 84, 245, 72, 97, 163, 162, 247, 23, 25, 39, 199, 38, 41, 203, 183, 193, 203, 143, 177, 81, 213, 229, 199, 74, 21, 246, 87, 53, 151, 159, 167, 155, 22, 126, 223, 176, 205, 29, 92, 115, 50, 130, 198, 31, 125, 53, 28, 123, 232, 123, 240, 58, 149, 141, 191, 166, 25, 180, 6, 163, 183, 165, 143, 200, 251, 48, 181, 85, 108, 253, 83, 137, 239, 26, 88, 199, 117, 81, 223, 87, 171, 238, 3, 49, 54, 229, 125, 67, 142, 55, 8, 57, 86, 227, 114, 174, 97, 37, 219, 150, 204, 155, 124, 166, 45, 231, 203, 107, 125, 236, 251, 3, 85, 251, 77, 217, 190, 87, 180, 220, 162, 231, 75, 248, 186, 85, 25, 253, 164, 132, 222, 183, 83, 147, 178, 15, 144, 31, 208, 218, 20, 191, 78, 165, 236, 151, 52, 70, 215, 190, 178, 142, 49, 47, 208, 50, 203, 116, 115, 249, 43, 159, 99, 146, 95, 219, 174, 241, 114, 110, 201, 225, 215, 119, 146, 233, 136, 58, 185, 164, 236, 249, 121, 227, 214, 212, 99, 90, 110, 35, 221, 70, 117, 191, 19, 166, 239, 189, 182, 57, 161, 92, 87, 112, 181, 245, 108, 78, 254, 82, 66, 245, 202, 91, 71, 10, 225, 229, 224, 60, 19, 186, 136, 157, 59, 52, 213, 78, 28, 126, 255, 180, 93, 99, 200, 151, 103, 89, 186, 212, 253, 70, 174, 221, 83, 72, 215, 158, 144, 103, 102, 90, 100, 91, 187, 234, 46, 175, 65, 124, 189, 96, 157, 135, 245, 6, 125, 237, 161, 119, 167, 92, 101, 199, 92, 159, 185, 132, 92, 119, 66, 165, 236, 220, 154, 95, 95, 116, 250, 149, 14, 40, 141, 45, 190, 235, 57, 143, 191, 231, 73, 98, 139, 163, 113, 68, 71, 196, 119, 44, 113, 49, 242, 10, 176, 129, 237, 79, 58, 8, 181, 151, 92, 159, 138, 181, 119, 204, 122, 72, 72, 124, 108, 222, 242, 222, 21, 115, 158, 150, 87, 6, 212, 49, 70, 108, 99, 244, 208, 243, 228, 120, 161, 14, 105, 114, 44, 170, 28, 219, 174, 227, 161, 245, 9, 57, 47, 79, 39, 91, 104, 43, 39, 70, 175, 178, 245, 168, 114, 253, 51, 70, 31, 223, 24, 33, 180, 77, 93, 249, 132, 30, 47, 210, 183, 108, 229, 87, 93, 142, 111, 236, 20, 34, 177, 249, 165, 210, 183, 108, 154, 148, 246, 108, 162, 92, 87, 91, 142, 130, 14, 117, 233, 209, 132, 52, 173, 219, 40, 244, 229, 24, 61, 38, 19, 235, 236, 179, 187, 28, 115, 150, 181, 95, 21, 246, 175, 67, 242, 202, 170, 195, 254, 117, 181, 115, 19, 253, 42, 69, 191, 41, 42, 41, 250, 87, 213, 58, 22, 121, 246, 226, 154, 135, 185, 242, 204, 91, 47, 116, 157, 95, 180, 14, 69, 230, 114, 182, 244, 82, 175, 186, 165, 78, 255, 169, 203, 63, 235, 180, 135, 77, 228, 218, 104, 25, 61, 138, 156, 151, 66, 242, 234, 91, 85, 59, 184, 242, 169, 187, 31, 196, 74, 83, 253, 186, 108, 157, 71, 193, 247, 82, 60, 199, 161, 124, 99, 211, 242, 117, 98, 190, 110, 108, 123, 15, 173, 99, 137, 171, 18, 190, 134, 78, 107, 248, 69, 109, 31, 122, 94, 213, 117, 136, 93, 175, 181, 189, 15, 88, 39, 250, 25, 173, 237, 91, 25, 23, 161, 223, 18, 150, 121, 126, 193, 197, 246, 44, 183, 8, 121, 122, 186, 198, 38, 46, 125, 109, 239, 56, 243, 103, 18, 177, 245, 15, 65, 62, 23, 149, 207, 74, 249, 115, 38, 106, 215, 24, 209, 250, 54, 249, 44, 88, 66, 207, 248, 92, 239, 12, 211, 115, 96, 253, 60, 110, 141, 129, 254, 21, 17, 11, 73, 209, 254, 234, 107, 111, 122, 239, 34, 181, 189, 66, 203, 176, 189, 95, 193, 159, 177, 83, 156, 124, 223, 58, 68, 120, 57, 235, 2, 116, 161, 190, 106, 59, 63, 196, 254, 178, 29, 171, 182, 33, 23, 126, 63, 209, 199, 232, 121, 98, 149, 126, 210, 99, 33, 181, 131, 108, 55, 215, 121, 116, 127, 166, 176, 78, 41, 98, 127, 221, 215, 120, 223, 235, 43, 251, 125, 147, 190, 1, 8, 17, 158, 191, 237, 155, 121, 254, 94, 224, 132, 201, 187, 238, 239, 158, 203, 136, 28, 207, 156, 95, 146, 208, 57, 188, 79, 66, 230, 252, 182, 99, 121, 105, 93, 229, 248, 210, 209, 220, 44, 197, 248, 218, 166, 71, 75, 249, 109, 102, 91, 151, 137, 41, 67, 198, 41, 101, 183, 117, 93, 34, 251, 159, 109, 205, 35, 239, 156, 50, 229, 165, 154, 59, 21, 145, 81, 153, 159, 151, 153, 195, 74, 29, 203, 206, 133, 155, 92, 147, 160, 242, 235, 166, 42, 73, 221, 167, 83, 231, 31, 98, 15, 125, 239, 148, 223, 124, 251, 190, 53, 161, 116, 244, 46, 88, 200, 120, 173, 170, 177, 88, 200, 125, 95, 207, 81, 102, 212, 153, 239, 242, 105, 201, 123, 55, 53, 100, 28, 17, 51, 119, 9, 145, 212, 254, 89, 149, 158, 203, 89, 7, 95, 153, 124, 206, 64, 255, 85, 73, 217, 95, 109, 243, 4, 215, 55, 84, 190, 127, 110, 230, 205, 171, 165, 108, 44, 73, 29, 227, 240, 11, 84, 243, 255, 66, 181, 253, 87, 79, 190, 211, 172, 109, 175, 175, 47, 182, 113, 51, 95, 227, 106, 66, 127, 87, 223, 242, 125, 219, 77, 199, 232, 187, 110, 21, 81, 70, 89, 127, 174, 178, 190, 178, 77, 234, 46, 223, 247, 79, 70, 159, 31, 235, 115, 207, 81, 195, 127, 28, 217, 252, 121, 70, 13, 219, 138, 215, 47, 198, 47, 109, 115, 188, 170, 109, 64, 101, 133, 74, 149, 101, 22, 109, 51, 249, 156, 67, 254, 247, 64, 183, 209, 42, 67, 222, 245, 54, 68, 71, 91, 186, 178, 182, 136, 57, 223, 231, 31, 85, 247, 133, 24, 180, 173, 125, 215, 95, 98, 70, 185, 199, 167, 101, 251, 40, 191, 255, 140, 250, 255, 158, 125, 105, 73, 248, 255, 239, 228, 218, 155, 252, 6, 167, 204, 255, 74, 149, 10, 123, 190, 33, 253, 142, 36, 244, 89, 81, 204, 179, 36, 95, 249, 69, 9, 185, 198, 211, 61, 150, 127, 139, 68, 223, 188, 83, 223, 162, 49, 4, 181, 85, 232, 61, 171, 108, 255, 78, 85, 119, 18, 219, 119, 254, 178, 206, 33, 115, 168, 162, 72, 157, 203, 254, 87, 220, 102, 3, 249, 47, 26, 215, 61, 158, 210, 241, 250, 247, 148, 253, 190, 17, 42, 117, 182, 63, 255, 71, 84, 222, 53, 153, 218, 182, 42, 253, 203, 194, 69, 63, 43, 211, 207, 205, 46, 84, 249, 255, 60, 146, 117, 43, 171, 191, 92, 155, 46, 43, 169, 230, 208, 41, 231, 227, 77, 205, 243, 201, 230, 190, 181, 193, 170, 218, 165, 168, 200, 181, 244, 208, 53, 226, 186, 215, 79, 235, 88, 67, 15, 201, 191, 174, 58, 143, 226, 122, 180, 77, 108, 101, 52, 213, 159, 171, 170, 119, 136, 61, 99, 108, 79, 219, 117, 172, 63, 142, 98, 191, 43, 155, 71, 138, 190, 159, 194, 135, 83, 248, 97, 234, 114, 203, 232, 86, 84, 63, 223, 249, 85, 151, 95, 149, 254, 77, 151, 95, 101, 159, 138, 45, 191, 73, 249, 47];\nvar trieData$2 = {\n  type: type$2,\n  data: data$2\n};\n\nvar _class$7;\n\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar stateMachine$1 = new StateMachine(useData);\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    classCallCheck(this, UniversalShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\n\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  classCallCheck(this, USEInfo);\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n    ++syllable;\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType;\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    if (info.category === 'R' && end - start > 1) {\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    }\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  mong: ArabicShaper,\n  syrc: ArabicShaper,\n  'nko ': ArabicShaper,\n  phag: ArabicShaper,\n  mand: ArabicShaper,\n  mani: ArabicShaper,\n  phlp: ArabicShaper,\n  hang: HangulShaper,\n  bng2: IndicShaper,\n  beng: IndicShaper,\n  dev2: IndicShaper,\n  deva: IndicShaper,\n  gjr2: IndicShaper,\n  gujr: IndicShaper,\n  guru: IndicShaper,\n  gur2: IndicShaper,\n  knda: IndicShaper,\n  knd2: IndicShaper,\n  mlm2: IndicShaper,\n  mlym: IndicShaper,\n  ory2: IndicShaper,\n  orya: IndicShaper,\n  taml: IndicShaper,\n  tml2: IndicShaper,\n  telu: IndicShaper,\n  tel2: IndicShaper,\n  khmr: IndicShaper,\n  bali: UniversalShaper,\n  batk: UniversalShaper,\n  brah: UniversalShaper,\n  bugi: UniversalShaper,\n  buhd: UniversalShaper,\n  cakm: UniversalShaper,\n  cham: UniversalShaper,\n  dupl: UniversalShaper,\n  egyp: UniversalShaper,\n  gran: UniversalShaper,\n  hano: UniversalShaper,\n  java: UniversalShaper,\n  kthi: UniversalShaper,\n  kali: UniversalShaper,\n  khar: UniversalShaper,\n  khoj: UniversalShaper,\n  sind: UniversalShaper,\n  lepc: UniversalShaper,\n  limb: UniversalShaper,\n  mahj: UniversalShaper,\n  mtei: UniversalShaper,\n  modi: UniversalShaper,\n  hmng: UniversalShaper,\n  rjng: UniversalShaper,\n  saur: UniversalShaper,\n  shrd: UniversalShaper,\n  sidd: UniversalShaper,\n  sinh: UniversalShaper,\n  sund: UniversalShaper,\n  sylo: UniversalShaper,\n  tglg: UniversalShaper,\n  tagb: UniversalShaper,\n  tale: UniversalShaper,\n  lana: UniversalShaper,\n  tavt: UniversalShaper,\n  takr: UniversalShaper,\n  tibt: UniversalShaper,\n  tfng: UniversalShaper,\n  tirh: UniversalShaper,\n  latn: DefaultShaper,\n  DFLT: DefaultShaper\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    classCallCheck(this, GSUBProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0;\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur;\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            }\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features, _curGlyph.stringIndex);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true;\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1;\n\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3;\n\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++;\n            }\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            }\n\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        return this.applyContext(table);\n\n      case 6:\n        return this.applyChainingContext(table);\n\n      case 7:\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    classCallCheck(this, GPOSProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              var set$$1 = table.pairSets.get(_index);\n\n              for (var _iterator = set$$1, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          }\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          }\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          }\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur;\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              good = true;\n            }\n          } else {\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        return this.applyContext(table);\n\n      case 8:\n        return this.applyChainingContext(table);\n\n      case 9:\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate;\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    classCallCheck(this, OTLayoutEngine);\n    this.font = font;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, glyphRun.glyphs, glyphRun.features);\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, glyphRun.glyphs);\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(glyphRun) {\n    for (var i = 0; i < glyphRun.glyphs; i++) {\n      if (glyphRun.glyphs[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    classCallCheck(this, LayoutEngine);\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction$$1) {\n    var _this = this;\n\n    if (typeof features === 'string') {\n      direction$$1 = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    if (script == null) {\n      script = forString(string);\n    }\n\n    var glyphs = this.glyphsForString(string);\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction$$1);\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    glyphRun.stringIndices = glyphRun.glyphs.map(function (glyphInfo) {\n      return glyphInfo.stringIndex;\n    });\n    glyphRun.glyphs = glyphRun.glyphs.map(function (glyphInfo) {\n      return _this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n    });\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      var stringIndex = idx - 1;\n\n      if (idx < len) {\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last, code), [last, code], null, stringIndex));\n      } else if (state === 0 && nextState === 0) {\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last), [last], null, stringIndex));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null;\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00ad;\n\n        case 0x03:\n          return ch === 0x034f;\n\n        case 0x06:\n          return ch === 0x061c;\n\n        case 0x17:\n          return 0x17b4 <= ch && ch <= 0x17b5;\n\n        case 0x18:\n          return 0x180b <= ch && ch <= 0x180e;\n\n        case 0x20:\n          return 0x200b <= ch && ch <= 0x200f || 0x202a <= ch && ch <= 0x202e || 0x2060 <= ch && ch <= 0x206f;\n\n        case 0xfe:\n          return 0xfe00 <= ch && ch <= 0xfe0f || ch === 0xfeff;\n\n        case 0xff:\n          return 0xfff0 <= ch && ch <= 0xfff8;\n\n        default:\n          return false;\n      }\n    } else {\n      switch (plane) {\n        case 0x01:\n          return 0x1bca0 <= ch && ch <= 0x1bca3 || 0x1d173 <= ch && ch <= 0x1d17a;\n\n        case 0x0e:\n          return 0xe0000 <= ch && ch <= 0xe0fff;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator = codePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var codePoint = _ref;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator2 = this.engine.stringsForGlyph(gid), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var string = _ref2;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\nvar Path = function () {\n  function Path() {\n    classCallCheck(this, Path);\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  Path.prototype.toFunction = function toFunction() {\n    var cmds = this.commands.map(function (c) {\n      return '  ctx.' + c.command + '(' + c.args.join(', ') + ');';\n    });\n    return new Function('ctx', cmds.join('\\n'));\n  };\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  };\n\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n      var args = [];\n\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  createClass(Path, [{\n    key: 'cbox',\n    get: function get$$1() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx);\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x);\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            }\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    classCallCheck(this, Glyph);\n    this.id = id;\n    this.codePoints = codePoints;\n    this._font = font;\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing;\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  };\n\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  createClass(Glyph, [{\n    key: 'cbox',\n    get: function get$$1() {\n      return this._getCBox();\n    }\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return this._getBBox();\n    }\n  }, {\n    key: 'path',\n    get: function get$$1() {\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._getMetrics().advanceWidth;\n    }\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get$$1() {}\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype), _class$8);\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n});\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    classCallCheck(this, Point);\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}();\n\nvar Component = function Component(glyphID, dx, dy) {\n  classCallCheck(this, Component);\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n\nvar TTFGlyph = function (_Glyph) {\n  inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    classCallCheck(this, TTFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  };\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  };\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1];\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  };\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      this.path;\n    }\n\n    return this._metrics;\n  };\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          firstPt = lastPt;\n        } else {\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\nvar CFFGlyph = function (_Glyph) {\n  inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    classCallCheck(this, CFFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var stream = this._font.stream;\n    var pos = stream.pos;\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id);\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1:\n            case 3:\n            case 18:\n            case 23:\n              parseStems();\n              break;\n\n            case 4:\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6:\n            case 7:\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19:\n            case 20:\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30:\n            case 31:\n              phase = op === 31;\n\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  stack.pop();\n                  break;\n\n                case 20:\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift();\n                  break;\n\n                case 36:\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    classCallCheck(this, SBIXGlyph);\n    return possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  classCallCheck(this, COLRLayer);\n  this.glyph = glyph;\n  this.color = color;\n};\n\nvar COLRGlyph = function (_Glyph) {\n  inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    classCallCheck(this, COLRGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get$$1() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      }\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      }\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    classCallCheck(this, GlyphVariationProcessor);\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    }\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  };\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point;\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k];\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  };\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = [];\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0;\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar Subset = function () {\n  function Subset(font) {\n    classCallCheck(this, Subset);\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    process.nextTick(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}();\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point$1, 0),\n  yPoints: new r.Array(Point$1, 0)\n});\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0;\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    classCallCheck(this, TTFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode();\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset);\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Buffer(buffer);\n\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    tables.loca.preEncode.call(this.loca);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    classCallCheck(this, CFFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path;\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Buffer([11]));\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(_extends({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path;\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = _extends({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path;\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = _extends({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n\n    var topDict = _extends({}, this.cff.topDict);\n\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: this.cff.length,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TTFFont);\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory();\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit$1.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  };\n\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n    var record = this.name.records[key];\n\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  };\n\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      var name = this.name.records.postscriptName;\n\n      if (name) {\n        var lang = Object.keys(name)[0];\n        return name[lang];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.getName('fullName');\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.getName('fontFamily');\n    }\n  }, {\n    key: 'subfamilyName',\n    get: function get$$1() {\n      return this.getName('fontSubfamily');\n    }\n  }, {\n    key: 'copyright',\n    get: function get$$1() {\n      return this.getName('copyright');\n    }\n  }, {\n    key: 'version',\n    get: function get$$1() {\n      return this.getName('version');\n    }\n  }, {\n    key: 'ascent',\n    get: function get$$1() {\n      return this.hhea.ascent;\n    }\n  }, {\n    key: 'descent',\n    get: function get$$1() {\n      return this.hhea.descent;\n    }\n  }, {\n    key: 'lineGap',\n    get: function get$$1() {\n      return this.hhea.lineGap;\n    }\n  }, {\n    key: 'underlinePosition',\n    get: function get$$1() {\n      return this.post.underlinePosition;\n    }\n  }, {\n    key: 'underlineThickness',\n    get: function get$$1() {\n      return this.post.underlineThickness;\n    }\n  }, {\n    key: 'italicAngle',\n    get: function get$$1() {\n      return this.post.italicAngle;\n    }\n  }, {\n    key: 'capHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n  }, {\n    key: 'xHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n  }, {\n    key: 'numGlyphs',\n    get: function get$$1() {\n      return this.maxp.numGlyphs;\n    }\n  }, {\n    key: 'unitsPerEm',\n    get: function get$$1() {\n      return this.head.unitsPerEm;\n    }\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get$$1() {\n      return new CmapProcessor(this.cmap);\n    }\n  }, {\n    key: 'characterSet',\n    get: function get$$1() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get$$1() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get$$1() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get$$1() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n  }, {\n    key: 'namedVariations',\n    get: function get$$1() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get$$1() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords;\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype), _class);\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables$$1 = {};\n\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    classCallCheck(this, WOFFFont);\n    return possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2;\n        var outBuffer = new Buffer(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    classCallCheck(this, TrueTypeCollection);\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nvar DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    classCallCheck(this, DFont);\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(DFont, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return DFont;\n}();\n\nfontkit$1.registerFormat(TTFFont);\nfontkit$1.registerFormat(WOFFFont);\nfontkit$1.registerFormat(TrueTypeCollection);\nfontkit$1.registerFormat(DFont);\nexport default fontkit$1;","map":{"version":3,"sources":["C:/Users/Pierre/PFE/Web_app/node_modules/@react-pdf/fontkit/dist/fontkit.browser.es.js"],"names":["r","PropertyDescriptor","resolveLength","isEqual","unicode","UnicodeTrie","StateMachine","cloneDeep","inflate","fs","fontkit$1","logErrors","formats","registerFormat","format","push","openSync","filename","postscriptName","Error","buffer","readFileSync","create","open","callback","readFile","err","font","e","i","length","probe","DecodeStream","getFont","cache","target","key","descriptor","get","value","call","Object","defineProperty","fn","Map","memoized","_len","arguments","args","Array","_key","has","result","apply","set","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","language","codeMap","LazyArray","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","undefined","MAC_LANGUAGE_ENCODINGS","ENCODINGS","LANGUAGES","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","record","obj","preEncode","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","_typeof","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","enumerable","configurable","writable","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","CFFIndex","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","s","writeUInt8","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","_item","FLOAT_EOF","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","_startOffset","_field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","_iterator4","_isArray4","_i4","_ref4","_iterator5","_isArray5","_i5","_ref5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","valueOf","CFFBlendOp","numBlends","pop","CFFPrivateDict","standardStrings","StandardEncoding","ExpertEncoding","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","_","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFCustomEncoding","nCodes","codes","nRanges","ranges","CFFEncoding","RangeArray","_r$Array","res","range","CFFCustomCharset","CharStrings","CFFCharset","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","get$$1","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","data","pad","numComponents","components","dataLen","SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","name","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","StateTable1","ClassLookupTable","newStateOffset","StateHeader1","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis$1","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","shortFrac$1","Offset","gvar","globalCoordCount","globalCoords","ClassTable$1","subFeatureFlags","stateTable","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","TableEntry","checkSum","Directory","numTables","tables$$1","VoidPointer","floor","log","LN2","binarySearch","cmp","min","_class$1","_applyDecoratedDescriptor$1","property","decorators","context","desc","forEach","initializer","slice","reverse","reduce","decorator","iconv","require","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","lookup","codepoint","variationSelector","buf","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_i6","_ref6","_res4","_iterator6","_isArray6","_i7","_ref7","_group","getOwnPropertyDescriptor","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","fromOpenType","forString","idx","code","charCodeAt","_script","getScript","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","GlyphRun","direction$$1","stringIndices","bbox","p","GlyphPosition","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","AATMapping","ot","aat","mapOTToAAT","r$$1","mapFeatureStrings","f","isNaN","typeCode","settingCode","mapAATToOT","_feature","_r","_f","keys","_class$3","_applyDecoratedDescriptor$3","AATLookupTable","seg","glyphsForValue","classValue","_segment","START_OF_TEXT_STATE","END_OF_TEXT_CLASS","OUT_OF_BOUNDS_CLASS","DELETED_GLYPH_CLASS","DONT_ADVANCE","AATStateMachine","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","traverse","opts","state","visited","Set","add","_stateTable","enter","exit","_class$2","_applyDecoratedDescriptor$2","MARK_FIRST","MARK_LAST","VERB","SET_MARK","SET_COMPONENT","PERFORM_ACTION","LAST_MASK","STORE_MASK","OFFSET_MASK","REVERSE_DIRECTION","CURRENT_INSERT_BEFORE","MARKED_INSERT_BEFORE","CURRENT_INSERT_COUNT","MARKED_INSERT_COUNT","AATMorxProcessor","processIndicRearragement","bind","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_isArray7","generateInputsForSubtable","stack","found","_cache","_stack$pop","swap","rangeA","rangeB","reverseA","reverseB","verb","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","getAvailableFeatures","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","_class$4","_temp","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","zeroMarkWidths","trieData","trie","Uint8Array","FEATURES","ShapingClasses","Non_Joining","Left_Joining","Right_Joining","Dual_Joining","Join_Causing","ALAPH","Transparent","ISOL","FINA","FIN2","FIN3","MEDI","MED2","INIT","NONE","STATE_TABLE","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","type$$1","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","lang","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_isArray8","_i8","_ref8","_ref9","cur","_iterator9","_isArray9","_i9","_ref10","applyLookup","applyLookupList","_iterator10","_isArray10","_i10","_ref11","lookupRecord","_iterator11","_isArray11","_i11","_ref12","coverageIndex","_iterator12","_isArray12","_i12","_ref13","match","sequence","matched","sequenceMatches","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_isArray13","_i13","_ref14","classSequenceMatches","_this3","classID","applyContext","set$$1","_iterator14","_isArray14","_i14","_ref15","rule","_iterator15","_isArray15","_i15","_ref16","_rule","applyChainingContext","_iterator16","_isArray16","_i16","_ref17","rules","_iterator17","_isArray17","_i17","_ref18","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","advanceWidth","_class$5","_temp$1","HangulShaper","getType","STATE_TABLE$1","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","HANGUL_BASE","HANGUL_END","HANGUL_COUNT","L_BASE","V_BASE","T_BASE","L_COUNT","V_COUNT","T_COUNT","L_END","V_END","T_END","DOTTED_CIRCLE","isL","isV","isT","isTone","isLVT","isLV","isCombiningL","isCombiningV","isCombiningT","X","L","V","T","LV","LVT","M","NO_ACTION","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","getLength","dottedCircle","accepting","tags","indicMachine","categories","decompositions$1","stateTable$1","accepting$1","tags$1","useData","decompositions","CATEGORIES","C","N","H","ZWNJ","ZWJ","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","type$1","data$1","trieData$1","_class$6","_temp$2","trie$1","IndicShaper","setupSyllables","initialReordering","finalReordering","unicodeScript","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","tags$$1","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable","_glyphs$start$shaperI","limit","hasReph","rphf","_g","seenBelow","_info","_info2","j","disallowDoubleHalants","_j","lastPos","_info3","_j2","_j3","blwf","abvf","pstf","prefLen","pref","_i18","_g2","_j4","cfar","_i19","nonJoiner","_j5","tryPref","BASE_C","_i20","newPos","_i21","oldPos","tmp","newRephPos","_i22","reph","_i23","_newPos","_oldPos2","_oldPos","_tmp","test","type$2","data$2","trieData$2","_class$7","_temp$3","categories$1","decompositions$2","trie$2","stateMachine$1","UniversalShaper","setupSyllables$1","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable$1","isHalant","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","choose","shaper","_OTProcessor","_index","curGlyph","replacement","_index2","USER_INDEX","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","setup","zeroMarkAdvances","cleanup","glyphInfos","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","glyphsForString","hideDefaultIgnorables","glyphInfo","nextState","positioned","space","isDefaultIgnorable","ch","plane","from","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","cmds","command","join","Function","toSVG","round","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","pow","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","_c$args3","b2ac","t1","sqrt","t2","_arr","StandardNames","_class$8","_applyDecoratedDescriptor$4","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_getTableMetrics2","leftBearing","_getTableMetrics3","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","GlyfHeader","numberOfContours","ON_CURVE","X_SHORT_VECTOR","Y_SHORT_VECTOR","REPEAT","SAME_X","SAME_Y","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_SCALE","MORE_COMPONENTS","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_INSTRUCTIONS","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","COLRLayer","color","COLRGlyph","layers","layer","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","TUPLES_SHARE_POINT_NUMBERS","TUPLE_COUNT_MASK","EMBEDDED_TUPLE_COORD","INTERMEDIATE_TUPLE","PRIVATE_POINT_NUMBERS","TUPLE_INDEX_MASK","POINTS_ARE_WORDS","POINT_RUN_COUNT_MASK","DELTAS_ARE_ZERO","DELTAS_ARE_WORDS","DELTA_RUN_COUNT_MASK","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","axisScalar","Subset","mapping","includeGlyph","encodeStream","EncodeStream","nextTick","ON_CURVE$1","X_SHORT_VECTOR$1","Y_SHORT_VECTOR$1","REPEAT$1","SAME_X$1","SAME_Y$1","Point$1","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_class","_applyDecoratedDescriptor","TTFFont","toString","variationCoords","_directoryPos","_tables","_decodeDirectory","_getTable","_decodeTable","console","error","getName","createSubset","getVariation","settings","namedVariations","trim","default","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","DFontName","DFontData","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"mappings":"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","sourcesContent":["import r from 'restructure';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\n\nvar fs = {}\n\nvar fontkit$1 = {};\nfontkit$1.logErrors = false;\n\nvar formats = [];\nfontkit$1.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit$1.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n  var buffer = fs.readFileSync(filename);\n  return fontkit$1.create(buffer, postscriptName);\n};\n\nfontkit$1.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n\n  if (typeof postscriptName === 'function') {\n    callback = postscriptName;\n    postscriptName = null;\n  }\n\n  fs.readFile(filename, function (err, buffer) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var font = fontkit$1.create(buffer, postscriptName);\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, font);\n  });\n\n  return;\n};\n\nfontkit$1.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, { value: value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n\n    return {\n      get: function get() {\n        var cache = new Map();\n        function memoized() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, { value: memoized });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\n\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\n\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\n\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\n\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, { type: 'parent' }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, { type: 'parent' })\n});\n\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length: r.uint16, // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16, // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length: r.uint16, // Total table length in bytes\n    language: r.uint16, // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16), // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n\n  6: { // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16, // Platform identifier\n  encodingID: r.uint16, // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, { type: 'parent', lazy: true })\n});\n\n// character to glyph mapping\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\n\n// font header\nvar head = new r.Struct({\n  version: r.int32, // 0x00010000 (version 1.0)\n  revision: r.int32, // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32, // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16, // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16, // for all glyph bounding boxes\n  yMin: r.int16, // for all glyph bounding boxes\n  xMax: r.int16, // for all glyph bounding boxes\n  yMax: r.int16, // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16, // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16, // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n});\n\n// horizontal header\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16, // Distance from baseline of highest ascender\n  descent: r.int16, // Distance from baseline of lowest descender\n  lineGap: r.int16, // Typographic line gap\n  advanceWidthMax: r.uint16, // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16, // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16, // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16, // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16, // 0 for vertical\n  caretOffset: r.int16, // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16, // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n});\n\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\n\n// maxiumum profile\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16, // The number of glyphs in the font\n  maxPoints: r.uint16, // Maximum points in a non-composite glyph\n  maxContours: r.uint16, // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16, // Maximum points in a composite glyph\n  maxComponentContours: r.uint16, // Maximum contours in a composite glyph\n  maxZones: r.uint16, // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16, // Maximum points used in Z0\n  maxStorage: r.uint16, // Number of Storage Area locations\n  maxFunctionDefs: r.uint16, // Number of FDEFs\n  maxInstructionDefs: r.uint16, // Number of IDEFs\n  maxStackElements: r.uint16, // Maximum stack depth\n  maxSizeOfInstructions: r.uint16, // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16, // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID) {\n  var languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n}\n\n// Map of platform ids to encoding ids.\nvar ENCODINGS = [\n// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n\n// macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'],\n\n// ISO (deprecated)\n['ascii'],\n\n// windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit', // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n};\n\n// Map of platform ids to BCP-47 language codes.\nvar LANGUAGES = [\n// unicode\n[], { // macintosh\n  0: 'en', 30: 'fo', 60: 'ks', 90: 'rw',\n  1: 'fr', 31: 'fa', 61: 'ku', 91: 'rn',\n  2: 'de', 32: 'ru', 62: 'sd', 92: 'ny',\n  3: 'it', 33: 'zh', 63: 'bo', 93: 'mg',\n  4: 'nl', 34: 'nl-BE', 64: 'ne', 94: 'eo',\n  5: 'sv', 35: 'ga', 65: 'sa', 128: 'cy',\n  6: 'es', 36: 'sq', 66: 'mr', 129: 'eu',\n  7: 'da', 37: 'ro', 67: 'bn', 130: 'ca',\n  8: 'pt', 38: 'cz', 68: 'as', 131: 'la',\n  9: 'no', 39: 'sk', 69: 'gu', 132: 'qu',\n  10: 'he', 40: 'si', 70: 'pa', 133: 'gn',\n  11: 'ja', 41: 'yi', 71: 'or', 134: 'ay',\n  12: 'ar', 42: 'sr', 72: 'ml', 135: 'tt',\n  13: 'fi', 43: 'mk', 73: 'kn', 136: 'ug',\n  14: 'el', 44: 'bg', 74: 'ta', 137: 'dz',\n  15: 'is', 45: 'uk', 75: 'te', 138: 'jv',\n  16: 'mt', 46: 'be', 76: 'si', 139: 'su',\n  17: 'tr', 47: 'uz', 77: 'my', 140: 'gl',\n  18: 'hr', 48: 'kk', 78: 'km', 141: 'af',\n  19: 'zh-Hant', 49: 'az-Cyrl', 79: 'lo', 142: 'br',\n  20: 'ur', 50: 'az-Arab', 80: 'vi', 143: 'iu',\n  21: 'hi', 51: 'hy', 81: 'id', 144: 'gd',\n  22: 'th', 52: 'ka', 82: 'tl', 145: 'gv',\n  23: 'ko', 53: 'mo', 83: 'ms', 146: 'ga',\n  24: 'lt', 54: 'ky', 84: 'ms-Arab', 147: 'to',\n  25: 'pl', 55: 'tg', 85: 'am', 148: 'el-polyton',\n  26: 'hu', 56: 'tk', 86: 'ti', 149: 'kl',\n  27: 'es', 57: 'mn-CN', 87: 'om', 150: 'az',\n  28: 'lv', 58: 'mn', 88: 'so', 151: 'nn',\n  29: 'se', 59: 'ps', 89: 'sw'\n},\n\n// ISO (deprecated)\n[], { // windows                                        \n  0x0436: 'af', 0x4009: 'en-IN', 0x0487: 'rw', 0x0432: 'tn',\n  0x041C: 'sq', 0x1809: 'en-IE', 0x0441: 'sw', 0x045B: 'si',\n  0x0484: 'gsw', 0x2009: 'en-JM', 0x0457: 'kok', 0x041B: 'sk',\n  0x045E: 'am', 0x4409: 'en-MY', 0x0412: 'ko', 0x0424: 'sl',\n  0x1401: 'ar-DZ', 0x1409: 'en-NZ', 0x0440: 'ky', 0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH', 0x3409: 'en-PH', 0x0454: 'lo', 0x400A: 'es-BO',\n  0x0C01: 'ar', 0x4809: 'en-SG', 0x0426: 'lv', 0x340A: 'es-CL',\n  0x0801: 'ar-IQ', 0x1C09: 'en-ZA', 0x0427: 'lt', 0x240A: 'es-CO',\n  0x2C01: 'ar-JO', 0x2C09: 'en-TT', 0x082E: 'dsb', 0x140A: 'es-CR',\n  0x3401: 'ar-KW', 0x0809: 'en-GB', 0x046E: 'lb', 0x1C0A: 'es-DO',\n  0x3001: 'ar-LB', 0x0409: 'en', 0x042F: 'mk', 0x300A: 'es-EC',\n  0x1001: 'ar-LY', 0x3009: 'en-ZW', 0x083E: 'ms-BN', 0x440A: 'es-SV',\n  0x1801: 'ary', 0x0425: 'et', 0x043E: 'ms', 0x100A: 'es-GT',\n  0x2001: 'ar-OM', 0x0438: 'fo', 0x044C: 'ml', 0x480A: 'es-HN',\n  0x4001: 'ar-QA', 0x0464: 'fil', 0x043A: 'mt', 0x080A: 'es-MX',\n  0x0401: 'ar-SA', 0x040B: 'fi', 0x0481: 'mi', 0x4C0A: 'es-NI',\n  0x2801: 'ar-SY', 0x080C: 'fr-BE', 0x047A: 'arn', 0x180A: 'es-PA',\n  0x1C01: 'aeb', 0x0C0C: 'fr-CA', 0x044E: 'mr', 0x3C0A: 'es-PY',\n  0x3801: 'ar-AE', 0x040C: 'fr', 0x047C: 'moh', 0x280A: 'es-PE',\n  0x2401: 'ar-YE', 0x140C: 'fr-LU', 0x0450: 'mn', 0x500A: 'es-PR',\n  0x042B: 'hy', 0x180C: 'fr-MC', 0x0850: 'mn-CN', 0x0C0A: 'es',\n  0x044D: 'as', 0x100C: 'fr-CH', 0x0461: 'ne', 0x040A: 'es',\n  0x082C: 'az-Cyrl', 0x0462: 'fy', 0x0414: 'nb', 0x540A: 'es-US',\n  0x042C: 'az', 0x0456: 'gl', 0x0814: 'nn', 0x380A: 'es-UY',\n  0x046D: 'ba', 0x0437: 'ka', 0x0482: 'oc', 0x200A: 'es-VE',\n  0x042D: 'eu', 0x0C07: 'de-AT', 0x0448: 'or', 0x081D: 'sv-FI',\n  0x0423: 'be', 0x0407: 'de', 0x0463: 'ps', 0x041D: 'sv',\n  0x0845: 'bn', 0x1407: 'de-LI', 0x0415: 'pl', 0x045A: 'syr',\n  0x0445: 'bn-IN', 0x1007: 'de-LU', 0x0416: 'pt', 0x0428: 'tg',\n  0x201A: 'bs-Cyrl', 0x0807: 'de-CH', 0x0816: 'pt-PT', 0x085F: 'tzm',\n  0x141A: 'bs', 0x0408: 'el', 0x0446: 'pa', 0x0449: 'ta',\n  0x047E: 'br', 0x046F: 'kl', 0x046B: 'qu-BO', 0x0444: 'tt',\n  0x0402: 'bg', 0x0447: 'gu', 0x086B: 'qu-EC', 0x044A: 'te',\n  0x0403: 'ca', 0x0468: 'ha', 0x0C6B: 'qu', 0x041E: 'th',\n  0x0C04: 'zh-HK', 0x040D: 'he', 0x0418: 'ro', 0x0451: 'bo',\n  0x1404: 'zh-MO', 0x0439: 'hi', 0x0417: 'rm', 0x041F: 'tr',\n  0x0804: 'zh', 0x040E: 'hu', 0x0419: 'ru', 0x0442: 'tk',\n  0x1004: 'zh-SG', 0x040F: 'is', 0x243B: 'smn', 0x0480: 'ug',\n  0x0404: 'zh-TW', 0x0470: 'ig', 0x103B: 'smj-NO', 0x0422: 'uk',\n  0x0483: 'co', 0x0421: 'id', 0x143B: 'smj', 0x042E: 'hsb',\n  0x041A: 'hr', 0x045D: 'iu', 0x0C3B: 'se-FI', 0x0420: 'ur',\n  0x101A: 'hr-BA', 0x085D: 'iu-Latn', 0x043B: 'se', 0x0843: 'uz-Cyrl',\n  0x0405: 'cs', 0x083C: 'ga', 0x083B: 'se-SE', 0x0443: 'uz',\n  0x0406: 'da', 0x0434: 'xh', 0x203B: 'sms', 0x042A: 'vi',\n  0x048C: 'prs', 0x0435: 'zu', 0x183B: 'sma-NO', 0x0452: 'cy',\n  0x0465: 'dv', 0x0410: 'it', 0x1C3B: 'sms', 0x0488: 'wo',\n  0x0813: 'nl-BE', 0x0810: 'it-CH', 0x044F: 'sa', 0x0485: 'sah',\n  0x0413: 'nl', 0x0411: 'ja', 0x1C1A: 'sr-Cyrl-BA', 0x0478: 'ii',\n  0x0C09: 'en-AU', 0x044B: 'kn', 0x0C1A: 'sr', 0x046A: 'yo',\n  0x2809: 'en-BZ', 0x043F: 'kk', 0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA', 0x0453: 'km', 0x081A: 'sr-Latn',\n  0x2409: 'en-029', 0x0486: 'quc', 0x046C: 'nso'\n}];\n\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), { type: 'parent', relativeTo: 'parent.stringOffset', allowNull: false })\n});\n\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), { type: 'parent', relativeTo: 'stringOffset' })\n});\n\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n  for (var _iterator = this.records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var record = _ref;\n\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  var records = [];\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16, // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16, // visual weight of stroke in glyphs\n    usWidthClass: r.uint16, // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16, // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16, // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16, // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16, // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16, // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16, // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16, // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16, // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16, // width of the strikeout stroke\n    yStrikeoutPosition: r.int16, // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16, // classification of font-family design\n    panose: new r.Array(r.uint8, 10), // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4), // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16, // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\n// PostScript information\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle: r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16, // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16, // Suggested values for the underline thickness\n    isFixedPitch: r.uint32, // Whether the font is monospaced\n    minMemType42: r.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32, // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32, // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\n\n// An array of predefined values accessible by instructions\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version != null) return;\n\n  // assume this.offsets is a sorted array\n  this.version = this.offsets[this.offsets.length - 1] > 0xffff ? 1 : 0;\n\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\n// Set of instructions executed whenever the point size or font transformation change\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n\n// only used for encoding\nvar glyf = new r.Array(new r.Buffer());\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CFFIndex = function () {\n  function CFFIndex(type) {\n    classCallCheck(this, CFFIndex);\n\n    this.type = type;\n  }\n\n  CFFIndex.prototype.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  CFFIndex.prototype.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType = void 0;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n\n    var start = offsetType.decode(stream);\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  CFFIndex.prototype.size = function size(arr, parent) {\n    var size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer();\n\n    // find maximum offset to detminine offset type\n    var offset = 1;\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  };\n\n  CFFIndex.prototype.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer();\n\n    // find maximum offset to detminine offset type\n    var sizes = [];\n    var offset = 1;\n    for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType = void 0;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _iterator2 = sizes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var size = _ref2;\n\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator3 = arr, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _item = _ref3;\n\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = function () {\n  function CFFOperand() {\n    classCallCheck(this, CFFOperand);\n  }\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n      while (true) {\n        var b = stream.readUInt8();\n\n        var n1 = b >> 4;\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n1];\n\n        var n2 = b & 15;\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n\n      var str = '' + val;\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nvar CFFDict = function () {\n  function CFFDict() {\n    var ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, CFFDict);\n\n    this.ops = ops;\n    this.fields = {};\n    for (var _iterator = ops, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  CFFDict.prototype.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  };\n\n  CFFDict.prototype.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  CFFDict.prototype.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent: { value: parent },\n      _startOffset: { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n        if (!_field) {\n          throw new Error('Unknown operator ' + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  CFFDict.prototype.size = function size(dict, parent) {\n    var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n      for (var _iterator2 = operands, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var op = _ref2;\n\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  CFFDict.prototype.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = this.ops, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var field = _ref3;\n\n      var val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (var _iterator4 = operands, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var op = _ref4;\n\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (var _iterator5 = key, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var _op = _ref5;\n\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = function (_r$Pointer) {\n  inherits(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, CFFPointer);\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return possibleConstructorReturn(this, _r$Pointer.call(this, null, type, options));\n  }\n\n  CFFPointer.prototype.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  CFFPointer.prototype.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = function () {\n  function Ptr(val) {\n    classCallCheck(this, Ptr);\n\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  Ptr.prototype.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = function () {\n  function CFFBlendOp() {\n    classCallCheck(this, CFFBlendOp);\n  }\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([\n// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), { type: 'local' }), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n//########################\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\n\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nvar ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16, // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\n\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\n\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\n\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\n\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\n\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\n\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _['axisIndex'] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\n\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\n\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, { type: 'parent' })\n});\n\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, { type: 'parent' }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, { type: 'parent' })\n});\n\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = function () {\n  function PredefinedOp(predefinedOps, type) {\n    classCallCheck(this, PredefinedOp);\n\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  PredefinedOp.prototype.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  PredefinedOp.prototype.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  PredefinedOp.prototype.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = function (_r$Number) {\n  inherits(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    classCallCheck(this, CFFEncodingVersion);\n    return possibleConstructorReturn(this, _r$Number.call(this, 'UInt8'));\n  }\n\n  CFFEncodingVersion.prototype.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n\n    // TODO: supplement?\n  } });\n\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = function (_r$Array) {\n  inherits(RangeArray, _r$Array);\n\n  function RangeArray() {\n    classCallCheck(this, RangeArray);\n    return possibleConstructorReturn(this, _r$Array.apply(this, arguments));\n  }\n\n  RangeArray.prototype.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\n\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, { lazy: true }));\n\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\n\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\n\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = function () {\n  function CFFPrivateOp() {\n    classCallCheck(this, CFFPrivateOp);\n  }\n\n  CFFPrivateOp.prototype.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  CFFPrivateOp.prototype.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  CFFPrivateOp.prototype.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([\n// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar CFFTopDict = new CFFDict([\n// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null],\n\n// CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\n\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\n\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\n\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = function () {\n  function CFFFont(stream) {\n    classCallCheck(this, CFFFont);\n\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  CFFFont.prototype.decode = function decode() {\n    var start = this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  CFFFont.prototype.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  CFFFont.prototype.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  CFFFont.prototype.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  };\n\n  CFFFont.prototype.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid > ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error('Unknown FDSelect version: ' + this.topDict.FDSelect.version);\n    }\n  };\n\n  CFFFont.prototype.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  createClass(CFFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\n\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {\n  classCallCheck(this, ByteAligned);\n};\n\nvar BitAligned = function BitAligned() {\n  classCallCheck(this, BitAligned);\n};\n\nvar glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nvar EBLC = new r.Struct({\n  version: r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\n\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n\nvar LayerRecord = new r.Struct({\n  gid: r.uint16, // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16, // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate: r.int16, // X or Y value, in design units\n    referenceGlyph: r.uint16, // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate: r.int16, // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n  }\n});\n\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16, // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, { type: 'parent' }), // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, { type: 'parent' }) // May be NULL\n});\n\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord), // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord), // May be NULL\n  featMinMaxCount: r.uint16, // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, { type: 'parent' })\n});\n\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax), // May be NULL\n  baseLangSysCount: r.uint16, // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4), // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, { type: 'parent' })\n});\n\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nvar Axis = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList), // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis), // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis) // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\n\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\n\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: 'rel' })\n};\n\nvar ValueRecord = function () {\n  function ValueRecord() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'valueFormat';\n    classCallCheck(this, ValueRecord);\n\n    this.key = key;\n  }\n\n  ValueRecord.prototype.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    var fields = {};\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  ValueRecord.prototype.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  ValueRecord.prototype.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\n\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\n\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, { type: 'parent' })\n});\n\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\n\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\n\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context, // Contextual positioning\n  8: ChainingContext, // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16, // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\n\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\n\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context, // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16, // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, { type: 'parent' })\n});\n\nvar JSTF = new r.Struct({\n  version: r.uint32, // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\n// TODO: add this to restructure\n\nvar VariableSizeNumber = function () {\n  function VariableSizeNumber(size) {\n    classCallCheck(this, VariableSizeNumber);\n\n    this._size = size;\n  }\n\n  VariableSizeNumber.prototype.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n      case 2:\n        return stream.readUInt16BE();\n      case 3:\n        return stream.readUInt24BE();\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  VariableSizeNumber.prototype.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\n\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\n\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32, // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\n\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32, // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16, // Number of signatures in the table\n  usFlag: r.uint16, // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16, // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\n\nvar gasp = new r.Struct({\n  version: r.uint16, // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\n\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\n\nvar ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\n\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n    rightTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n    array: new r.Pointer(r.uint16, Kern2Array, { type: 'parent' })\n  },\n\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\n\nvar KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16, // Microsoft has an extra sub-table version number\n    length: r.uint16, // Length of the subtable, in bytes\n    format: r.uint8, // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: { // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\n\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved: new r.Reserved(r.uint16), // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8, // Character set\n  xRatio: r.uint8, // Value to use for x-Ratio\n  yStartRatio: r.uint8, // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n});\n\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16, // yPelHeight to which values apply\n  yMax: r.int16, // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n});\n\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16, // Number of height records in this group\n  startsz: r.uint8, // Starting yPelHeight\n  endsz: r.uint8, // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n});\n\nvar VDMX = new r.Struct({\n  version: r.uint16, // Version number (0 or 1)\n  numRecs: r.uint16, // Number of VDMX groups present\n  numRatios: r.uint16, // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'), // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'), // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n});\n\n// Vertical Header Table\nvar vhea = new r.Struct({\n  version: r.uint16, // Version number of the Vertical Header Table\n  ascent: r.int16, // The vertical typographic ascender for this font\n  descent: r.int16, // The vertical typographic descender for this font\n  lineGap: r.int16, // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16, // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16, // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16, // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16, // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16, // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16, // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16, // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\n\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    classCallCheck(this, UnboundedArrayAccessor);\n\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  UnboundedArrayAccessor.prototype.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  UnboundedArrayAccessor.prototype.inspect = function inspect() {\n    return '[UnboundedArray ' + this.type.constructor.name + ']';\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = function (_r$Array) {\n  inherits(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    classCallCheck(this, UnboundedArray);\n    return possibleConstructorReturn(this, _r$Array.call(this, type, 0));\n  }\n\n  UnboundedArray.prototype.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable() {\n  var ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : r.uint16;\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = function () {\n    function Shadow(type) {\n      classCallCheck(this, Shadow);\n\n      this.type = type;\n    }\n\n    Shadow.prototype.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    Shadow.prototype.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    Shadow.prototype.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), { type: 'parent' })\n  });\n\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nfunction StateTable1() {\n  var entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.uint16;\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\n\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n\nvar Axis$1 = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\n\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\n\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis$1, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\n\nvar Offset = function () {\n  function Offset() {\n    classCallCheck(this, Offset);\n  }\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac$1, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: 'offsetToData', allowNull: false }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\n\nvar ClassTable$1 = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\n\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\n\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable$1, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: 'wdcOffset' }))\n});\n\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n\nvar LigatureData = {\n  action: r.uint16\n};\n\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\n\nvar SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\n\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\n\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\n\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\n\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n\nvar tables = {};\n// Required Tables\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n// TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n// PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n// Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n// Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n// Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length: r.uint32\n});\n\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$$1 = [];\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n    if (table) {\n      tables$$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$$1.length;\n  this.tables = tables$$1;\n\n  this.searchRange = Math.floor(Math.log(this.numTables) / Math.LN2) * 16;\n  this.entrySelector = Math.floor(this.searchRange / Math.LN2);\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nvar _class$1;\n\nfunction _applyDecoratedDescriptor$1(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// iconv-lite is an optional dependency.\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$1 = function () {\n  function CmapProcessor(cmapTable) {\n    classCallCheck(this, CmapProcessor);\n\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n    // 32-bit subtables\n    [3, 10], [0, 6], [0, 4],\n\n    // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]);\n\n    // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n    if (!this.cmap && iconv) {\n      for (var _iterator = cmapTable.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var cmap = _ref;\n\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  CmapProcessor.prototype.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = pairs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _ref3 = _ref2,\n          platformID = _ref3[0],\n          encodingID = _ref3[1];\n\n      for (var _iterator3 = cmapTable.tables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var cmap = _ref4;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  CmapProcessor.prototype.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      }\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n          var _max = cmap.nGroups - 1;\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  CmapProcessor.prototype.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n          for (var _iterator4 = cmap.groups.toArray(), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n            var _ref5;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref5 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref5 = _i4.value;\n            }\n\n            var group = _ref5;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  CmapProcessor.prototype.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n          for (var _i5 = 0; _i5 < cmap.segCount; _i5++) {\n            var end = cmap.endCode.get(_i5);\n            var start = cmap.startCode.get(_i5);\n            var rangeOffset = cmap.idRangeOffset.get(_i5);\n            var delta = cmap.idDelta.get(_i5);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i5);\n                g = cmap.glyphIndexArray.get(index) || 0;\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n          for (var _iterator5 = cmap.groups.toArray(), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n            var _ref6;\n\n            if (_isArray5) {\n              if (_i6 >= _iterator5.length) break;\n              _ref6 = _iterator5[_i6++];\n            } else {\n              _i6 = _iterator5.next();\n              if (_i6.done) break;\n              _ref6 = _i6.value;\n            }\n\n            var group = _ref6;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n          for (var _iterator6 = cmap.groups.toArray(), _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i7 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i7++];\n            } else {\n              _i7 = _iterator6.next();\n              if (_i7.done) break;\n              _ref7 = _i7.value;\n            }\n\n            var _group = _ref7;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error('Unknown cmap format ' + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), _applyDecoratedDescriptor$1(_class$1.prototype, 'getCharacterSet', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'getCharacterSet'), _class$1.prototype), _applyDecoratedDescriptor$1(_class$1.prototype, 'codePointsForGlyph', [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, 'codePointsForGlyph'), _class$1.prototype), _class$1);\n\nvar KernProcessor = function () {\n  function KernProcessor(font) {\n    classCallCheck(this, KernProcessor);\n\n    this.kern = font.kern;\n  }\n\n  KernProcessor.prototype.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  KernProcessor.prototype.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = this.kern.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var table = _ref;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error('Unsupported kerning table version ' + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error('Unsupported kerning sub-table format ' + table.format);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = function () {\n  function UnicodeLayoutEngine(font) {\n    classCallCheck(this, UnicodeLayoutEngine);\n\n    this.font = font;\n  }\n\n  UnicodeLayoutEngine.prototype.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  UnicodeLayoutEngine.prototype.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  UnicodeLayoutEngine.prototype.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32':\n        // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = function () {\n  function BBox() {\n    var minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    var minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    var maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    var maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n    classCallCheck(this, BBox);\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  BBox.prototype.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  BBox.prototype.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  createClass(BBox, [{\n    key: \"width\",\n    get: function get$$1() {\n      return this.maxX - this.minX;\n    }\n\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get$$1() {\n      return this.maxY - this.minY;\n    }\n  }]);\n  return BBox;\n}();\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nvar OPENTYPE_SCRIPTS = {};\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (var _iterator = tag, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var t = _ref;\n\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\n\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n  while (idx < len) {\n    var code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n\n\n// The scripts in this map are written from right to left\nvar RTL = {\n  arab: true, // Arabic\n  hebr: true, // Hebrew\n  syrc: true, // Syriac\n  thaa: true, // Thaana\n  cprt: true, // Cypriot Syllabary\n  khar: true, // Kharosthi\n  phnx: true, // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true, // Lydian\n  avst: true, // Avestan\n  armi: true, // Imperial Aramaic\n  phli: true, // Inscriptional Pahlavi\n  prti: true, // Inscriptional Parthian\n  sarb: true, // Old South Arabian\n  orkh: true, // Old Turkic, Orkhon Runic\n  samr: true, // Samaritan\n  mand: true, // Mandaic, Mandaean\n  merc: true, // Meroitic Cursive\n  mero: true, // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true, // Manichaean\n  mend: true, // Mende Kikakui\n  nbat: true, // Nabataean\n  narb: true, // Old North Arabian\n  palm: true, // Palmyrene\n  phlp: true // Psalter Pahlavi\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = function () {\n  function GlyphRun(glyphs, features, script, language, direction$$1) {\n    classCallCheck(this, GlyphRun);\n\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * An array of indices to indices in the input string for each glyph\n     * @type {number[]}\n     */\n    this.stringIndices = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction$$1 || direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var tag = _ref;\n\n        this.features[tag] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  createClass(GlyphRun, [{\n    key: 'advanceWidth',\n    get: function get$$1() {\n      var width = 0;\n      for (var _iterator2 = this.positions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var position = _ref2;\n\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      var height = 0;\n      for (var _iterator3 = this.positions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var position = _ref3;\n\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      var bbox = new BBox();\n\n      var x = 0;\n      var y = 0;\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition() {\n  var xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  classCallCheck(this, GlyphPosition);\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n  this.yAdvance = yAdvance;\n\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n  this.xOffset = xOffset;\n\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (var i = 1; i <= 99; i++) {\n  OTMapping['cv' + ('00' + i).slice(-2)] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nvar AATMapping = {};\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nfunction mapOTToAAT(features) {\n  var res = {};\n  for (var k in features) {\n    var r$$1 = void 0;\n    if (r$$1 = OTMapping[k]) {\n      if (res[r$$1[0]] == null) {\n        res[r$$1[0]] = {};\n      }\n\n      res[r$$1[0]][r$$1[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nfunction mapAATToOT(features) {\n  var res = {};\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r$$1 = void 0;\n      var f = mapFeatureStrings(features[k]);\n      if (r$$1 = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r$$1] = true;\n      }\n    }\n  } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n      for (var setting in _feature) {\n        var _r = void 0;\n        var _f = mapFeatureStrings([type, setting]);\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _applyDecoratedDescriptor$3(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar AATLookupTable = (_class$3 = function () {\n  function AATLookupTable(table) {\n    classCallCheck(this, AATLookupTable);\n\n    this.table = table;\n  }\n\n  AATLookupTable.prototype.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid];\n\n            // special end of search value\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n  };\n\n  AATLookupTable.prototype.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4:\n        {\n          for (var _iterator = this.table.segments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var segment = _ref;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = this.table.segments, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _segment = _ref2;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error('Unknown lookup table format: ' + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor$3(_class$3.prototype, 'glyphsForValue', [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, 'glyphsForValue'), _class$3.prototype), _class$3);\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = function () {\n  function AATStateMachine(stateTable) {\n    classCallCheck(this, AATStateMachine);\n\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  AATStateMachine.prototype.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  };\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n\n\n  AATStateMachine.prototype.traverse = function traverse(opts) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    var _stateTable = this.stateTable,\n        nClasses = _stateTable.nClasses,\n        stateArray = _stateTable.stateArray,\n        entryTable = _stateTable.entryTable;\n\n    var row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (var _iterator = this.lookupTable.glyphsForValue(classCode), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var glyph = _ref;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _applyDecoratedDescriptor$2(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n// indic replacement flags\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000f;\n\n// contextual substitution and glyph insertion flag\nvar SET_MARK = 0x8000;\n\n// ligature entry flags\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3fffffff;\n\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03e0;\nvar MARKED_INSERT_COUNT = 0x001f;\n\nvar AATMorxProcessor = (_class$2 = function () {\n  function AATMorxProcessor(font) {\n    classCallCheck(this, AATMorxProcessor);\n\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:true}}\n\n\n  AATMorxProcessor.prototype.process = function process(glyphs) {\n    var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _iterator = this.morx.chains, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var chain = _ref;\n\n      var flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (var _iterator2 = chain.features, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var feature = _ref2;\n\n        var f = void 0;\n        if ((f = features[feature.featureType]) && f[feature.featureSetting]) {\n          flags &= feature.disableFlags;\n          flags |= feature.enableFlags;\n        }\n      }\n\n      for (var _iterator3 = chain.subtables, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var subtable = _ref3;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    var index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  AATMorxProcessor.prototype.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  AATMorxProcessor.prototype.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  AATMorxProcessor.prototype.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error('Invalid morx subtable type: ' + this.subtable.type);\n    }\n  };\n\n  AATMorxProcessor.prototype.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  AATMorxProcessor.prototype.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n      var _lookupTable = new AATLookupTable(_lookup);\n      glyph = this.glyphs[index];\n      var gid = _lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  AATMorxProcessor.prototype.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      (_ligatureStack = this.ligatureStack).push.apply(_ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  AATMorxProcessor.prototype.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _glyphs;\n\n    var stringIndex = this.glyphs[glyphIndex].stringIndex;\n    var insertions = [];\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_glyphs = this.glyphs).splice.apply(_glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  AATMorxProcessor.prototype.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  AATMorxProcessor.prototype.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n    for (var _iterator4 = this.morx.chains, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var chain = _ref4;\n\n      for (var _iterator5 = chain.features, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var feature = _ref5;\n\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  AATMorxProcessor.prototype.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  AATMorxProcessor.prototype.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = this.morx.chains, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var chain = _ref6;\n\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = chain.subtables, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var subtable = _ref7;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  AATMorxProcessor.prototype.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        var g = _this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        var count = 0;\n        var found = 0;\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: function exit() {\n        \n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor$2(_class$2.prototype, 'getStateMachine', [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, 'getStateMachine'), _class$2.prototype), _class$2);\n\nfunction swap(glyphs, rangeA, rangeB) {\n  var reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error('Unknown verb: ' + verb);\n  }\n}\n\nvar AATLayoutEngine = function () {\n  function AATLayoutEngine(font) {\n    classCallCheck(this, AATLayoutEngine);\n\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  AATLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  AATLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  AATLayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = glyphStrings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var glyphs = _ref;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  AATLayoutEngine.prototype._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = codePoints, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var codePoint = _ref2;\n\n      var s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = function () {\n  function ShapingPlan(font, script, direction$$1) {\n    classCallCheck(this, ShapingPlan);\n\n    this.font = font;\n    this.script = script;\n    this.direction = direction$$1;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  ShapingPlan.prototype._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n    for (var _iterator = features, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var feature = _ref;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  };\n\n  /**\n   * Add features to the last stage\n   */\n\n\n  ShapingPlan.prototype.add = function add(arg) {\n    var global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  };\n\n  /**\n   * Add a new stage\n   */\n\n\n  ShapingPlan.prototype.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  ShapingPlan.prototype.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  };\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n\n\n  ShapingPlan.prototype.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var glyph = _ref2;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n\n\n  ShapingPlan.prototype.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = this.stages, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var stage = _ref3;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar _class$4;\nvar _temp;\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = (_temp = _class$4 = function () {\n  function DefaultShaper() {\n    classCallCheck(this, DefaultShaper);\n  }\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features);\n\n    // Assign the global features to all the glyphs\n    _plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}(), _class$4.zeroMarkWidths = 'AFTER_GPOS', _temp);\n\nvar type = \"Buffer\";\nvar data = [0, 1, 16, 0, 0, 0, 0, 0, 0, 0, 49, 160, 1, 149, 1, 106, 254, 237, 216, 43, 79, 3, 65, 20, 5, 224, 217, 7, 77, 41, 138, 127, 64, 37, 146, 4, 131, 37, 4, 143, 68, 33, 193, 224, 192, 129, 3, 137, 196, 32, 81, 4, 73, 80, 72, 28, 18, 137, 194, 224, 144, 224, 48, 156, 210, 153, 228, 102, 152, 217, 206, 238, 206, 62, 40, 231, 38, 95, 102, 186, 219, 121, 246, 238, 35, 29, 167, 74, 173, 194, 26, 108, 192, 88, 127, 254, 43, 229, 14, 236, 194, 30, 236, 195, 33, 28, 195, 41, 156, 195, 5, 92, 194, 21, 92, 139, 118, 183, 112, 167, 63, 79, 60, 136, 250, 163, 168, 211, 124, 123, 130, 35, 237, 25, 94, 224, 181, 7, 243, 106, 203, 155, 168, 191, 247, 96, 62, 68, 68, 68, 68, 68, 68, 68, 68, 77, 153, 252, 255, 243, 209, 131, 121, 16, 17, 17, 17, 17, 205, 179, 124, 113, 234, 108, 216, 140, 45, 244, 125, 2, 247, 240, 9, 235, 35, 165, 14, 70, 211, 115, 55, 40, 183, 149, 82, 155, 195, 230, 214, 247, 5, 89, 246, 251, 248, 18, 142, 45, 59, 142, 119, 101, 37, 77, 126, 48, 24, 255, 57, 18, 15, 121, 222, 85, 143, 21, 185, 238, 55, 179, 228, 142, 210, 230, 106, 83, 150, 108, 215, 167, 144, 115, 146, 107, 180, 247, 42, 100, 125, 49, 84, 217, 219, 54, 100, 86, 61, 100, 29, 174, 188, 50, 231, 149, 40, 125, 17, 227, 58, 144, 227, 133, 132, 92, 179, 60, 86, 55, 22, 28, 253, 15, 180, 162, 223, 63, 52, 39, 50, 209, 167, 221, 110, 16, 97, 254, 170, 196, 92, 92, 121, 82, 55, 247, 138, 246, 198, 117, 126, 214, 184, 161, 209, 245, 117, 87, 55, 247, 124, 237, 103, 221, 235, 203, 228, 158, 252, 174, 235, 217, 230, 155, 87, 217, 28, 50, 247, 100, 223, 111, 92, 37, 18, 171, 173, 221, 79, 172, 103, 113, 215, 57, 226, 123, 255, 48, 235, 111, 43, 143, 235, 230, 115, 209, 250, 154, 232, 219, 247, 190, 22, 59, 98, 237, 113, 90, 113, 158, 190, 107, 47, 177, 74, 83, 79, 244, 88, 33, 239, 48, 105, 65, 255, 174, 241, 204, 88, 161, 115, 45, 243, 124, 47, 234, 211, 126, 158, 184, 230, 103, 215, 237, 251, 101, 157, 240, 237, 99, 19, 121, 247, 13];\nvar trieData = {\n\ttype: type,\n\tdata: data\n};\n\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nvar STATE_TABLE = [\n//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]],\n\n// State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]],\n\n// State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]],\n\n// State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]],\n\n// State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]],\n\n// State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]],\n\n// State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = function (_DefaultShaper) {\n  inherits(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    classCallCheck(this, ArabicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type$$1 = getShapingClass(glyph.codePoints[0]);\n      if (type$$1 === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type$$1];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = function () {\n  function GlyphIterator(glyphs, options) {\n    classCallCheck(this, GlyphIterator);\n\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  GlyphIterator.prototype.reset = function reset() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  GlyphIterator.prototype.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  GlyphIterator.prototype.move = function move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  GlyphIterator.prototype.next = function next() {\n    return this.move(+1);\n  };\n\n  GlyphIterator.prototype.prev = function prev() {\n    return this.move(-1);\n  };\n\n  GlyphIterator.prototype.peek = function peek() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.peekIndex = function peekIndex() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  GlyphIterator.prototype.increment = function increment() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get$$1() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n  return GlyphIterator;\n}();\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = function () {\n  function OTProcessor(font, table) {\n    classCallCheck(this, OTProcessor);\n\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  OTProcessor.prototype.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var s = _ref;\n\n      for (var _iterator2 = this.table.scriptList, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var entry = _ref2;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.selectScript = function selectScript(script, language, direction$$1) {\n    var changed = false;\n    var entry = void 0;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$$1 || direction$$1 !== this.direction) {\n      this.direction = direction$$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = this.script.langSysRecords, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var lang = _ref3;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (var _iterator4 = this.language.featureIndexes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n          var _ref4;\n\n          if (_isArray4) {\n            if (_i4 >= _iterator4.length) break;\n            _ref4 = _iterator4[_i4++];\n          } else {\n            _i4 = _iterator4.next();\n            if (_i4.done) break;\n            _ref4 = _i4.value;\n          }\n\n          var featureIndex = _ref4;\n\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  OTProcessor.prototype.lookupsForFeatures = function lookupsForFeatures() {\n    var userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var exclude = arguments[1];\n\n    var lookups = [];\n    for (var _iterator5 = userFeatures, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var tag = _ref5;\n\n      var feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = feature.lookupListIndexes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref6 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref6 = _i6.value;\n        }\n\n        var lookupIndex = _ref6;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  OTProcessor.prototype.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n    for (var _iterator7 = substitutions, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n      var _ref7;\n\n      if (_isArray7) {\n        if (_i7 >= _iterator7.length) break;\n        _ref7 = _iterator7[_i7++];\n      } else {\n        _i7 = _iterator7.next();\n        if (_i7.done) break;\n        _ref7 = _i7.value;\n      }\n\n      var substitution = _ref7;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  OTProcessor.prototype.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  OTProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  OTProcessor.prototype.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = lookups, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {\n      var _ref8;\n\n      if (_isArray8) {\n        if (_i8 >= _iterator8.length) break;\n        _ref8 = _iterator8[_i8++];\n      } else {\n        _i8 = _iterator8.next();\n        if (_i8.done) break;\n        _ref8 = _i8.value;\n      }\n\n      var _ref9 = _ref8,\n          feature = _ref9.feature,\n          lookup = _ref9.lookup;\n\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = lookup.subTables, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {\n          var _ref10;\n\n          if (_isArray9) {\n            if (_i9 >= _iterator9.length) break;\n            _ref10 = _iterator9[_i9++];\n          } else {\n            _i9 = _iterator9.next();\n            if (_i9.done) break;\n            _ref10 = _i9.value;\n          }\n\n          var table = _ref10;\n\n          var res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  OTProcessor.prototype.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  OTProcessor.prototype.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = lookupRecords, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();;) {\n      var _ref11;\n\n      if (_isArray10) {\n        if (_i10 >= _iterator10.length) break;\n        _ref11 = _iterator10[_i10++];\n      } else {\n        _i10 = _iterator10.next();\n        if (_i10.done) break;\n        _ref11 = _i10.value;\n      }\n\n      var lookupRecord = _ref11;\n\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (var _iterator11 = lookup.subTables, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : _iterator11[Symbol.iterator]();;) {\n        var _ref12;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref12 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref12 = _i11.value;\n        }\n\n        var table = _ref12;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  OTProcessor.prototype.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = coverage.rangeRecords, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : _iterator12[Symbol.iterator]();;) {\n          var _ref13;\n\n          if (_isArray12) {\n            if (_i12 >= _iterator12.length) break;\n            _ref13 = _iterator12[_i12++];\n          } else {\n            _i12 = _iterator12.next();\n            if (_i12.done) break;\n            _ref13 = _i12.value;\n          }\n\n          var range = _ref13;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  OTProcessor.prototype.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  OTProcessor.prototype.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  OTProcessor.prototype.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  OTProcessor.prototype.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  OTProcessor.prototype.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = classDef.classRangeRecord, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : _iterator13[Symbol.iterator]();;) {\n          var _ref14;\n\n          if (_isArray13) {\n            if (_i13 >= _iterator13.length) break;\n            _ref14 = _iterator13[_i13++];\n          } else {\n            _i13 = _iterator13.next();\n            if (_i13.done) break;\n            _ref14 = _i13.value;\n          }\n\n          var range = _ref14;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  OTProcessor.prototype.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  OTProcessor.prototype.applyContext = function applyContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.ruleSets[index];\n        for (var _iterator14 = set$$1, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : _iterator14[Symbol.iterator]();;) {\n          var _ref15;\n\n          if (_isArray14) {\n            if (_i14 >= _iterator14.length) break;\n            _ref15 = _iterator14[_i14++];\n          } else {\n            _i14 = _iterator14.next();\n            if (_i14.done) break;\n            _ref15 = _i14.value;\n          }\n\n          var rule = _ref15;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set$$1 = table.classSet[index];\n        for (var _iterator15 = set$$1, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : _iterator15[Symbol.iterator]();;) {\n          var _ref16;\n\n          if (_isArray15) {\n            if (_i15 >= _iterator15.length) break;\n            _ref16 = _iterator15[_i15++];\n          } else {\n            _i15 = _iterator15.next();\n            if (_i15.done) break;\n            _ref16 = _i15.value;\n          }\n\n          var _rule = _ref16;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  OTProcessor.prototype.applyChainingContext = function applyChainingContext(table) {\n    switch (table.version) {\n      case 1:\n        var index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        var set$$1 = table.chainRuleSets[index];\n        for (var _iterator16 = set$$1, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : _iterator16[Symbol.iterator]();;) {\n          var _ref17;\n\n          if (_isArray16) {\n            if (_i16 >= _iterator16.length) break;\n            _ref17 = _iterator16[_i16++];\n          } else {\n            _i16 = _iterator16.next();\n            if (_i16.done) break;\n            _ref17 = _i16.value;\n          }\n\n          var rule = _ref17;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = rules, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : _iterator17[Symbol.iterator]();;) {\n          var _ref18;\n\n          if (_isArray17) {\n            if (_i17 >= _iterator17.length) break;\n            _ref18 = _iterator17[_i17++];\n          } else {\n            _i17 = _iterator17.next();\n            if (_i17.done) break;\n            _ref18 = _i17.value;\n          }\n\n          var _rule2 = _ref18;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = function () {\n  function GlyphInfo(font, id) {\n    var codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var features = arguments[3];\n    var stringIndex = arguments[4];\n    classCallCheck(this, GlyphInfo);\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.stringIndex = stringIndex;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if ((typeof features === 'undefined' ? 'undefined' : _typeof(features)) === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  GlyphInfo.prototype.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features, this.stringIndex);\n  };\n\n  createClass(GlyphInfo, [{\n    key: 'id',\n    get: function get$$1() {\n      return this._id;\n    },\n    set: function set$$1(id) {\n      this._id = id;\n      this.substituted = true;\n\n      var GDEF = this._font.GDEF;\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._font.getGlyph(this.id, this.codePoints).advanceWidth;\n    }\n  }]);\n  return GlyphInfo;\n}();\n\nvar _class$5;\nvar _temp$1;\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nvar HangulShaper = (_temp$1 = _class$5 = function (_DefaultShaper) {\n  inherits(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    classCallCheck(this, HangulShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper), _class$5.zeroMarkWidths = 'NONE', _temp$1);\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\nvar V_BASE = 0x1161; // vowel\nvar T_BASE = 0x11a7; // trail\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\nvar isCombiningT = function isCombiningT(code) {\n  return T_BASE + 1 && 1 <= code && code <= T_END;\n};\n\n// Character categories\nvar X = 0; // Other character\nvar L = 1; // Leading consonant\nvar V = 2; // Medial vowel\nvar T = 3; // Trailing consonant\nvar LV = 4; // Composed <LV> syllable\nvar LVT = 5; // Composed <LVT> syllable\nvar M = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n  if (isV(code)) {\n    return V;\n  }\n  if (isT(code)) {\n    return T;\n  }\n  if (isLV(code)) {\n    return LV;\n  }\n  if (isLVT(code)) {\n    return LVT;\n  }\n  if (isTone(code)) {\n    return M;\n  }\n  return X;\n}\n\n// State machine actions\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nvar STATE_TABLE$1 = [\n//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]],\n\n// State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]],\n\n// State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  var lv = void 0,\n      ljmo = void 0,\n      vjmo = void 0,\n      tjmo = void 0;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n\tstateTable: stateTable,\n\taccepting: accepting,\n\ttags: tags\n};\n\nvar categories = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$1 = { \"2507\": [2503, 2494], \"2508\": [2503, 2519], \"2888\": [2887, 2902], \"2891\": [2887, 2878], \"2892\": [2887, 2903], \"3018\": [3014, 3006], \"3019\": [3015, 3006], \"3020\": [3014, 3031], \"3144\": [3142, 3158], \"3264\": [3263, 3285], \"3271\": [3270, 3285], \"3272\": [3270, 3286], \"3274\": [3270, 3266], \"3275\": [3270, 3266, 3285], \"3402\": [3398, 3390], \"3403\": [3399, 3390], \"3404\": [3398, 3415], \"3546\": [3545, 3530], \"3548\": [3545, 3535], \"3549\": [3545, 3535, 3530], \"3550\": [3545, 3551], \"3635\": [3661, 3634], \"3763\": [3789, 3762], \"3955\": [3953, 3954], \"3957\": [3953, 3956], \"3958\": [4018, 3968], \"3959\": [4018, 3953, 3968], \"3960\": [4019, 3968], \"3961\": [4019, 3953, 3968], \"3969\": [3953, 3968], \"6971\": [6970, 6965], \"6973\": [6972, 6965], \"6976\": [6974, 6965], \"6977\": [6975, 6965], \"6979\": [6978, 6965], \"69934\": [69937, 69927], \"69935\": [69938, 69927], \"70475\": [70471, 70462], \"70476\": [70471, 70487], \"70843\": [70841, 70842], \"70844\": [70841, 70832], \"70846\": [70841, 70845], \"71098\": [71096, 71087], \"71099\": [71097, 71087] };\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 2, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 23, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 46, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting$1 = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n\tcategories: categories,\n\tdecompositions: decompositions$1,\n\tstateTable: stateTable$1,\n\taccepting: accepting$1,\n\ttags: tags$1\n};\n\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13, // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17, // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nvar POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 194, 160, 1, 177, 13, 78, 242, 237, 157, 127, 172, 29, 69, 21, 199, 247, 245, 222, 119, 127, 188, 119, 251, 110, 95, 133, 68, 98, 251, 71, 67, 137, 49, 197, 152, 166, 16, 107, 138, 105, 21, 9, 34, 81, 219, 24, 132, 104, 177, 6, 67, 176, 36, 4, 106, 48, 109, 132, 82, 130, 63, 10, 216, 31, 198, 146, 148, 88, 19, 172, 37, 65, 44, 137, 40, 38, 160, 173, 41, 70, 146, 106, 172, 169, 70, 76, 99, 180, 182, 9, 105, 32, 169, 5, 98, 65, 41, 45, 224, 119, 238, 206, 188, 123, 238, 220, 153, 217, 249, 181, 187, 239, 209, 61, 201, 39, 187, 59, 59, 59, 115, 230, 156, 51, 179, 179, 179, 123, 223, 59, 94, 75, 146, 151, 192, 171, 224, 13, 48, 167, 158, 36, 239, 5, 243, 193, 37, 224, 21, 164, 253, 175, 22, 190, 189, 24, 101, 45, 2, 75, 192, 50, 135, 114, 175, 64, 222, 79, 128, 107, 192, 42, 112, 61, 88, 3, 110, 6, 183, 129, 175, 131, 141, 134, 242, 150, 226, 220, 10, 240, 77, 240, 93, 176, 25, 108, 7, 59, 193, 35, 224, 56, 242, 60, 134, 237, 207, 64, 194, 121, 154, 111, 15, 128, 131, 224, 79, 224, 111, 224, 40, 56, 1, 78, 130, 211, 224, 44, 168, 141, 38, 73, 27, 76, 130, 139, 192, 2, 240, 126, 240, 33, 240, 97, 176, 28, 92, 5, 62, 13, 174, 3, 55, 130, 155, 193, 109, 224, 78, 112, 55, 184, 15, 60, 8, 190, 15, 126, 0, 126, 4, 126, 2, 158, 228, 199, 207, 128, 103, 193, 239, 193, 159, 193, 17, 112, 12, 188, 8, 94, 1, 175, 129, 115, 163, 169, 206, 245, 70, 146, 116, 192, 5, 141, 244, 120, 30, 182, 11, 193, 165, 96, 49, 88, 10, 150, 131, 171, 249, 249, 207, 98, 123, 61, 88, 3, 110, 1, 183, 55, 82, 155, 172, 231, 91, 91, 54, 242, 252, 223, 198, 246, 46, 176, 149, 31, 63, 192, 183, 155, 80, 215, 14, 150, 94, 239, 95, 179, 203, 177, 14, 27, 118, 144, 50, 247, 96, 127, 47, 120, 10, 236, 3, 191, 3, 127, 4, 127, 5, 255, 0, 47, 128, 147, 36, 255, 155, 124, 123, 154, 167, 109, 99, 62, 198, 126, 173, 153, 36, 227, 224, 61, 205, 212, 94, 239, 195, 246, 226, 102, 154, 103, 17, 79, 91, 130, 237, 50, 112, 101, 51, 141, 39, 17, 75, 215, 226, 120, 37, 184, 1, 172, 1, 183, 128, 219, 249, 53, 235, 249, 118, 19, 182, 155, 121, 121, 226, 186, 173, 56, 222, 209, 52, 183, 117, 87, 198, 121, 106, 227, 31, 35, 239, 22, 110, 251, 245, 216, 254, 20, 199, 191, 0, 191, 38, 101, 252, 22, 251, 127, 0, 247, 224, 124, 7, 252, 69, 81, 254, 223, 45, 234, 180, 101, 173, 136, 5, 148, 121, 204, 177, 220, 151, 34, 234, 81, 20, 255, 134, 206, 255, 1, 111, 128, 164, 149, 36, 163, 173, 52, 125, 111, 61, 181, 185, 156, 127, 54, 63, 47, 250, 226, 5, 56, 158, 7, 22, 114, 104, 222, 69, 173, 52, 110, 150, 144, 244, 179, 6, 93, 88, 108, 47, 35, 121, 87, 241, 250, 175, 145, 244, 248, 56, 242, 92, 77, 242, 49, 93, 133, 223, 62, 211, 82, 235, 45, 48, 157, 171, 168, 168, 240, 99, 91, 213, 175, 42, 42, 42, 42, 42, 42, 42, 42, 42, 28, 217, 198, 215, 25, 202, 214, 67, 102, 39, 127, 214, 189, 174, 101, 127, 205, 91, 154, 244, 55, 53, 233, 95, 224, 207, 202, 95, 198, 246, 171, 224, 14, 176, 1, 220, 11, 238, 7, 91, 193, 67, 224, 135, 224, 81, 240, 4, 120, 170, 149, 174, 45, 237, 195, 246, 0, 56, 8, 14, 131, 35, 224, 40, 56, 1, 78, 181, 210, 245, 156, 215, 177, 125, 139, 61, 223, 183, 241, 12, 15, 46, 108, 167, 245, 206, 107, 247, 117, 88, 136, 253, 75, 219, 246, 109, 172, 168, 168, 168, 168, 8, 135, 173, 91, 94, 134, 177, 247, 76, 173, 191, 222, 94, 22, 101, 219, 162, 162, 162, 34, 14, 175, 145, 119, 82, 91, 121, 255, 94, 134, 113, 230, 74, 112, 173, 52, 215, 251, 156, 227, 220, 175, 195, 199, 138, 83, 188, 142, 183, 193, 23, 219, 253, 247, 169, 95, 193, 254, 173, 82, 153, 119, 180, 251, 239, 117, 40, 236, 189, 204, 6, 156, 187, 119, 26, 204, 63, 147, 57, 41, 43, 192, 157, 96, 127, 55, 155, 45, 200, 119, 72, 147, 247, 85, 164, 47, 156, 76, 146, 213, 224, 33, 240, 252, 228, 224, 249, 227, 56, 223, 153, 139, 185, 56, 88, 13, 238, 29, 75, 146, 103, 65, 50, 14, 95, 129, 187, 192, 10, 28, 239, 227, 219, 163, 124, 75, 153, 223, 25, 78, 147, 185, 17, 121, 54, 146, 124, 191, 193, 254, 57, 126, 124, 197, 236, 36, 185, 27, 236, 7, 15, 143, 196, 229, 28, 47, 243, 178, 9, 216, 115, 34, 221, 223, 52, 161, 214, 241, 128, 38, 189, 162, 162, 162, 162, 34, 127, 222, 41, 121, 12, 142, 125, 255, 113, 97, 121, 183, 252, 250, 203, 126, 254, 43, 155, 171, 192, 253, 152, 7, 126, 175, 61, 252, 60, 202, 190, 243, 121, 24, 233, 187, 200, 60, 113, 55, 246, 31, 111, 167, 243, 209, 45, 138, 242, 196, 247, 119, 236, 219, 177, 51, 252, 26, 246, 188, 205, 190, 169, 99, 229, 253, 156, 151, 245, 43, 69, 125, 12, 86, 230, 254, 246, 224, 243, 241, 205, 124, 251, 92, 123, 184, 62, 155, 57, 38, 251, 102, 138, 173, 119, 179, 57, 179, 124, 253, 33, 148, 121, 24, 28, 105, 247, 231, 198, 199, 120, 61, 47, 98, 251, 50, 248, 175, 164, 207, 219, 237, 254, 60, 188, 129, 62, 52, 27, 92, 56, 70, 230, 180, 60, 223, 124, 158, 118, 134, 127, 247, 181, 27, 233, 151, 32, 237, 131, 99, 195, 250, 95, 62, 214, 63, 62, 202, 203, 254, 232, 152, 157, 15, 5, 247, 248, 248, 31, 117, 124, 10, 172, 2, 159, 7, 95, 2, 55, 129, 29, 56, 183, 22, 219, 117, 96, 195, 88, 58, 79, 254, 14, 216, 198, 206, 129, 93, 96, 15, 216, 11, 158, 36, 122, 62, 51, 150, 206, 167, 15, 130, 195, 224, 8, 56, 10, 78, 128, 83, 22, 237, 121, 29, 121, 206, 128, 145, 113, 245, 249, 7, 224, 203, 54, 206, 77, 142, 247, 143, 47, 194, 254, 2, 126, 252, 32, 142, 63, 128, 253, 197, 252, 248, 35, 216, 126, 76, 83, 22, 181, 255, 82, 69, 108, 217, 194, 174, 223, 211, 40, 191, 47, 219, 232, 89, 36, 91, 13, 245, 127, 114, 92, 127, 221, 59, 138, 126, 58, 19, 219, 175, 226, 95, 205, 119, 81, 28, 120, 182, 37, 70, 221, 172, 191, 177, 241, 110, 37, 233, 219, 236, 158, 116, 3, 137, 171, 213, 216, 191, 9, 156, 203, 41, 158, 178, 218, 183, 174, 158, 234, 120, 171, 52, 254, 124, 205, 48, 30, 157, 15, 80, 63, 126, 3, 182, 216, 52, 158, 95, 159, 119, 141, 63, 241, 109, 229, 183, 52, 249, 46, 39, 247, 249, 117, 26, 63, 138, 243, 108, 222, 177, 221, 112, 126, 61, 223, 103, 191, 97, 217, 140, 178, 86, 242, 227, 237, 216, 223, 9, 30, 49, 140, 145, 50, 187, 45, 126, 75, 241, 114, 14, 223, 204, 63, 10, 29, 159, 152, 65, 241, 172, 107, 199, 47, 103, 72, 27, 88, 140, 236, 135, 174, 207, 129, 67, 224, 121, 240, 79, 174, 251, 11, 22, 109, 96, 109, 165, 191, 225, 96, 191, 17, 184, 15, 233, 39, 199, 211, 216, 103, 223, 95, 236, 37, 249, 214, 146, 107, 79, 35, 207, 217, 241, 52, 109, 164, 227, 222, 183, 92, 17, 191, 101, 88, 105, 81, 46, 123, 222, 104, 119, 6, 211, 232, 239, 31, 196, 111, 186, 68, 219, 39, 121, 94, 246, 108, 177, 143, 204, 253, 22, 75, 115, 212, 139, 120, 59, 31, 15, 152, 31, 78, 39, 98, 247, 255, 233, 194, 188, 214, 187, 187, 125, 148, 167, 13, 237, 220, 114, 158, 216, 64, 135, 203, 220, 42, 180, 46, 213, 250, 199, 76, 98, 129, 52, 94, 186, 216, 167, 232, 57, 117, 53, 22, 198, 133, 197, 238, 177, 218, 72, 194, 150, 64, 103, 26, 245, 241, 193, 125, 27, 202, 214, 121, 186, 114, 190, 75, 217, 246, 143, 22, 155, 77, 206, 76, 208, 117, 26, 35, 36, 235, 124, 86, 190, 46, 57, 159, 149, 207, 87, 207, 178, 109, 53, 211, 218, 225, 226, 179, 233, 96, 15, 149, 190, 101, 235, 23, 203, 7, 58, 41, 91, 23, 31, 157, 203, 210, 127, 186, 199, 68, 153, 54, 41, 35, 118, 108, 164, 108, 189, 203, 182, 81, 153, 177, 84, 134, 253, 169, 222, 121, 213, 239, 43, 101, 196, 196, 68, 107, 144, 250, 172, 8, 140, 68, 100, 142, 93, 190, 118, 51, 165, 133, 103, 233, 137, 185, 233, 254, 172, 102, 63, 221, 133, 86, 189, 127, 109, 207, 70, 99, 28, 110, 35, 154, 55, 83, 55, 110, 147, 54, 41, 143, 225, 250, 156, 236, 107, 107, 217, 199, 137, 169, 44, 142, 16, 221, 177, 171, 15, 123, 215, 26, 252, 43, 206, 83, 81, 149, 193, 68, 248, 183, 195, 253, 219, 81, 248, 79, 200, 44, 158, 71, 72, 135, 231, 103, 254, 149, 235, 83, 73, 167, 57, 156, 54, 212, 38, 201, 191, 83, 249, 44, 253, 43, 226, 59, 100, 108, 177, 245, 239, 80, 91, 10, 246, 175, 156, 87, 222, 103, 194, 252, 43, 108, 47, 252, 43, 144, 69, 78, 167, 254, 165, 146, 53, 38, 235, 218, 99, 188, 198, 210, 191, 83, 227, 42, 233, 143, 245, 201, 12, 133, 36, 113, 237, 191, 194, 167, 218, 227, 130, 252, 107, 219, 127, 101, 68, 63, 18, 125, 74, 248, 88, 229, 223, 144, 251, 45, 181, 137, 28, 75, 174, 227, 179, 177, 142, 140, 88, 106, 206, 144, 241, 217, 213, 191, 163, 22, 227, 243, 168, 69, 255, 85, 201, 168, 102, 76, 136, 61, 62, 119, 147, 126, 191, 13, 153, 235, 49, 223, 138, 252, 54, 227, 179, 169, 47, 235, 238, 149, 98, 95, 78, 83, 229, 147, 211, 180, 233, 150, 243, 47, 89, 104, 95, 86, 141, 223, 226, 222, 60, 75, 234, 219, 140, 134, 101, 255, 86, 249, 95, 39, 121, 188, 151, 80, 137, 60, 159, 238, 213, 29, 50, 86, 231, 208, 159, 93, 253, 201, 250, 115, 179, 57, 12, 237, 83, 52, 93, 62, 110, 100, 244, 103, 122, 157, 41, 166, 168, 93, 232, 53, 46, 254, 205, 18, 27, 159, 207, 36, 255, 234, 242, 10, 17, 227, 181, 141, 127, 233, 177, 216, 183, 241, 175, 60, 246, 170, 100, 74, 215, 8, 254, 237, 118, 83, 124, 196, 213, 23, 190, 253, 139, 250, 64, 220, 47, 117, 48, 201, 26, 47, 109, 218, 155, 53, 94, 210, 152, 12, 157, 15, 153, 198, 74, 113, 79, 53, 218, 196, 113, 190, 107, 59, 39, 142, 230, 103, 151, 62, 73, 98, 67, 228, 179, 209, 131, 138, 170, 143, 233, 214, 47, 196, 57, 177, 21, 107, 25, 170, 245, 16, 109, 44, 56, 142, 167, 116, 125, 195, 85, 98, 251, 194, 151, 174, 193, 166, 58, 59, 83, 97, 215, 211, 126, 58, 171, 57, 184, 142, 196, 182, 141, 218, 32, 44, 77, 172, 41, 249, 172, 11, 153, 236, 41, 246, 109, 210, 109, 125, 147, 229, 47, 249, 60, 45, 223, 164, 139, 171, 253, 19, 158, 151, 61, 75, 211, 231, 105, 149, 253, 133, 111, 152, 200, 246, 103, 63, 19, 18, 227, 76, 79, 23, 199, 184, 87, 197, 80, 158, 180, 56, 186, 243, 214, 235, 78, 14, 113, 70, 227, 183, 203, 109, 40, 215, 203, 76, 82, 203, 136, 13, 235, 113, 50, 194, 88, 76, 197, 103, 13, 152, 174, 245, 178, 251, 51, 139, 147, 134, 78, 247, 73, 123, 122, 237, 119, 200, 159, 7, 162, 63, 152, 160, 107, 213, 170, 123, 185, 79, 236, 170, 164, 236, 49, 191, 135, 229, 252, 65, 23, 43, 170, 251, 42, 139, 157, 222, 220, 154, 61, 247, 79, 12, 142, 85, 83, 176, 186, 61, 231, 85, 116, 109, 66, 213, 6, 89, 31, 99, 204, 142, 164, 121, 198, 107, 41, 34, 143, 184, 86, 164, 83, 104, 89, 153, 117, 217, 48, 57, 108, 75, 85, 189, 140, 22, 175, 191, 167, 135, 165, 253, 196, 181, 242, 123, 152, 172, 24, 87, 73, 87, 218, 15, 69, 85, 142, 77, 249, 73, 224, 245, 161, 245, 231, 221, 62, 159, 114, 139, 128, 74, 222, 117, 248, 158, 207, 171, 189, 178, 248, 172, 99, 244, 174, 147, 210, 108, 158, 73, 98, 213, 175, 130, 214, 111, 211, 238, 188, 234, 119, 149, 24, 246, 103, 226, 93, 127, 81, 247, 104, 155, 117, 149, 8, 107, 4, 194, 247, 166, 245, 24, 25, 250, 172, 49, 181, 38, 195, 239, 253, 189, 253, 217, 41, 34, 93, 85, 6, 155, 35, 116, 44, 238, 75, 98, 46, 58, 101, 255, 192, 117, 207, 208, 49, 160, 168, 241, 59, 70, 253, 177, 245, 103, 244, 236, 91, 84, 31, 80, 244, 99, 155, 103, 25, 121, 238, 79, 69, 164, 247, 222, 81, 27, 158, 25, 76, 107, 30, 42, 123, 90, 63, 99, 198, 180, 137, 199, 90, 160, 235, 253, 110, 200, 126, 30, 62, 163, 162, 123, 158, 160, 107, 71, 186, 103, 12, 149, 127, 101, 196, 188, 87, 171, 191, 195, 243, 135, 210, 207, 57, 198, 183, 170, 237, 81, 234, 215, 197, 133, 56, 239, 242, 28, 61, 225, 183, 190, 160, 91, 39, 84, 173, 17, 54, 106, 131, 215, 210, 216, 9, 29, 255, 67, 175, 167, 239, 194, 196, 61, 207, 251, 254, 155, 67, 12, 201, 182, 203, 242, 135, 156, 62, 94, 55, 151, 31, 210, 159, 92, 97, 247, 253, 86, 210, 95, 139, 82, 225, 122, 31, 180, 246, 91, 158, 247, 50, 197, 125, 70, 229, 11, 214, 215, 6, 214, 78, 70, 236, 237, 205, 230, 77, 202, 58, 53, 99, 131, 109, 220, 100, 221, 31, 101, 25, 154, 63, 104, 108, 97, 138, 73, 211, 152, 68, 215, 45, 91, 53, 115, 221, 46, 247, 233, 129, 24, 39, 250, 134, 206, 159, 178, 100, 234, 219, 219, 49, 62, 255, 29, 243, 96, 174, 132, 42, 77, 140, 99, 99, 131, 125, 91, 148, 97, 235, 207, 88, 184, 214, 23, 122, 158, 230, 51, 109, 77, 215, 132, 180, 51, 143, 178, 109, 235, 179, 173, 195, 75, 151, 81, 208, 232, 31, 199, 184, 23, 248, 232, 49, 213, 110, 139, 103, 76, 37, 205, 196, 249, 55, 173, 190, 190, 163, 18, 211, 231, 62, 18, 90, 87, 12, 253, 99, 180, 195, 86, 92, 117, 170, 119, 226, 182, 81, 27, 183, 57, 83, 84, 61, 42, 95, 250, 92, 155, 87, 172, 196, 142, 185, 60, 237, 230, 83, 135, 141, 174, 190, 82, 100, 204, 248, 232, 80, 196, 249, 162, 37, 111, 155, 103, 181, 189, 104, 253, 99, 148, 17, 59, 22, 243, 142, 233, 188, 218, 90, 100, 125, 182, 229, 229, 41, 54, 122, 210, 247, 32, 242, 247, 4, 242, 179, 42, 253, 93, 83, 158, 235, 127, 170, 119, 115, 58, 123, 133, 250, 62, 215, 117, 14, 151, 53, 73, 213, 121, 221, 154, 133, 106, 13, 97, 164, 255, 155, 19, 151, 248, 138, 246, 59, 224, 28, 215, 138, 92, 214, 89, 109, 126, 75, 68, 227, 38, 120, 61, 212, 103, 125, 194, 102, 205, 130, 147, 21, 207, 165, 188, 119, 177, 137, 103, 5, 173, 90, 159, 41, 251, 231, 60, 126, 152, 214, 209, 92, 223, 127, 119, 73, 127, 49, 174, 161, 234, 236, 18, 217, 230, 166, 53, 75, 186, 150, 56, 240, 126, 168, 238, 127, 63, 11, 233, 47, 38, 127, 139, 113, 222, 170, 221, 1, 241, 222, 235, 47, 101, 172, 119, 91, 198, 169, 188, 254, 171, 122, 255, 148, 37, 33, 223, 136, 38, 30, 254, 29, 154, 79, 4, 218, 70, 46, 67, 59, 111, 25, 73, 223, 115, 54, 20, 223, 39, 198, 246, 141, 238, 221, 172, 234, 61, 30, 211, 77, 108, 243, 22, 211, 124, 206, 166, 173, 170, 54, 169, 202, 20, 223, 180, 134, 232, 101, 51, 39, 182, 61, 239, 83, 119, 55, 194, 121, 215, 241, 50, 84, 95, 27, 188, 99, 157, 198, 137, 237, 248, 151, 49, 134, 100, 221, 127, 153, 190, 226, 155, 92, 33, 161, 243, 47, 23, 31, 196, 242, 109, 168, 207, 77, 250, 184, 182, 49, 182, 254, 166, 244, 68, 147, 183, 72, 29, 125, 109, 173, 146, 50, 234, 13, 109, 111, 17, 254, 14, 185, 222, 166, 189, 177, 219, 17, 98, 203, 44, 187, 230, 113, 62, 203, 62, 182, 118, 178, 21, 223, 120, 202, 58, 31, 18, 47, 161, 101, 219, 232, 239, 122, 189, 141, 221, 242, 138, 197, 24, 109, 241, 41, 67, 213, 230, 50, 165, 8, 155, 103, 197, 102, 30, 49, 145, 151, 132, 212, 19, 67, 47, 155, 254, 101, 202, 151, 135, 255, 116, 109, 44, 35, 126, 92, 252, 83, 68, 28, 21, 97, 243, 60, 234, 114, 209, 169, 140, 250, 203, 106, 127, 86, 157, 236, 185, 109, 84, 250, 150, 152, 109, 233, 223, 225, 162, 34, 242, 201, 127, 199, 110, 96, 13, 205, 112, 28, 27, 89, 26, 100, 13, 121, 168, 237, 19, 254, 207, 145, 58, 251, 197, 236, 195, 62, 117, 217, 214, 235, 91, 102, 140, 54, 186, 74, 104, 27, 125, 203, 142, 85, 71, 104, 253, 121, 248, 64, 64, 191, 207, 23, 127, 23, 105, 218, 189, 211, 179, 88, 11, 151, 105, 100, 188, 183, 144, 197, 250, 61, 65, 224, 120, 97, 146, 222, 119, 232, 62, 127, 107, 57, 178, 125, 179, 254, 46, 50, 123, 103, 74, 223, 201, 229, 53, 254, 217, 148, 97, 180, 87, 1, 241, 152, 21, 155, 38, 91, 138, 223, 6, 9, 223, 251, 252, 46, 196, 57, 198, 10, 236, 183, 114, 140, 216, 72, 148, 191, 53, 158, 163, 127, 93, 255, 102, 56, 123, 127, 106, 122, 47, 63, 133, 244, 183, 39, 166, 252, 229, 25, 23, 212, 230, 177, 198, 54, 159, 49, 46, 150, 175, 122, 101, 229, 112, 191, 96, 113, 198, 124, 36, 222, 207, 103, 141, 63, 38, 253, 133, 142, 42, 93, 125, 245, 247, 185, 222, 212, 215, 202, 238, 67, 46, 136, 223, 41, 101, 222, 143, 164, 119, 68, 3, 237, 13, 253, 94, 199, 243, 239, 181, 210, 124, 67, 182, 143, 236, 123, 122, 94, 151, 87, 72, 151, 252, 255, 3, 29, 66, 228, 191, 143, 79, 199, 180, 169, 242, 244, 166, 211, 250, 132, 246, 43, 97, 19, 185, 110, 211, 183, 79, 84, 178, 206, 103, 9, 213, 161, 140, 251, 140, 77, 124, 235, 206, 211, 184, 20, 115, 50, 249, 94, 147, 37, 161, 253, 35, 175, 182, 11, 145, 207, 171, 218, 28, 243, 25, 74, 70, 246, 185, 172, 95, 12, 255, 187, 66, 219, 175, 250, 6, 195, 69, 138, 244, 63, 253, 237, 105, 86, 204, 143, 215, 213, 107, 54, 177, 245, 15, 149, 162, 238, 133, 3, 117, 90, 124, 67, 145, 213, 175, 92, 237, 151, 53, 207, 180, 125, 134, 115, 125, 62, 148, 197, 247, 121, 209, 247, 121, 201, 183, 126, 157, 62, 62, 207, 200, 62, 245, 135, 232, 234, 98, 87, 185, 158, 16, 201, 91, 207, 34, 36, 166, 45, 99, 180, 53, 52, 62, 105, 186, 156, 199, 116, 141, 79, 27, 92, 174, 205, 210, 53, 164, 111, 248, 232, 31, 35, 94, 109, 245, 160, 182, 178, 105, 115, 72, 123, 66, 36, 15, 219, 134, 138, 169, 204, 24, 62, 116, 209, 33, 73, 134, 235, 119, 209, 67, 149, 87, 46, 199, 164, 131, 46, 77, 181, 85, 213, 105, 210, 223, 166, 60, 213, 245, 46, 177, 98, 123, 141, 174, 45, 121, 245, 153, 172, 152, 176, 169, 39, 207, 250, 93, 36, 70, 57, 161, 250, 231, 209, 254, 24, 182, 45, 194, 23, 121, 215, 27, 234, 223, 80, 125, 66, 109, 20, 106, 243, 60, 226, 168, 104, 41, 163, 78, 157, 252, 31];\nvar trieData$1 = {\n\ttype: type$1,\n\tdata: data$1\n};\n\nvar _class$6;\nvar _temp$2;\n\nvar decompositions = useData.decompositions;\n\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine = new StateMachine(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nvar IndicShaper = (_temp$2 = _class$6 = function (_DefaultShaper) {\n  inherits(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    classCallCheck(this, IndicShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper), _class$6.zeroMarkWidths = 'NONE', _temp$2);\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  classCallCheck(this, IndicInfo);\n\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n  for (var _iterator = stateMachine.match(glyphs.map(indicCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags$$1 = _ref2[2];\n\n    if (start > last) {\n      ++syllable;\n      for (var _i2 = last; _i2 < start; _i2++) {\n        glyphs[_i2].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (var _i3 = start; _i3 <= end; _i3++) {\n      glyphs[_i3].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i3]), indicPosition(glyphs[_i3]), tags$$1[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i4 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _glyph$features;\n\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i4 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i4++];\n    } else {\n      _i4 = _iterator2.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo,\n        category = _glyphs$start$shaperI.category,\n        syllableType = _glyphs$start$shaperI.syllableType;\n\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n\n      // Insert after possible Repha.\n      var _i5 = start;\n      while (_i5 < end && glyphs[_i5].shaperInfo.category === CATEGORIES.Repha) {\n        _i5++;\n      }\n\n      glyphs.splice(_i5++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    var base = end;\n    var limit = start;\n    var hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i6 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i6].shaperInfo;\n\n            // until a consonant is found\n            if (isConsonant(glyphs[_i6])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i6;\n                break;\n              }\n\n              // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i6;\n            } else if (start < _i6 && _info.category === CATEGORIES.ZWJ && glyphs[_i6 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i6 > limit);\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start;\n\n          // Mark all subsequent consonants as below.\n          for (var _i7 = base + 1; _i7 < end; _i7++) {\n            if (isConsonant(glyphs[_i7])) {\n              glyphs[_i7].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (var _i8 = start; _i8 < base; _i8++) {\n      var _info2 = glyphs[_i8].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (var _i9 = base + 1; _i9 < end; _i9++) {\n      if (glyphs[_i9].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i9 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (var _i10 = base + 1; _i10 < end; _i10++) {\n        if (glyphs[_i10].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n          for (_j = end - 1; _j > _i10; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i10) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i10];\n            glyphs.splice.apply(glyphs, [_i10, 0].concat(glyphs.splice(_i10 + 1, _j - _i10)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    var lastPos = POSITIONS.Start;\n    for (var _i11 = start; _i11 < end; _i11++) {\n      var _info3 = glyphs[_i11].shaperInfo;\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i11; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    var last = base;\n    for (var _i12 = base + 1; _i12 < end; _i12++) {\n      if (isConsonant(glyphs[_i12])) {\n        for (var _j3 = last + 1; _j3 < _i12; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i12].shaperInfo.position;\n          }\n        }\n        last = _i12;\n      } else if (glyphs[_i12].shaperInfo.category === CATEGORIES.M) {\n        last = _i12;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr));\n\n    // Find base again\n    for (var _i13 = start; _i13 < end; _i13++) {\n      if (glyphs[_i13].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i13;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (var _i14 = start; _i14 < end && glyphs[_i14].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i14++) {\n      glyphs[_i14].features.rphf = true;\n    }\n\n    // Pre-base\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (var _i15 = start; _i15 < base; _i15++) {\n      glyphs[_i15].features.half = true;\n      if (blwf) {\n        glyphs[_i15].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (var _i16 = base + 1; _i16 < end; _i16++) {\n      glyphs[_i16].features.abvf = true;\n      glyphs[_i16].features.pstf = true;\n      glyphs[_i16].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i17 = start; _i17 + 1 < base; _i17++) {\n        if (glyphs[_i17].shaperInfo.category === CATEGORIES.Ra && glyphs[_i17 + 1].shaperInfo.category === CATEGORIES.H && (_i17 + 1 === base || glyphs[_i17 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i17].features.blwf = true;\n          glyphs[_i17 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i18 = base + 1; _i18 + prefLen - 1 < end; _i18++) {\n        var _g2 = [glyphs[_i18].copy(), glyphs[_i18 + 1].copy()];\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i18++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; _i18 < end; _i18++) {\n              glyphs[_i18].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (var _i19 = start + 1; _i19 < end; _i19++) {\n      if (isJoiner(glyphs[_i19])) {\n        var nonJoiner = glyphs[_i19].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i19;\n\n        do {\n          _j5--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    var tryPref = !!features.pref;\n\n    // Find base again\n    var base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i20 = base + 1; _i20 < end; _i20++) {\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 === end || !isHalantOrCoeng(glyphs[_i20])) {\n              break;\n            }\n\n            _i20++; // Skip halant.\n            while (_i20 < end && isJoiner(glyphs[_i20])) {\n              _i20++;\n            }\n\n            if (_i20 < end && isConsonant(glyphs[_i20]) && glyphs[_i20].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i20;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i21 = newPos; _i21 > start; _i21--) {\n          if (glyphs[_i21 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i21 - 1;\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i22 = base + 1; _i22 < newRephPos; _i22++) {\n            if (glyphs[_i22].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (var _i23 = base + 1; _i23 < end; _i23++) {\n        if (glyphs[_i23].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i23].isLigated && !glyphs[_i23].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i23;\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i23;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 169, 208, 1, 81, 12, 174, 243, 237, 156, 127, 168, 29, 71, 21, 199, 231, 221, 247, 222, 253, 245, 110, 94, 242, 108, 126, 244, 217, 24, 155, 182, 20, 35, 98, 173, 138, 105, 21, 12, 109, 197, 90, 5, 83, 21, 141, 69, 169, 173, 149, 38, 42, 216, 7, 66, 26, 80, 82, 193, 104, 161, 137, 86, 37, 226, 175, 170, 49, 40, 36, 129, 162, 45, 20, 76, 171, 96, 219, 32, 54, 234, 31, 166, 138, 86, 13, 180, 193, 254, 209, 98, 181, 85, 12, 175, 180, 20, 191, 227, 206, 225, 158, 119, 50, 51, 59, 179, 187, 179, 123, 159, 185, 7, 62, 204, 238, 236, 236, 204, 153, 51, 115, 118, 103, 102, 127, 60, 223, 82, 106, 98, 82, 169, 30, 152, 3, 27, 193, 38, 112, 41, 184, 220, 196, 205, 87, 16, 190, 21, 188, 29, 188, 27, 124, 192, 147, 238, 122, 112, 179, 37, 126, 7, 88, 0, 59, 193, 110, 240, 69, 240, 101, 176, 31, 220, 101, 248, 33, 75, 127, 8, 252, 4, 252, 20, 252, 194, 146, 223, 207, 192, 49, 240, 60, 234, 255, 107, 163, 219, 156, 65, 199, 81, 248, 40, 194, 63, 128, 147, 224, 73, 240, 12, 248, 55, 120, 1, 76, 78, 41, 53, 3, 230, 192, 60, 216, 8, 54, 129, 75, 192, 102, 176, 101, 42, 75, 127, 53, 194, 173, 96, 27, 248, 8, 216, 14, 110, 1, 59, 193, 110, 176, 7, 236, 3, 251, 193, 93, 224, 32, 56, 2, 238, 53, 251, 247, 131, 135, 192, 113, 112, 2, 60, 6, 158, 0, 79, 129, 231, 192, 105, 240, 210, 84, 166, 115, 123, 90, 169, 89, 176, 118, 58, 219, 223, 128, 240, 98, 240, 90, 240, 6, 240, 22, 112, 37, 120, 167, 57, 254, 94, 132, 31, 4, 55, 128, 29, 96, 97, 58, 171, 183, 102, 23, 219, 174, 130, 207, 33, 191, 61, 21, 231, 201, 217, 43, 242, 254, 42, 246, 191, 5, 126, 0, 14, 131, 123, 166, 179, 250, 30, 5, 15, 130, 71, 192, 239, 114, 244, 121, 12, 199, 159, 0, 79, 129, 127, 152, 243, 79, 131, 23, 193, 84, 91, 169, 65, 59, 139, 91, 141, 112, 61, 184, 8, 188, 166, 61, 236, 75, 111, 196, 246, 102, 176, 5, 92, 13, 182, 130, 109, 230, 156, 235, 77, 120, 51, 194, 79, 129, 237, 172, 15, 238, 196, 254, 238, 118, 58, 91, 17, 95, 64, 25, 95, 2, 95, 7, 223, 5, 63, 2, 119, 179, 114, 239, 195, 246, 207, 193, 49, 19, 119, 28, 225, 9, 240, 71, 112, 50, 64, 191, 39, 145, 230, 153, 118, 102, 171, 103, 193, 34, 56, 4, 84, 71, 169, 110, 39, 139, 95, 129, 112, 208, 201, 210, 175, 52, 113, 154, 181, 108, 155, 179, 1, 241, 23, 131, 87, 139, 227, 175, 119, 164, 39, 46, 235, 100, 101, 79, 49, 189, 125, 233, 121, 186, 162, 232, 60, 222, 132, 114, 183, 128, 171, 192, 53, 96, 43, 216, 6, 62, 220, 241, 159, 123, 147, 56, 62, 152, 60, 51, 205, 39, 145, 230, 211, 224, 51, 157, 172, 223, 124, 158, 217, 224, 164, 167, 94, 119, 32, 221, 87, 192, 55, 193, 1, 135, 30, 54, 255, 63, 212, 25, 214, 235, 199, 157, 172, 175, 220, 135, 240, 1, 83, 174, 222, 126, 216, 108, 223, 157, 99, 219, 42, 236, 59, 102, 204, 217, 200, 216, 127, 198, 140, 25, 51, 102, 204, 152, 49, 99, 198, 196, 50, 103, 153, 79, 54, 205, 225, 246, 112, 77, 96, 123, 128, 126, 191, 98, 115, 215, 223, 136, 121, 236, 39, 60, 231, 83, 221, 127, 143, 115, 254, 218, 201, 214, 97, 254, 134, 240, 239, 224, 159, 224, 52, 120, 201, 196, 183, 187, 208, 167, 155, 165, 95, 131, 112, 30, 108, 4, 155, 186, 217, 241, 75, 17, 94, 14, 174, 48, 251, 215, 32, 124, 15, 184, 174, 235, 46, 95, 167, 187, 209, 115, 124, 204, 152, 49, 99, 198, 164, 101, 110, 178, 89, 154, 174, 255, 152, 49, 99, 210, 144, 218, 191, 119, 96, 252, 184, 208, 205, 158, 11, 221, 138, 240, 54, 203, 120, 242, 246, 110, 246, 108, 95, 111, 223, 41, 142, 127, 99, 4, 198, 159, 31, 27, 100, 236, 1, 199, 192, 219, 2, 88, 4, 151, 173, 88, 26, 183, 139, 237, 31, 192, 246, 159, 192, 185, 179, 74, 93, 11, 22, 102, 77, 60, 194, 199, 103, 135, 233, 158, 197, 246, 1, 216, 224, 113, 112, 126, 79, 169, 15, 129, 239, 128, 27, 176, 255, 189, 118, 22, 254, 210, 236, 115, 218, 253, 51, 227, 36, 87, 34, 205, 71, 89, 186, 131, 216, 62, 101, 246, 47, 152, 193, 49, 112, 112, 166, 249, 251, 79, 211, 228, 249, 203, 247, 181, 237, 76, 63, 61, 130, 240, 30, 112, 180, 155, 205, 19, 31, 236, 198, 223, 79, 247, 154, 52, 131, 156, 244, 182, 252, 30, 41, 80, 158, 43, 95, 121, 254, 111, 145, 247, 163, 221, 165, 233, 72, 223, 189, 158, 242, 254, 130, 115, 78, 129, 167, 187, 195, 186, 233, 116, 207, 97, 255, 63, 38, 191, 23, 88, 190, 147, 61, 119, 253, 108, 249, 199, 182, 101, 108, 251, 207, 64, 159, 21, 96, 13, 88, 15, 46, 2, 175, 2, 15, 152, 252, 94, 135, 237, 205, 96, 11, 184, 202, 28, 127, 23, 120, 159, 241, 215, 155, 192, 142, 222, 48, 191, 5, 108, 239, 2, 159, 5, 123, 192, 62, 240, 53, 240, 109, 112, 176, 151, 175, 143, 126, 159, 230, 8, 210, 221, 235, 72, 171, 231, 237, 247, 227, 216, 67, 189, 225, 254, 113, 108, 159, 96, 251, 127, 238, 101, 239, 150, 232, 253, 83, 216, 126, 218, 83, 110, 81, 91, 219, 242, 104, 218, 151, 99, 124, 189, 46, 92, 229, 255, 171, 23, 231, 167, 203, 217, 86, 77, 151, 191, 216, 91, 154, 239, 139, 198, 246, 45, 220, 15, 251, 253, 102, 108, 62, 138, 109, 62, 74, 253, 109, 208, 175, 215, 38, 190, 119, 132, 238, 48, 239, 19, 173, 238, 103, 225, 121, 8, 47, 4, 155, 204, 254, 37, 253, 97, 218, 205, 125, 127, 254, 189, 142, 255, 62, 220, 20, 121, 239, 73, 133, 188, 71, 245, 102, 211, 102, 87, 32, 124, 71, 205, 237, 87, 117, 255, 91, 110, 126, 233, 211, 61, 164, 14, 186, 13, 175, 101, 253, 88, 191, 187, 247, 126, 236, 95, 215, 207, 250, 255, 97, 246, 126, 163, 78, 183, 200, 222, 49, 189, 17, 251, 31, 55, 113, 183, 228, 244, 127, 27, 139, 145, 125, 141, 222, 49, 60, 29, 144, 86, 191, 11, 120, 107, 127, 105, 28, 127, 47, 241, 97, 51, 166, 166, 186, 223, 102, 194, 219, 17, 238, 235, 12, 245, 191, 83, 212, 107, 191, 217, 63, 106, 25, 147, 47, 71, 22, 91, 19, 255, 99, 20, 100, 130, 209, 18, 251, 60, 13, 133, 147, 236, 248, 84, 32, 50, 63, 229, 136, 75, 45, 163, 97, 241, 177, 144, 80, 95, 106, 89, 160, 182, 106, 89, 206, 107, 137, 112, 218, 64, 18, 210, 183, 82, 247, 133, 201, 196, 249, 87, 45, 237, 166, 21, 40, 33, 33, 109, 121, 54, 249, 190, 205, 103, 206, 38, 153, 112, 48, 10, 34, 245, 224, 215, 188, 229, 46, 182, 49, 131, 220, 94, 46, 82, 180, 207, 216, 198, 82, 69, 218, 87, 218, 111, 57, 217, 176, 46, 191, 11, 205, 59, 198, 246, 85, 251, 33, 111, 123, 215, 117, 41, 143, 255, 119, 113, 205, 59, 202, 74, 81, 123, 147, 14, 29, 6, 166, 158, 193, 243, 157, 170, 233, 1, 76, 129, 213, 140, 217, 215, 219, 3, 19, 174, 16, 244, 4, 125, 193, 44, 59, 151, 234, 184, 146, 217, 172, 199, 242, 10, 213, 143, 210, 23, 153, 23, 170, 18, 118, 33, 253, 187, 134, 144, 188, 148, 72, 39, 247, 139, 232, 16, 114, 156, 139, 75, 167, 144, 246, 37, 25, 24, 228, 190, 110, 223, 16, 31, 234, 91, 226, 92, 117, 146, 101, 199, 218, 40, 239, 254, 231, 59, 206, 253, 207, 87, 182, 175, 46, 69, 116, 142, 109, 223, 188, 109, 45, 51, 38, 180, 181, 175, 20, 242, 95, 185, 63, 107, 73, 235, 147, 144, 254, 152, 119, 142, 11, 221, 46, 171, 84, 54, 215, 165, 249, 238, 92, 164, 126, 161, 237, 235, 107, 147, 24, 157, 171, 106, 223, 162, 254, 75, 109, 202, 175, 209, 74, 45, 189, 62, 87, 37, 101, 253, 151, 198, 174, 121, 101, 228, 149, 223, 132, 253, 233, 222, 87, 228, 250, 153, 39, 210, 55, 101, 125, 165, 158, 69, 237, 223, 18, 245, 43, 42, 218, 191, 242, 238, 181, 182, 122, 184, 108, 110, 75, 171, 44, 233, 93, 233, 92, 229, 216, 226, 67, 251, 16, 23, 242, 37, 62, 254, 225, 50, 80, 75, 219, 159, 239, 135, 250, 159, 237, 254, 233, 146, 34, 245, 176, 173, 137, 230, 173, 21, 240, 177, 80, 204, 120, 40, 198, 31, 203, 250, 115, 172, 29, 244, 190, 111, 60, 171, 212, 153, 215, 82, 190, 159, 215, 158, 52, 222, 181, 217, 65, 74, 89, 127, 46, 35, 212, 230, 69, 198, 187, 77, 181, 175, 43, 45, 137, 188, 94, 167, 104, 95, 155, 255, 75, 145, 186, 150, 105, 223, 151, 25, 138, 72, 89, 191, 41, 226, 99, 100, 127, 9, 183, 65, 222, 245, 242, 156, 128, 186, 133, 180, 65, 29, 254, 37, 215, 26, 108, 235, 14, 49, 254, 85, 68, 183, 20, 109, 25, 147, 46, 68, 15, 46, 54, 31, 227, 125, 133, 124, 145, 218, 108, 5, 75, 51, 112, 224, 235, 15, 177, 54, 37, 61, 138, 172, 29, 213, 233, 115, 33, 109, 211, 99, 113, 114, 45, 199, 54, 142, 37, 105, 41, 127, 222, 250, 252, 142, 96, 149, 9, 245, 177, 178, 207, 243, 165, 61, 21, 11, 243, 226, 93, 18, 219, 207, 229, 113, 101, 9, 109, 186, 196, 218, 95, 153, 253, 57, 71, 190, 46, 63, 146, 246, 87, 44, 204, 171, 155, 45, 79, 91, 188, 124, 134, 94, 148, 22, 11, 229, 152, 211, 53, 38, 173, 218, 39, 116, 158, 211, 34, 92, 165, 220, 18, 234, 99, 169, 253, 152, 11, 95, 147, 117, 173, 209, 74, 104, 140, 199, 247, 59, 106, 184, 198, 234, 171, 239, 234, 8, 84, 100, 250, 20, 104, 201, 155, 235, 76, 123, 142, 241, 243, 93, 253, 216, 230, 19, 54, 73, 221, 55, 98, 176, 221, 91, 53, 3, 101, 239, 47, 122, 13, 95, 247, 153, 89, 19, 183, 6, 172, 85, 217, 53, 106, 46, 178, 108, 105, 67, 122, 79, 39, 79, 87, 215, 115, 131, 57, 181, 84, 143, 190, 26, 142, 177, 100, 30, 93, 11, 60, 47, 89, 247, 34, 182, 157, 83, 195, 177, 9, 229, 99, 43, 183, 107, 236, 58, 101, 209, 195, 7, 157, 75, 237, 215, 196, 243, 125, 91, 31, 111, 250, 89, 99, 158, 159, 87, 97, 167, 84, 245, 72, 97, 163, 162, 247, 23, 25, 39, 199, 38, 41, 203, 183, 193, 203, 143, 177, 81, 213, 229, 199, 74, 21, 246, 87, 53, 151, 159, 167, 155, 22, 126, 223, 176, 205, 29, 92, 115, 50, 130, 198, 31, 125, 53, 28, 123, 232, 123, 240, 58, 149, 141, 191, 166, 25, 180, 6, 163, 183, 165, 143, 200, 251, 48, 181, 85, 108, 253, 83, 137, 239, 26, 88, 199, 117, 81, 223, 87, 171, 238, 3, 49, 54, 229, 125, 67, 142, 55, 8, 57, 86, 227, 114, 174, 97, 37, 219, 150, 204, 155, 124, 166, 45, 231, 203, 107, 125, 236, 251, 3, 85, 251, 77, 217, 190, 87, 180, 220, 162, 231, 75, 248, 186, 85, 25, 253, 164, 132, 222, 183, 83, 147, 178, 15, 144, 31, 208, 218, 20, 191, 78, 165, 236, 151, 52, 70, 215, 190, 178, 142, 49, 47, 208, 50, 203, 116, 115, 249, 43, 159, 99, 146, 95, 219, 174, 241, 114, 110, 201, 225, 215, 119, 146, 233, 136, 58, 185, 164, 236, 249, 121, 227, 214, 212, 99, 90, 110, 35, 221, 70, 117, 191, 19, 166, 239, 189, 182, 57, 161, 92, 87, 112, 181, 245, 108, 78, 254, 82, 66, 245, 202, 91, 71, 10, 225, 229, 224, 60, 19, 186, 136, 157, 59, 52, 213, 78, 28, 126, 255, 180, 93, 99, 200, 151, 103, 89, 186, 212, 253, 70, 174, 221, 83, 72, 215, 158, 144, 103, 102, 90, 100, 91, 187, 234, 46, 175, 65, 124, 189, 96, 157, 135, 245, 6, 125, 237, 161, 119, 167, 92, 101, 199, 92, 159, 185, 132, 92, 119, 66, 165, 236, 220, 154, 95, 95, 116, 250, 149, 14, 40, 141, 45, 190, 235, 57, 143, 191, 231, 73, 98, 139, 163, 113, 68, 71, 196, 119, 44, 113, 49, 242, 10, 176, 129, 237, 79, 58, 8, 181, 151, 92, 159, 138, 181, 119, 204, 122, 72, 72, 124, 108, 222, 242, 222, 21, 115, 158, 150, 87, 6, 212, 49, 70, 108, 99, 244, 208, 243, 228, 120, 161, 14, 105, 114, 44, 170, 28, 219, 174, 227, 161, 245, 9, 57, 47, 79, 39, 91, 104, 43, 39, 70, 175, 178, 245, 168, 114, 253, 51, 70, 31, 223, 24, 33, 180, 77, 93, 249, 132, 30, 47, 210, 183, 108, 229, 87, 93, 142, 111, 236, 20, 34, 177, 249, 165, 210, 183, 108, 154, 148, 246, 108, 162, 92, 87, 91, 142, 130, 14, 117, 233, 209, 132, 52, 173, 219, 40, 244, 229, 24, 61, 38, 19, 235, 236, 179, 187, 28, 115, 150, 181, 95, 21, 246, 175, 67, 242, 202, 170, 195, 254, 117, 181, 115, 19, 253, 42, 69, 191, 41, 42, 41, 250, 87, 213, 58, 22, 121, 246, 226, 154, 135, 185, 242, 204, 91, 47, 116, 157, 95, 180, 14, 69, 230, 114, 182, 244, 82, 175, 186, 165, 78, 255, 169, 203, 63, 235, 180, 135, 77, 228, 218, 104, 25, 61, 138, 156, 151, 66, 242, 234, 91, 85, 59, 184, 242, 169, 187, 31, 196, 74, 83, 253, 186, 108, 157, 71, 193, 247, 82, 60, 199, 161, 124, 99, 211, 242, 117, 98, 190, 110, 108, 123, 15, 173, 99, 137, 171, 18, 190, 134, 78, 107, 248, 69, 109, 31, 122, 94, 213, 117, 136, 93, 175, 181, 189, 15, 88, 39, 250, 25, 173, 237, 91, 25, 23, 161, 223, 18, 150, 121, 126, 193, 197, 246, 44, 183, 8, 121, 122, 186, 198, 38, 46, 125, 109, 239, 56, 243, 103, 18, 177, 245, 15, 65, 62, 23, 149, 207, 74, 249, 115, 38, 106, 215, 24, 209, 250, 54, 249, 44, 88, 66, 207, 248, 92, 239, 12, 211, 115, 96, 253, 60, 110, 141, 129, 254, 21, 17, 11, 73, 209, 254, 234, 107, 111, 122, 239, 34, 181, 189, 66, 203, 176, 189, 95, 193, 159, 177, 83, 156, 124, 223, 58, 68, 120, 57, 235, 2, 116, 161, 190, 106, 59, 63, 196, 254, 178, 29, 171, 182, 33, 23, 126, 63, 209, 199, 232, 121, 98, 149, 126, 210, 99, 33, 181, 131, 108, 55, 215, 121, 116, 127, 166, 176, 78, 41, 98, 127, 221, 215, 120, 223, 235, 43, 251, 125, 147, 190, 1, 8, 17, 158, 191, 237, 155, 121, 254, 94, 224, 132, 201, 187, 238, 239, 158, 203, 136, 28, 207, 156, 95, 146, 208, 57, 188, 79, 66, 230, 252, 182, 99, 121, 105, 93, 229, 248, 210, 209, 220, 44, 197, 248, 218, 166, 71, 75, 249, 109, 102, 91, 151, 137, 41, 67, 198, 41, 101, 183, 117, 93, 34, 251, 159, 109, 205, 35, 239, 156, 50, 229, 165, 154, 59, 21, 145, 81, 153, 159, 151, 153, 195, 74, 29, 203, 206, 133, 155, 92, 147, 160, 242, 235, 166, 42, 73, 221, 167, 83, 231, 31, 98, 15, 125, 239, 148, 223, 124, 251, 190, 53, 161, 116, 244, 46, 88, 200, 120, 173, 170, 177, 88, 200, 125, 95, 207, 81, 102, 212, 153, 239, 242, 105, 201, 123, 55, 53, 100, 28, 17, 51, 119, 9, 145, 212, 254, 89, 149, 158, 203, 89, 7, 95, 153, 124, 206, 64, 255, 85, 73, 217, 95, 109, 243, 4, 215, 55, 84, 190, 127, 110, 230, 205, 171, 165, 108, 44, 73, 29, 227, 240, 11, 84, 243, 255, 66, 181, 253, 87, 79, 190, 211, 172, 109, 175, 175, 47, 182, 113, 51, 95, 227, 106, 66, 127, 87, 223, 242, 125, 219, 77, 199, 232, 187, 110, 21, 81, 70, 89, 127, 174, 178, 190, 178, 77, 234, 46, 223, 247, 79, 70, 159, 31, 235, 115, 207, 81, 195, 127, 28, 217, 252, 121, 70, 13, 219, 138, 215, 47, 198, 47, 109, 115, 188, 170, 109, 64, 101, 133, 74, 149, 101, 22, 109, 51, 249, 156, 67, 254, 247, 64, 183, 209, 42, 67, 222, 245, 54, 68, 71, 91, 186, 178, 182, 136, 57, 223, 231, 31, 85, 247, 133, 24, 180, 173, 125, 215, 95, 98, 70, 185, 199, 167, 101, 251, 40, 191, 255, 140, 250, 255, 158, 125, 105, 73, 248, 255, 239, 228, 218, 155, 252, 6, 167, 204, 255, 74, 149, 10, 123, 190, 33, 253, 142, 36, 244, 89, 81, 204, 179, 36, 95, 249, 69, 9, 185, 198, 211, 61, 150, 127, 139, 68, 223, 188, 83, 223, 162, 49, 4, 181, 85, 232, 61, 171, 108, 255, 78, 85, 119, 18, 219, 119, 254, 178, 206, 33, 115, 168, 162, 72, 157, 203, 254, 87, 220, 102, 3, 249, 47, 26, 215, 61, 158, 210, 241, 250, 247, 148, 253, 190, 17, 42, 117, 182, 63, 255, 71, 84, 222, 53, 153, 218, 182, 42, 253, 203, 194, 69, 63, 43, 211, 207, 205, 46, 84, 249, 255, 60, 146, 117, 43, 171, 191, 92, 155, 46, 43, 169, 230, 208, 41, 231, 227, 77, 205, 243, 201, 230, 190, 181, 193, 170, 218, 165, 168, 200, 181, 244, 208, 53, 226, 186, 215, 79, 235, 88, 67, 15, 201, 191, 174, 58, 143, 226, 122, 180, 77, 108, 101, 52, 213, 159, 171, 170, 119, 136, 61, 99, 108, 79, 219, 117, 172, 63, 142, 98, 191, 43, 155, 71, 138, 190, 159, 194, 135, 83, 248, 97, 234, 114, 203, 232, 86, 84, 63, 223, 249, 85, 151, 95, 149, 254, 77, 151, 95, 101, 159, 138, 45, 191, 73, 249, 47];\nvar trieData$2 = {\n\ttype: type$2,\n\tdata: data$2\n};\n\nvar _class$7;\nvar _temp$3;\n\nvar categories$1 = useData.categories;\nvar decompositions$2 = useData.decompositions;\n\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar stateMachine$1 = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nvar UniversalShaper = (_temp$3 = _class$7 = function (_DefaultShaper) {\n  inherits(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    classCallCheck(this, UniversalShaper);\n    return possibleConstructorReturn(this, _DefaultShaper.apply(this, arguments));\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      if (decompositions$2[codepoint]) {\n        var decomposed = decompositions$2[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper), _class$7.zeroMarkWidths = 'BEFORE_GPOS', _temp$3);\nfunction useCategory(glyph) {\n  return trie$2.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  classCallCheck(this, USEInfo);\n\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  for (var _iterator = stateMachine$1.match(glyphs.map(useCategory)), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        start = _ref2[0],\n        end = _ref2[1],\n        tags = _ref2[2];\n\n    ++syllable;\n\n    // Create shaper info\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories$1[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (var _i2 = start; _i2 < start + limit; _i2++) {\n      glyphs[_i2].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = glyphs, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray2) {\n      if (_i3 >= _iterator2.length) break;\n      _ref3 = _iterator2[_i3++];\n    } else {\n      _i3 = _iterator2.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var glyph = _ref3;\n\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = glyphs, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref4;\n\n    if (_isArray3) {\n      if (_i4 >= _iterator3.length) break;\n      _ref4 = _iterator3[_i4++];\n    } else {\n      _i4 = _iterator3.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var glyph = _ref4;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = glyphs, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref5;\n\n    if (_isArray4) {\n      if (_i5 >= _iterator4.length) break;\n      _ref5 = _iterator4[_i5++];\n    } else {\n      _i5 = _iterator4.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var glyph = _ref5;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper, // Arabic\n  mong: ArabicShaper, // Mongolian\n  syrc: ArabicShaper, // Syriac\n  'nko ': ArabicShaper, // N'Ko\n  phag: ArabicShaper, // Phags Pa\n  mand: ArabicShaper, // Mandaic\n  mani: ArabicShaper, // Manichaean\n  phlp: ArabicShaper, // Psalter Pahlavi\n\n  hang: HangulShaper, // Hangul\n\n  bng2: IndicShaper, // Bengali\n  beng: IndicShaper, // Bengali\n  dev2: IndicShaper, // Devanagari\n  deva: IndicShaper, // Devanagari\n  gjr2: IndicShaper, // Gujarati\n  gujr: IndicShaper, // Gujarati\n  guru: IndicShaper, // Gurmukhi\n  gur2: IndicShaper, // Gurmukhi\n  knda: IndicShaper, // Kannada\n  knd2: IndicShaper, // Kannada\n  mlm2: IndicShaper, // Malayalam\n  mlym: IndicShaper, // Malayalam\n  ory2: IndicShaper, // Oriya\n  orya: IndicShaper, // Oriya\n  taml: IndicShaper, // Tamil\n  tml2: IndicShaper, // Tamil\n  telu: IndicShaper, // Telugu\n  tel2: IndicShaper, // Telugu\n  khmr: IndicShaper, // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: UniversalShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper, // Latin\n  DFLT: DefaultShaper // Default\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = script, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var s = _ref;\n\n    var shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nvar GSUBProcessor = function (_OTProcessor) {\n  inherits(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    classCallCheck(this, GSUBProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GSUBProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    var _this2 = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n          if (_index !== -1) {\n            var _glyphs;\n\n            var sequence = table.sequences.get(_index);\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this2.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_glyphs = this.glyphs).splice.apply(_glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = table.ligatureSets.get(_index3), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var ligature = _ref;\n\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur;\n\n            // Concatenate all of the characters the new ligature will represent\n            var characters = _curGlyph.codePoints.slice();\n            for (var _iterator2 = matched, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var _index4 = _ref2;\n\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            }\n\n            // Create the replacement ligature glyph\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features, _curGlyph.stringIndex);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true;\n\n            // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n            var isMarkLigature = _curGlyph.isMark;\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1;\n\n            // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n            for (var _iterator3 = matched, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n              var _ref3;\n\n              if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n              } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n              }\n\n              var matchIndex = _ref3;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            }\n\n            // Adjust ligature components for any marks following\n            if (lastLigID && !isMarkLigature) {\n              for (var _i4 = idx; _i4 < this.glyphs.length; _i4++) {\n                if (this.glyphs[_i4].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i4].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i4].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            }\n\n            // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n            for (var _i5 = matched.length - 1; _i5 >= 0; _i5--) {\n              this.glyphs.splice(matched[_i5], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('GSUB lookupType ' + lookupType + ' is not supported');\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nvar GPOSProcessor = function (_OTProcessor) {\n  inherits(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    classCallCheck(this, GPOSProcessor);\n    return possibleConstructorReturn(this, _OTProcessor.apply(this, arguments));\n  }\n\n  GPOSProcessor.prototype.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  };\n\n  GPOSProcessor.prototype.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set$$1 = table.pairSets.get(_index);\n\n              for (var _iterator = set$$1, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i >= _iterator.length) break;\n                  _ref = _iterator[_i++];\n                } else {\n                  _i = _iterator.next();\n                  if (_i.done) break;\n                  _ref = _i.value;\n                }\n\n                var _pair = _ref;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var baseGlyphIndex = this.glyphIterator.index;\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n          if (_markIndex === -1) {\n            return false;\n          }\n\n          // search backward for a base glyph\n          var _baseGlyphIndex = this.glyphIterator.index;\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n          if (mark1Index === -1) {\n            return false;\n          }\n\n          // get the previous mark to attach to\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur;\n\n          // The following logic was borrowed from Harfbuzz\n          var good = false;\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error('Unsupported GPOS table: ' + lookupType);\n    }\n  };\n\n  GPOSProcessor.prototype.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n\n    var basePos = this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  GPOSProcessor.prototype.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x: x, y: y };\n  };\n\n  GPOSProcessor.prototype.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  GPOSProcessor.prototype.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  GPOSProcessor.prototype.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = function () {\n  function OTLayoutEngine(font) {\n    classCallCheck(this, OTLayoutEngine);\n\n    this.font = font;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  OTLayoutEngine.prototype.setup = function setup(glyphRun) {\n    // Select a script based on what is available in GSUB/GPOS.\n    var script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, glyphRun.glyphs, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  OTLayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, glyphRun.glyphs);\n    }\n  };\n\n  OTLayoutEngine.prototype.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, glyphRun.glyphs, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  OTLayoutEngine.prototype.zeroMarkAdvances = function zeroMarkAdvances(glyphRun) {\n    for (var i = 0; i < glyphRun.glyphs; i++) {\n      if (glyphRun.glyphs[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  OTLayoutEngine.prototype.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  OTLayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nvar LayoutEngine = function () {\n  function LayoutEngine(font) {\n    classCallCheck(this, LayoutEngine);\n\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  LayoutEngine.prototype.layout = function layout(string, features, script, language, direction$$1) {\n    var _this = this;\n\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction$$1 = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Attempt to detect the script from the string if not provided.\n    if (script == null) {\n      script = forString(string);\n    }\n\n    var glyphs = this.glyphsForString(string);\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction$$1);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    // Map glyph infos back to normal Glyph objects\n    glyphRun.stringIndices = glyphRun.glyphs.map(function (glyphInfo) {\n      return glyphInfo.stringIndex;\n    });\n    glyphRun.glyphs = glyphRun.glyphs.map(function (glyphInfo) {\n      return _this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n    });\n    return glyphRun;\n  };\n\n  LayoutEngine.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      var stringIndex = idx - 1;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last, code), [last, code], null, stringIndex));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(new GlyphInfo(this.font, this.font._cmapProcessor.lookup(last), [last], null, stringIndex));\n      }\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  LayoutEngine.prototype.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  LayoutEngine.prototype.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  LayoutEngine.prototype.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00ad;\n        case 0x03:\n          return ch === 0x034f;\n        case 0x06:\n          return ch === 0x061c;\n        case 0x17:\n          return 0x17b4 <= ch && ch <= 0x17b5;\n        case 0x18:\n          return 0x180b <= ch && ch <= 0x180e;\n        case 0x20:\n          return 0x200b <= ch && ch <= 0x200f || 0x202a <= ch && ch <= 0x202e || 0x2060 <= ch && ch <= 0x206f;\n        case 0xfe:\n          return 0xfe00 <= ch && ch <= 0xfe0f || ch === 0xfeff;\n        case 0xff:\n          return 0xfff0 <= ch && ch <= 0xfff8;\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1bca0 <= ch && ch <= 0x1bca3 || 0x1d173 <= ch && ch <= 0x1d17a;\n        case 0x0e:\n          return 0xe0000 <= ch && ch <= 0xe0fff;\n        default:\n          return false;\n      }\n    }\n  };\n\n  LayoutEngine.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  LayoutEngine.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (var _iterator = codePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var codePoint = _ref;\n\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator2 = this.engine.stringsForGlyph(gid), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var string = _ref2;\n\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = function () {\n  function Path() {\n    classCallCheck(this, Path);\n\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  Path.prototype.toFunction = function toFunction() {\n    var cmds = this.commands.map(function (c) {\n      return '  ctx.' + c.command + '(' + c.args.join(', ') + ');';\n    });\n    return new Function('ctx', cmds.join('\\n'));\n  };\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n\n\n  Path.prototype.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return '' + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n\n    return cmds.join('');\n  };\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  Path.prototype.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = this.commands, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var c = _ref;\n\n      var args = [];\n      for (var _i2 = 0; _i2 < c.args.length; _i2 += 2) {\n        var _fn = fn(c.args[_i2], c.args[_i2 + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  };\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n\n\n  Path.prototype.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  };\n\n  /**\n   * Translates the path by the given offset.\n   */\n\n\n  Path.prototype.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  };\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n\n\n  Path.prototype.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  };\n\n  /**\n   * Scales the path.\n   */\n\n\n  Path.prototype.scale = function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  createClass(Path, [{\n    key: 'cbox',\n    get: function get$$1() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n        for (var _iterator2 = this.commands, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref2 = _i3.value;\n          }\n\n          var command = _ref2;\n\n          for (var _i4 = 0; _i4 < command.args.length; _i4 += 2) {\n            cbox.addPoint(command.args[_i4], command.args[_i4 + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = this.commands, _isArray3 = Array.isArray(_iterator3), _i5 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i5 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i5++];\n        } else {\n          _i5 = _iterator3.next();\n          if (_i5.done) break;\n          _ref3 = _i5.value;\n        }\n\n        var c = _ref3;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            }\n\n            // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n            bbox.addPoint(p3x, p3y);\n\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n  return Path;\n}();\n\nvar _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath'];\n\nvar _loop = function _loop() {\n  var command = _arr[_i6];\n  Path.prototype[command] = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command: command,\n      args: args\n    });\n\n    return this;\n  };\n};\n\nfor (var _i6 = 0; _i6 < _arr.length; _i6++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$8;\n\nfunction _applyDecoratedDescriptor$4(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nvar Glyph = (_class$8 = function () {\n  function Glyph(id, codePoints, font) {\n    classCallCheck(this, Glyph);\n\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  Glyph.prototype._getPath = function _getPath() {\n    return new Path();\n  };\n\n  Glyph.prototype._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  Glyph.prototype._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  Glyph.prototype._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  };\n\n  Glyph.prototype._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _getTableMetrics2 = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _getTableMetrics2.advance,\n        leftBearing = _getTableMetrics2.bearing;\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _getTableMetrics3 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _getTableMetrics3.advance,\n          topBearing = _getTableMetrics3.bearing;\n    } else {\n      var os2 = void 0;\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth: advanceWidth, advanceHeight: advanceHeight, leftBearing: leftBearing, topBearing: topBearing };\n  };\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  Glyph.prototype.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  };\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n\n\n  Glyph.prototype._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  };\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  Glyph.prototype.render = function render(ctx, size) {\n    ctx.save();\n\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  };\n\n  createClass(Glyph, [{\n    key: 'cbox',\n    get: function get$$1() {\n      return this._getCBox();\n    }\n\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return this._getBBox();\n    }\n\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: 'path',\n    get: function get$$1() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: 'advanceWidth',\n    get: function get$$1() {\n      return this._getMetrics().advanceWidth;\n    }\n\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: 'advanceHeight',\n    get: function get$$1() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: 'ligatureCaretPositions',\n    get: function get$$1() {}\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this._getName();\n    }\n  }]);\n  return Glyph;\n}(), _applyDecoratedDescriptor$4(_class$8.prototype, 'cbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'cbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'bbox'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'path', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'path'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceWidth', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceWidth'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'advanceHeight', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'advanceHeight'), _class$8.prototype), _applyDecoratedDescriptor$4(_class$8.prototype, 'name', [cache], Object.getOwnPropertyDescriptor(_class$8.prototype, 'name'), _class$8.prototype), _class$8);\n\n// The header for both simple and composite glyphs\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n});\n\n// Flags for simple glyphs\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\n// Flags for composite glyphs\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n// Represents a point in a simple glyph\nvar Point = function () {\n  function Point(onCurve, endContour) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    classCallCheck(this, Point);\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}();\n\n// Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  classCallCheck(this, Component);\n\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = function (_Glyph) {\n  inherits(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    classCallCheck(this, TTFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  // Parses just the glyph header and returns the bounding box\n  TTFGlyph.prototype._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  };\n\n  // Parses a single glyph coordinate\n\n\n  TTFGlyph.prototype._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  };\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  TTFGlyph.prototype._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  TTFGlyph.prototype._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        var count = stream.readUInt8();\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    var py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  TTFGlyph.prototype._decodeComposite = function _decodeComposite(glyph, stream) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  TTFGlyph.prototype._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _metrics = this._metrics,\n        advanceWidth = _metrics.advanceWidth,\n        advanceHeight = _metrics.advanceHeight,\n        leftBearing = _metrics.leftBearing,\n        topBearing = _metrics.topBearing;\n\n\n    return [new Point(false, true, glyph.xMin - leftBearing, 0), new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point(false, true, 0, glyph.yMax + topBearing), new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  };\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  TTFGlyph.prototype._getContours = function _getContours() {\n    var glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = glyph.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  TTFGlyph.prototype._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  };\n\n  // Converts contours to a Path object that can be rendered\n\n\n  TTFGlyph.prototype._getPath = function _getPath() {\n    var contours = this._getContours();\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = function (_Glyph) {\n  inherits(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    classCallCheck(this, CFFGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  CFFGlyph.prototype._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  CFFGlyph.prototype.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  CFFGlyph.prototype._getPath = function _getPath() {\n    var stream = this._font.stream;\n    var pos = stream.pos;\n\n\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs = void 0;\n    var usedSubrs = void 0;\n    var open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n\n    var privateDict = cff.privateDictForGlyph(this.id);\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n            case 3: // vstem\n            case 18: // hstemhm\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7:\n              // vlineto\n              var phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31:\n              // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n\n                  pts = [];\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error('Unknown op: 12 ' + op);\n              }\n              break;\n\n            default:\n              throw new Error('Unknown op: ' + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = function (_TTFGlyph) {\n  inherits(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    classCallCheck(this, SBIXGlyph);\n    return possibleConstructorReturn(this, _TTFGlyph.apply(this, arguments));\n  }\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  SBIXGlyph.prototype.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, { buflen: end - start });\n  };\n\n  SBIXGlyph.prototype.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, { height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  classCallCheck(this, COLRLayer);\n\n  this.glyph = glyph;\n  this.color = color;\n};\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = function (_Glyph) {\n  inherits(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    classCallCheck(this, COLRGlyph);\n    return possibleConstructorReturn(this, _Glyph.apply(this, arguments));\n  }\n\n  COLRGlyph.prototype._getBBox = function _getBBox() {\n    var bbox = new BBox();\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  };\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n\n\n  COLRGlyph.prototype.render = function render(ctx, size) {\n    for (var _iterator = this.layers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          glyph = _ref2.glyph,\n          color = _ref2.color;\n\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  createClass(COLRGlyph, [{\n    key: 'layers',\n    get: function get$$1() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      }\n\n      // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n\n        return [new COLRLayer(g, color)];\n      }\n\n      // otherwise, return an array of all the layers\n      var layers = [];\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n        var g = this._font._getBaseGlyph(rec.gid);\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = function () {\n  function GlyphVariationProcessor(font, coords) {\n    classCallCheck(this, GlyphVariationProcessor);\n\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  GlyphVariationProcessor.prototype.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  GlyphVariationProcessor.prototype.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    }\n\n    // Read the gvar data for this glyph\n    var stream = this.font.stream;\n\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  GlyphVariationProcessor.prototype.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  GlyphVariationProcessor.prototype.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  };\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  GlyphVariationProcessor.prototype.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n    while (point < points.length) {\n      var firstPoint = point;\n\n      // find the end point of the contour\n      var endPoint = point;\n      var pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  GlyphVariationProcessor.prototype.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex = void 0,\n        innerIndex = void 0;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      var entryFormat = table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  };\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  GlyphVariationProcessor.prototype.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  GlyphVariationProcessor.prototype.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n          // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n          // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n          // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar Subset = function () {\n  function Subset(font) {\n    classCallCheck(this, Subset);\n\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  Subset.prototype.includeGlyph = function includeGlyph(glyph) {\n    if ((typeof glyph === 'undefined' ? 'undefined' : _typeof(glyph)) === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  Subset.prototype.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n\n    process.nextTick(function () {\n      _this.encode(s);\n      return s.end();\n    });\n\n    return s;\n  };\n\n  return Subset;\n}();\n\n// Flags for simple glyphs\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5;\n\nvar Point$1 = function () {\n  function Point() {\n    classCallCheck(this, Point);\n  }\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point$1, 0),\n  yPoints: new r.Array(Point$1, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = function () {\n  function TTFGlyphEncoder() {\n    classCallCheck(this, TTFGlyphEncoder);\n  }\n\n  TTFGlyphEncoder.prototype.encodeSimple = function encodeSimple(path) {\n    var instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0;\n\n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n\n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE$1;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR$1, SAME_X$1);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR$1, SAME_Y$1);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT$1;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n\n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  TTFGlyphEncoder.prototype._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nvar TTFSubset = function (_Subset) {\n  inherits(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    classCallCheck(this, TTFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  TTFSubset.prototype._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n    var glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    var buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Buffer(buffer);\n      for (var _iterator = glyf.components, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var component = _ref;\n\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  TTFSubset.prototype.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: []\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    var i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n    tables.loca.preEncode.call(this.loca);\n\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nvar CFFSubset = function (_Subset) {\n  inherits(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    classCallCheck(this, CFFSubset);\n\n    var _this = possibleConstructorReturn(this, _Subset.call(this, font));\n\n    _this.cff = _this.font['CFF '];\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n    return _this;\n  }\n\n  CFFSubset.prototype.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = this.glyphs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var gid = _ref;\n\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  CFFSubset.prototype.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Buffer([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  CFFSubset.prototype.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    var used_fds = {};\n    var used_subrs = [];\n    for (var _iterator2 = this.glyphs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var gid = _ref2;\n\n      var fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  CFFSubset.prototype.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n    for (var _iterator3 = this.glyphs, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var gid = _ref3;\n\n      var glyph = this.font.getGlyph(gid);\n      var path = glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  CFFSubset.prototype.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  CFFSubset.prototype.encode = function encode(stream) {\n    this.subsetCharstrings();\n\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    var _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName'];\n    for (var _i4 = 0; _i4 < _arr.length; _i4++) {\n      var key = _arr[_i4];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: this.cff.length,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nvar TTFFont = (_class = function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream) {\n    var variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TTFFont);\n\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  TTFFont.prototype._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit$1.logErrors) {\n          console.error('Error decoding table ' + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  TTFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  TTFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  TTFFont.prototype._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n    var result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  };\n\n  /**\n   * The unique PostScript name for this font\n   * @type {string}\n   */\n\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  TTFFont.prototype.getName = function getName(key) {\n    var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n    var record = this.name.records[key];\n    if (record) {\n      return record[lang];\n    }\n\n    return null;\n  };\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  TTFFont.prototype.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  };\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  };\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n\n\n  TTFFont.prototype.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n      last = code;\n      state = nextState;\n    }\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  TTFFont.prototype.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  };\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n\n\n  TTFFont.prototype.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  };\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n\n\n  TTFFont.prototype.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  TTFFont.prototype._getBaseGlyph = function _getBaseGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n\n\n  TTFFont.prototype.getGlyph = function getGlyph(glyph) {\n    var characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  };\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n\n\n  TTFFont.prototype.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  };\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  TTFFont.prototype.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  };\n\n  // Standardized format plugin API\n  TTFFont.prototype.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  createClass(TTFFont, [{\n    key: 'postscriptName',\n    get: function get$$1() {\n      var name = this.name.records.postscriptName;\n      if (name) {\n        var lang = Object.keys(name)[0];\n        return name[lang];\n      }\n\n      return null;\n    }\n  }, {\n    key: 'fullName',\n    get: function get$$1() {\n      return this.getName('fullName');\n    }\n\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: 'familyName',\n    get: function get$$1() {\n      return this.getName('fontFamily');\n    }\n\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: 'subfamilyName',\n    get: function get$$1() {\n      return this.getName('fontSubfamily');\n    }\n\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: 'copyright',\n    get: function get$$1() {\n      return this.getName('copyright');\n    }\n\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: 'version',\n    get: function get$$1() {\n      return this.getName('version');\n    }\n\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: 'ascent',\n    get: function get$$1() {\n      return this.hhea.ascent;\n    }\n\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: 'descent',\n    get: function get$$1() {\n      return this.hhea.descent;\n    }\n\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: 'lineGap',\n    get: function get$$1() {\n      return this.hhea.lineGap;\n    }\n\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlinePosition',\n    get: function get$$1() {\n      return this.post.underlinePosition;\n    }\n\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: 'underlineThickness',\n    get: function get$$1() {\n      return this.post.underlineThickness;\n    }\n\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: 'italicAngle',\n    get: function get$$1() {\n      return this.post.italicAngle;\n    }\n\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'capHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: 'xHeight',\n    get: function get$$1() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: 'numGlyphs',\n    get: function get$$1() {\n      return this.maxp.numGlyphs;\n    }\n\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: 'unitsPerEm',\n    get: function get$$1() {\n      return this.head.unitsPerEm;\n    }\n\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: 'bbox',\n    get: function get$$1() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: '_cmapProcessor',\n    get: function get$$1() {\n      return new CmapProcessor(this.cmap);\n    }\n\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: 'characterSet',\n    get: function get$$1() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: '_layoutEngine',\n    get: function get$$1() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: 'availableFeatures',\n    get: function get$$1() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: 'variationAxes',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = this.fvar.axis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var axis = _ref;\n\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: 'namedVariations',\n    get: function get$$1() {\n      var res = {};\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = this.fvar.instance, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var instance = _ref2;\n\n        var settings = {};\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: '_variationProcessor',\n    get: function get$$1() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords;\n\n      // Ignore if no variation coords and not CFF2\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n  return TTFFont;\n}(), _applyDecoratedDescriptor(_class.prototype, 'bbox', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'bbox'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_cmapProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_cmapProcessor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'characterSet', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'characterSet'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_layoutEngine', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_layoutEngine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'variationAxes', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'variationAxes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'namedVariations', [cache], Object.getOwnPropertyDescriptor(_class.prototype, 'namedVariations'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_variationProcessor', [cache], Object.getOwnPropertyDescriptor(_class.prototype, '_variationProcessor'), _class.prototype), _class);\n\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\n\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4), // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables$$1 = {};\n  for (var _iterator = this.tables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var table = _ref;\n\n    tables$$1[table.tag] = table;\n  }\n\n  this.tables = tables$$1;\n};\n\nvar WOFFFont = function (_TTFFont) {\n  inherits(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    classCallCheck(this, WOFFFont);\n    return possibleConstructorReturn(this, _TTFFont.apply(this, arguments));\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  WOFFFont.prototype._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  };\n\n  WOFFFont.prototype._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        var outBuffer = new Buffer(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    classCallCheck(this, TrueTypeCollection);\n\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  TrueTypeCollection.prototype.getFont = function getFont(name) {\n    for (var _iterator = this.header.offsets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var offset = _ref;\n\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(TrueTypeCollection, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator2 = this.header.offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var offset = _ref2;\n\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return TrueTypeCollection;\n}();\n\nvar DFontName = new r.String(r.uint8);\nvar DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), { type: 'parent' })\n});\n\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\n\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = header.map.typeList.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    classCallCheck(this, DFont);\n\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = this.header.map.typeList.types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      for (var _iterator3 = type.refList, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var ref = _ref3;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  DFont.prototype.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = this.sfnt.refList, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var ref = _ref4;\n\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  createClass(DFont, [{\n    key: 'fonts',\n    get: function get$$1() {\n      var fonts = [];\n      for (var _iterator5 = this.sfnt.refList, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref5;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref5 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref5 = _i5.value;\n        }\n\n        var ref = _ref5;\n\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n  return DFont;\n}();\n\n// Register font formats\nfontkit$1.registerFormat(TTFFont);\nfontkit$1.registerFormat(WOFFFont);\nfontkit$1.registerFormat(TrueTypeCollection);\nfontkit$1.registerFormat(DFont);\n\nexport default fontkit$1;\n"]},"metadata":{},"sourceType":"module"}