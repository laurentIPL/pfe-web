{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\web_app\\\\src\\\\components\\\\utils\\\\PrivateRoute.js\";\n\nimport React from \"react\";\nimport AuthService from \"../../services/authService\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  var userLoggedIn = AuthService.getCurrentUser();\n  return React.createElement(Route, _extends({}, rest, {\n    render: function render(props) {\n      return userLoggedIn ? React.createElement(Component, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/\",\n          state: {\n            from: props.location\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/web_app/src/components/utils/PrivateRoute.js"],"names":["React","AuthService","Redirect","Route","PrivateRoute","Component","component","rest","userLoggedIn","getCurrentUser","props","pathname","state","from","location"],"mappings":";;;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAC1D,MAAMC,YAAY,GAAGP,WAAW,CAACQ,cAAZ,EAArB;AAEA,SACE,oBAAC,KAAD,eACMF,IADN;AAEE,IAAA,MAAM,EAAE,gBAACG,KAAD;AAAA,aACNF,YAAY,GACV,oBAAC,SAAD,eAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADU,GAGV,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,GAAZ;AAAiBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJI;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAfD;;AAiBA,eAAeV,YAAf","sourcesContent":["// This is used to determine if a user is authenticated and\r\n// if they are allowed to visit the page they navigated to.\r\n\r\n// If they are: they proceed to the page\r\n// If not: they are redirected to the login page.\r\nimport React from \"react\";\r\nimport AuthService from \"services/authService\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const userLoggedIn = AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}