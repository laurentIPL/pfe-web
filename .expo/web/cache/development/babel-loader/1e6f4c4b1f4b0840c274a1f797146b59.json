{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\Home\\\\Home.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LogoutButton from \"./LogoutButton\";\nimport CreateQRCodeContainer from \"../CreateQRCodeContainer/CreateQRCodeContainer\";\nimport ListQRCodes from \"../ListQRCodes/ListQRCodes\";\nimport Service from \"../../services/Service\";\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      datas = _useState2[0],\n      setDatas = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showQRList = _useState4[0],\n      setShowQRList = _useState4[1];\n\n  var isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\n  useEffect(function () {\n    handleList();\n  }, []);\n\n  var handleList = function handleList() {\n    setShowQRList(false);\n    Service.listQR().then(function (resp) {\n      var array = [];\n\n      for (var i = 0; i < resp.data.data.length; i++) {\n        var images = resp.data.data[i].image;\n        var count = resp.data.data[i].count;\n        var name = resp.data.data[i].name;\n        array.push({\n          image: \"data:image/png;base64,\" + images.substring(2, images.length - 1),\n          count: count,\n          name: name\n        });\n      }\n\n      console.log(\"test\");\n      setDatas(array);\n      setShowQRList(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(LogoutButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(CreateQRCodeContainer, {\n    datas: datas,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), showQRList && isEntreprise && React.createElement(ListQRCodes, {\n    data: datas,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/Home/Home.js"],"names":["React","useState","useEffect","LogoutButton","CreateQRCodeContainer","ListQRCodes","Service","Home","datas","setDatas","showQRList","setShowQRList","isEntreprise","JSON","parse","localStorage","getItem","role","handleList","listQR","then","resp","array","i","data","length","images","image","count","name","push","substring","console","log","catch","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,YAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACSN,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACVO,KADU;AAAA,MACHC,QADG;;AAAA,mBAEmBR,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,MAEVS,UAFU;AAAA,MAEEC,aAFF;;AAIjB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,IAAzC,IAAiD,GAAtE;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAL,IAAAA,OAAO,CAACa,MAAR,GACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACd,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC9C,YAAMG,MAAM,GAAGL,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeD,CAAf,EAAkBI,KAAjC;AACA,YAAMC,KAAK,GAAGP,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeD,CAAf,EAAkBK,KAAhC;AACA,YAAMC,IAAI,GAAGR,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeD,CAAf,EAAkBM,IAA/B;AACAP,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACTH,UAAAA,KAAK,EACH,2BAA2BD,MAAM,CAACK,SAAP,CAAiB,CAAjB,EAAoBL,MAAM,CAACD,MAAP,GAAgB,CAApC,CAFpB;AAGTG,UAAAA,KAAK,EAAEA,KAHE;AAITC,UAAAA,IAAI,EAAEA;AAJG,SAAX;AAMD;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAxB,MAAAA,QAAQ,CAACa,KAAD,CAAR;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAjBH,EAkBGuB,KAlBH,CAkBS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KApBH;AAqBD,GAvBD;;AAyBA,SACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAE3B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGE,UAAU,IAAIE,YAAd,IAA8B,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjC,CADF;AAcD,CAjDD;;AAmDA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport CreateQRCodeContainer from \"components/CreateQRCodeContainer/CreateQRCodeContainer\";\r\nimport ListQRCodes from \"components/ListQRCodes/ListQRCodes\";\r\nimport Service from \"services/Service\";\r\n\r\nconst Home = () => {\r\n  const [datas, setDatas] = useState([]);\r\n  const [showQRList, setShowQRList] = useState(false);\r\n\r\n  const isEntreprise = JSON.parse(localStorage.getItem(\"user\")).role == \"E\";\r\n\r\n  useEffect(() => {\r\n    handleList();\r\n  }, []);\r\n\r\n  const handleList = () => {\r\n    setShowQRList(false);\r\n    Service.listQR()\r\n      .then((resp) => {\r\n        var array = [];\r\n        for (var i = 0; i < resp.data.data.length; i++) {\r\n          const images = resp.data.data[i].image;\r\n          const count = resp.data.data[i].count;\r\n          const name = resp.data.data[i].name;\r\n          array.push({\r\n            image:\r\n              \"data:image/png;base64,\" + images.substring(2, images.length - 1),\r\n            count: count,\r\n            name: name,\r\n          });\r\n        }\r\n        console.log(\"test\");\r\n        setDatas(array);\r\n        setShowQRList(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LogoutButton />\r\n      <CreateQRCodeContainer datas={datas} />\r\n      {showQRList && isEntreprise && <ListQRCodes data={datas} />}\r\n      {/*       {!showQRList ? (\r\n        handleList()\r\n      ) : isEntreprise ? (\r\n        <ListQRCodes data={datas} />\r\n      ) : (\r\n        console.log(\"ok\")\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}