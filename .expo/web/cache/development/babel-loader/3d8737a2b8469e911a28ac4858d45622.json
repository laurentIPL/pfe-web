{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DJsimon93\\\\Desktop\\\\IPL\\\\bloc 3\\\\PFE\\\\PFE\\\\Web_app\\\\src\\\\components\\\\ListQRCodes\\\\ListQRCodes.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Service from \"../../services/Service\";\nimport { Card, Button, DataTable } from \"react-native-paper\";\n\nvar ListQRCodes = function ListQRCodes(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      codes = _useState2[0],\n      setCodes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  var itemsPerPage = 1;\n  console.log(data.length > 0 && load);\n\n  if (data.lenght > 0 && load) {\n    console.log(\"ok\");\n    var array = [];\n\n    for (var i = 0; i < data.length; i++) {\n      console.log(i);\n      var temp = React.createElement(DataTable.Row, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, React.createElement(DataTable.Cell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: data[i].image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 35\n        }\n      })), React.createElement(DataTable.Cell, {\n        numeric: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }\n      }, data[i].count));\n      array.push(temp);\n    }\n\n    setLoad(false);\n    console.log(load);\n    setCodes(array);\n    console.log(\"test\", codes.length);\n  }\n\n  return React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"QR Code\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"nbr of scans\")), codes[currentPage], React.createElement(DataTable.Pagination, {\n    page: currentPage,\n    numberOfPages: codes.length,\n    perPage: itemsPerPage,\n    onPageChange: function onPageChange(page) {\n      setCurrentPage(page);\n    },\n    label: currentPage + 1 + \" of \" + codes.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  downloadButton: {},\n  image: {\n    display: \"block\",\n    height: \"100\",\n    width: \"100\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: 40,\n    backgroundColor: \"red\",\n    objectFit: \"cover\"\n  }\n});\nexport default ListQRCodes;","map":{"version":3,"sources":["C:/Users/DJsimon93/Desktop/IPL/bloc 3/PFE/PFE/Web_app/src/components/ListQRCodes/ListQRCodes.js"],"names":["React","useState","useEffect","Service","Card","Button","DataTable","ListQRCodes","data","codes","setCodes","currentPage","setCurrentPage","load","setLoad","itemsPerPage","console","log","length","lenght","array","i","temp","styles","image","count","push","page","StyleSheet","create","cardContainer","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","downloadButton","display","height","width","padding","backgroundColor","objectFit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Image,Text } from \"react-native\";\r\nimport Service from \"services/Service\";\r\nimport { Card, Button,DataTable } from \"react-native-paper\";\r\n\r\nconst ListQRCodes = ({data}) => {\r\n    \r\n    const [codes, setCodes] = useState([]);\r\n    const [currentPage,setCurrentPage] = useState(0);\r\n    const [load,setLoad]=useState(true);\r\n\r\n    const itemsPerPage = 1;\r\n\r\n    console.log(data.length > 0 && load)\r\n\r\n    if(data.lenght > 0 && load){\r\n      console.log(\"ok\")\r\n\r\n        const array= []\r\n        for(var i=0;i<data.length;i++){\r\n          console.log(i)\r\n          const temp = (\r\n              <DataTable.Row key={i}>\r\n                  <DataTable.Cell><Image style={styles.image} source={data[i].image} /></DataTable.Cell>\r\n                  <DataTable.Cell numeric>{data[i].count}</DataTable.Cell>\r\n              </DataTable.Row>\r\n              )\r\n              array.push(temp)\r\n                \r\n        }\r\n        setLoad(false);\r\n        console.log(load)\r\n        setCodes(array);\r\n        console.log(\"test\",codes.length)\r\n    } \r\n    return (\r\n        <Card.Content>\r\n          <DataTable>\r\n            <DataTable.Header>\r\n              <DataTable.Title>QR Code</DataTable.Title>\r\n              <DataTable.Title numeric>nbr of scans</DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n          {codes[currentPage]}     \r\n\r\n          <DataTable.Pagination\r\n              page={currentPage}\r\n              numberOfPages={codes.length}\r\n              perPage={itemsPerPage}\r\n              onPageChange={page => {\r\n                setCurrentPage(page)\r\n              }}\r\n              label={`${currentPage+1} of ${codes.length}`}\r\n            />\r\n          </DataTable>         \r\n        </Card.Content>   \r\n    );\r\n  };\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      paddingTop: \"80px\",\r\n      paddingBottom: \"80px\",\r\n      borderColor: \"#D3D3D3\",\r\n      borderWidth: \"1px\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    downloadButton: {},\r\n    image: {\r\n        display: \"block\",\r\n        height:\"100\",\r\n        width: \"100\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 40,\r\n        backgroundColor: \"red\",\r\n        objectFit: \"cover\",\r\n      }\r\n  });\r\n  \r\n  export default ListQRCodes;\r\n  "]},"metadata":{},"sourceType":"module"}