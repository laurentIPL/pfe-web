{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Laurent\\\\PFE\\\\Web_app\\\\src\\\\components\\\\AuthForm\\\\DoctorForm.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport AuthService from \"../../services/authService\";\nimport CustomInput from \"./CustomInput\";\nimport { Button, Card, Title, IconButton } from \"react-native-paper\";\nimport backIcon from \"../../assets/svg/arrow-left.svg\";\n\nvar DoctorForm = function DoctorForm(_ref) {\n  var setAccount = _ref.setAccount;\n  return React.createElement(Formik, {\n    initialValues: {\n      last_name: \"\",\n      first_name: \"\",\n      email: \"\",\n      password: \"\",\n      num_inami: \"\",\n      telephone: \"\"\n    },\n    onSubmit: function onSubmit(data, actions) {\n      console.log(data);\n      AuthService.createDoctor(data).then(function (resp) {\n        return console.log(resp);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isValid = _ref2.isValid;\n    return React.createElement(Card, {\n      style: styles.cardContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, React.createElement(Title, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Cr\\xE9er un compte M\\xE9decin\"), React.createElement(View, {\n      style: styles.column,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, React.createElement(Field, {\n      component: CustomInput,\n      name: \"last_name\",\n      label: \"Nom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"first_name\",\n      label: \"Pr\\xE9nom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: styles.addressContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, React.createElement(Field, {\n      style: styles.streetInput,\n      component: CustomInput,\n      name: \"street\",\n      label: \"Rue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      style: styles.numberInput,\n      component: CustomInput,\n      name: \"number\",\n      label: \"n\\xB0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      style: styles.postcodeInput,\n      component: CustomInput,\n      name: \"postcode\",\n      label: \"Code postal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    })), React.createElement(Field, {\n      component: CustomInput,\n      name: \"email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"telephone\",\n      label: \"T\\xE9l\\xE9phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.column,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(Field, {\n      component: CustomInput,\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"num_inami\",\n      label: \"Num\\xE9ro INAMI\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), React.createElement(Card.Actions, {\n      style: styles.buttons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(IconButton, {\n      color: \"#808080\",\n      icon: backIcon,\n      onPress: function onPress() {\n        return setAccount(\"\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Valider\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"500px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"80px\",\n    paddingBottom: \"80px\",\n    borderColor: \"#D3D3D3\",\n    borderWidth: \"1px\",\n    borderRadius: \"10px\"\n  },\n  addressContainer: {\n    flexDirection: \"row\"\n  },\n  streetInput: {\n    width: \"50%\"\n  },\n  numberInput: {\n    width: \"25%\"\n  },\n  postcodeInput: {\n    width: \"25%\"\n  },\n  title: {\n    textAlign: \"center\"\n  },\n  buttons: {\n    justifyContent: \"space-between\"\n  }\n});\nexport default DoctorForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/AuthForm/DoctorForm.js"],"names":["React","Formik","Field","yup","AuthService","CustomInput","Button","Card","Title","IconButton","backIcon","DoctorForm","setAccount","last_name","first_name","email","password","num_inami","telephone","data","actions","console","log","createDoctor","then","resp","handleSubmit","isValid","styles","cardContainer","title","column","addressContainer","streetInput","numberInput","postcodeInput","buttons","StyleSheet","create","width","marginLeft","marginRight","paddingTop","paddingBottom","borderColor","borderWidth","borderRadius","flexDirection","textAlign","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"services/authService\";\r\nimport CustomInput from \"components/AuthForm/CustomInput\";\r\nimport { Button, Card, Title, IconButton } from \"react-native-paper\";\r\nimport backIcon from \"assets/svg/arrow-left.svg\";\r\n\r\nconst DoctorForm = ({ setAccount }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        last_name: \"\",\r\n        first_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        num_inami: \"\",\r\n        telephone: \"\",\r\n      }}\r\n      onSubmit={(data, actions) => {\r\n        console.log(data);\r\n        AuthService.createDoctor(data).then((resp) => console.log(resp));\r\n      }}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Card style={styles.cardContainer}>\r\n          <Card.Content>\r\n            <Title style={styles.title}>Créer un compte Médecin</Title>\r\n            <View style={styles.column}>\r\n              <Field component={CustomInput} name=\"last_name\" label=\"Nom\" />\r\n              <Field component={CustomInput} name=\"first_name\" label=\"Prénom\" />\r\n              <View style={styles.addressContainer}>\r\n                <Field\r\n                  style={styles.streetInput}\r\n                  component={CustomInput}\r\n                  name=\"street\"\r\n                  label=\"Rue\"\r\n                />\r\n                <Field\r\n                  style={styles.numberInput}\r\n                  component={CustomInput}\r\n                  name=\"number\"\r\n                  label=\"n°\"\r\n                />\r\n                <Field\r\n                  style={styles.postcodeInput}\r\n                  component={CustomInput}\r\n                  name=\"postcode\"\r\n                  label=\"Code postal\"\r\n                />\r\n              </View>\r\n              <Field component={CustomInput} name=\"email\" label=\"Email\" />\r\n              <Field\r\n                component={CustomInput}\r\n                name=\"telephone\"\r\n                label=\"Téléphone\"\r\n              />\r\n            </View>\r\n            <View style={styles.column}>\r\n              <Field\r\n                component={CustomInput}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                secureTextEntry\r\n              />\r\n\r\n              <Field\r\n                component={CustomInput}\r\n                name=\"num_inami\"\r\n                label=\"Numéro INAMI\"\r\n              />\r\n            </View>\r\n            <Card.Actions style={styles.buttons}>\r\n              <IconButton\r\n                color=\"#808080\"\r\n                icon={backIcon}\r\n                onPress={() => setAccount(\"\")}\r\n              />\r\n              <Button mode=\"contained\" onPress={handleSubmit}>\r\n                Valider\r\n              </Button>\r\n            </Card.Actions>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    width: \"500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingTop: \"80px\",\r\n    paddingBottom: \"80px\",\r\n    borderColor: \"#D3D3D3\",\r\n    borderWidth: \"1px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  addressContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  streetInput: {\r\n    width: \"50%\",\r\n  },\r\n  numberInput: {\r\n    width: \"25%\",\r\n  },\r\n  postcodeInput: {\r\n    width: \"25%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  buttons: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nexport default DoctorForm;\r\n"]},"metadata":{},"sourceType":"module"}