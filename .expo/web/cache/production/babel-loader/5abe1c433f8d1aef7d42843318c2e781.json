{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import React from\"react\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var CustomInput=function CustomInput(props){var _props$field=props.field,name=_props$field.name,_onBlur=_props$field.onBlur,onChange=_props$field.onChange,value=_props$field.value,_props$form=props.form,errors=_props$form.errors,touched=_props$form.touched,setFieldTouched=_props$form.setFieldTouched,inputProps=_objectWithoutProperties(props,[\"field\",\"form\"]);var hasError=errors[name]&&touched[name];return React.createElement(React.Fragment,null,React.createElement(TextInput,_extends({style:[styles.textInput,hasError&&styles.errorInput],value:value,onChangeText:function onChangeText(text){return onChange(name)(text);},onBlur:function onBlur(){setFieldTouched(name);_onBlur(name);},onFocus:function onFocus(){}},inputProps)),hasError&&React.createElement(Text,{style:styles.errorText},errors[name]));};var styles=StyleSheet.create({textInput:{height:40,width:\"100%\",margin:10,backgroundColor:\"white\",borderColor:\"gray\",borderWidth:StyleSheet.hairlineWidth,borderRadius:10,outlineStyle:\"none\",outlineWidth:0,outlineColor:\"transparent\"},errorText:{fontSize:10,color:\"red\"},errorInput:{borderColor:\"red\"}});export default CustomInput;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/CustomInput.js"],"names":["React","CustomInput","props","field","name","onBlur","onChange","value","form","errors","touched","setFieldTouched","inputProps","hasError","styles","textInput","errorInput","text","errorText","StyleSheet","create","height","width","margin","backgroundColor","borderColor","borderWidth","hairlineWidth","borderRadius","outlineStyle","outlineWidth","outlineColor","fontSize","color"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,qLAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,kBAKzBA,KALyB,CAE3BC,KAF2B,CAElBC,IAFkB,cAElBA,IAFkB,CAEZC,OAFY,cAEZA,MAFY,CAEJC,QAFI,cAEJA,QAFI,CAEMC,KAFN,cAEMA,KAFN,aAKzBL,KALyB,CAG3BM,IAH2B,CAGnBC,MAHmB,aAGnBA,MAHmB,CAGXC,OAHW,aAGXA,OAHW,CAGFC,eAHE,aAGFA,eAHE,CAIxBC,UAJwB,0BAKzBV,KALyB,mBAO7B,GAAMW,CAAAA,QAAQ,CAAGJ,MAAM,CAACL,IAAD,CAAN,EAAgBM,OAAO,CAACN,IAAD,CAAxC,CAEA,MACE,yCACE,oBAAC,SAAD,WACE,KAAK,CAAE,CAACU,MAAM,CAACC,SAAR,CAAmBF,QAAQ,EAAIC,MAAM,CAACE,UAAtC,CADT,CAEE,KAAK,CAAET,KAFT,CAGE,YAAY,CAAE,sBAACU,IAAD,QAAUX,CAAAA,QAAQ,CAACF,IAAD,CAAR,CAAea,IAAf,CAAV,EAHhB,CAIE,MAAM,CAAE,iBAAM,CACZN,eAAe,CAACP,IAAD,CAAf,CACAC,OAAM,CAACD,IAAD,CAAN,CACD,CAPH,CAQE,OAAO,CAAE,kBAAM,CAAE,CARnB,EASMQ,UATN,EADF,CAYGC,QAAQ,EAAI,oBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACI,SAApB,EAAgCT,MAAM,CAACL,IAAD,CAAtC,CAZf,CADF,CAgBD,CAzBD,CA2BA,GAAMU,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAX,CAAkB,CAC/BL,SAAS,CAAE,CACTM,MAAM,CAAE,EADC,CAETC,KAAK,CAAE,MAFE,CAGTC,MAAM,CAAE,EAHC,CAITC,eAAe,CAAE,OAJR,CAKTC,WAAW,CAAE,MALJ,CAMTC,WAAW,CAAEP,UAAU,CAACQ,aANf,CAOTC,YAAY,CAAE,EAPL,CAQTC,YAAY,CAAE,MARL,CASTC,YAAY,CAAE,CATL,CAUTC,YAAY,CAAE,aAVL,CADoB,CAa/Bb,SAAS,CAAE,CACTc,QAAQ,CAAE,EADD,CAETC,KAAK,CAAE,KAFE,CAboB,CAiB/BjB,UAAU,CAAE,CACVS,WAAW,CAAE,KADH,CAjBmB,CAAlB,CAAf,CAsBA,cAAexB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Text, TextInput, StyleSheet } from \"react-native\";\r\n\r\nconst CustomInput = (props) => {\r\n  const {\r\n    field: { name, onBlur, onChange, value },\r\n    form: { errors, touched, setFieldTouched },\r\n    ...inputProps\r\n  } = props;\r\n\r\n  const hasError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        style={[styles.textInput, hasError && styles.errorInput]}\r\n        value={value}\r\n        onChangeText={(text) => onChange(name)(text)}\r\n        onBlur={() => {\r\n          setFieldTouched(name);\r\n          onBlur(name);\r\n        }}\r\n        onFocus={() => {}}\r\n        {...inputProps}\r\n      />\r\n      {hasError && <Text style={styles.errorText}>{errors[name]}</Text>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    height: 40,\r\n    width: \"100%\",\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"gray\",\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderRadius: 10,\r\n    outlineStyle: \"none\",\r\n    outlineWidth: 0,\r\n    outlineColor: \"transparent\",\r\n  },\r\n  errorText: {\r\n    fontSize: 10,\r\n    color: \"red\",\r\n  },\r\n  errorInput: {\r\n    borderColor: \"red\",\r\n  },\r\n});\r\n\r\nexport default CustomInput;\r\n"]},"metadata":{},"sourceType":"module"}