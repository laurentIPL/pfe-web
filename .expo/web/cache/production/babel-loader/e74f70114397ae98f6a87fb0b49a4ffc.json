{"ast":null,"code":"import React from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Button from\"react-native-web/dist/exports/Button\";import View from\"react-native-web/dist/exports/View\";import{Formik,Field}from\"formik\";import*as yup from\"yup\";import AuthService from\"../services/authService\";import CustomInput from\"./CustomInput\";var registerSchema=yup.object({email:yup.string().required(\"Email is required\"),password:yup.string().required(\"Password is required\")});var RegisterForm=function RegisterForm(){return React.createElement(Formik,{style:styles.container,initialValues:{email:\"\",password:\"\"},onSubmit:function onSubmit(data,actions){console.log(data);AuthService.createUser(data).then(function(resp){return console.log(resp);});},validationSchema:registerSchema},function(_ref){var handleSubmit=_ref.handleSubmit,isValid=_ref.isValid;return React.createElement(View,{style:styles.registerContainer},React.createElement(Field,{component:CustomInput,name:\"email\",placeholder:\"Email\"}),React.createElement(Field,{component:CustomInput,type:\"password\",name:\"password\",placeholder:\"Password\",secureTextEntry:true}),React.createElement(Button,{onPress:handleSubmit,title:\"Register\",disabled:!isValid}));});};var styles=StyleSheet.create({container:{justifyContent:\"center\",alignItems:\"center\"},registerContainer:{width:\"30%\",alignItems:\"center\",backgroundColor:\"white\",padding:10,elevation:10,backgroundColor:\"#e6e6e6\"}});export default RegisterForm;","map":{"version":3,"sources":["C:/Users/Laurent/PFE/Web_app/src/components/RegisterForm.js"],"names":["React","Formik","Field","yup","AuthService","CustomInput","registerSchema","object","email","string","required","password","RegisterForm","styles","container","data","actions","console","log","createUser","then","resp","handleSubmit","isValid","registerContainer","StyleSheet","create","justifyContent","alignItems","width","backgroundColor","padding","elevation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+KAEA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,QAA9B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,WAAP,+BACA,MAAOC,CAAAA,WAAP,qBAEA,GAAMC,CAAAA,cAAc,CAAGH,GAAG,CAACI,MAAJ,CAAW,CAChCC,KAAK,CAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADyB,CAEhCC,QAAQ,CAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAFsB,CAAX,CAAvB,CAKA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,MACE,qBAAC,MAAD,EACE,KAAK,CAAEC,MAAM,CAACC,SADhB,CAEE,aAAa,CAAE,CAAEN,KAAK,CAAE,EAAT,CAAaG,QAAQ,CAAE,EAAvB,CAFjB,CAGE,QAAQ,CAAE,kBAACI,IAAD,CAAOC,OAAP,CAAmB,CAC3BC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACAX,WAAW,CAACe,UAAZ,CAAuBJ,IAAvB,EAA6BK,IAA7B,CAAkC,SAACC,IAAD,QAAUJ,CAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,CAAV,EAAlC,EACD,CANH,CAOE,gBAAgB,CAAEf,cAPpB,EASG,kBAAGgB,CAAAA,YAAH,MAAGA,YAAH,CAAiBC,OAAjB,MAAiBA,OAAjB,OACC,qBAAC,IAAD,EAAM,KAAK,CAAEV,MAAM,CAACW,iBAApB,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEnB,WAAlB,CAA+B,IAAI,CAAC,OAApC,CAA4C,WAAW,CAAC,OAAxD,EADF,CAEE,oBAAC,KAAD,EACE,SAAS,CAAEA,WADb,CAEE,IAAI,CAAC,UAFP,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAC,UAJd,CAKE,eAAe,KALjB,EAFF,CASE,oBAAC,MAAD,EAAQ,OAAO,CAAEiB,YAAjB,CAA+B,KAAK,CAAC,UAArC,CAAgD,QAAQ,CAAE,CAACC,OAA3D,EATF,CADD,EATH,CADF,CAyBD,CA1BD,CA4BA,GAAMV,CAAAA,MAAM,CAAGY,UAAU,CAACC,MAAX,CAAkB,CAC/BZ,SAAS,CAAE,CACTa,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BJ,iBAAiB,CAAE,CACjBK,KAAK,CAAE,KADU,CAEjBD,UAAU,CAAE,QAFK,CAGjBE,eAAe,CAAE,OAHA,CAIjBC,OAAO,CAAE,EAJQ,CAKjBC,SAAS,CAAE,EALM,CAMjBF,eAAe,CAAE,SANA,CALY,CAAlB,CAAf,CAeA,cAAelB,CAAAA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Button, View } from \"react-native\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"services/authService\";\r\nimport CustomInput from \"components/CustomInput\";\r\n\r\nconst registerSchema = yup.object({\r\n  email: yup.string().required(\"Email is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  return (\r\n    <Formik\r\n      style={styles.container}\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(data, actions) => {\r\n        console.log(data);\r\n        AuthService.createUser(data).then((resp) => console.log(resp));\r\n      }}\r\n      validationSchema={registerSchema}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <View style={styles.registerContainer}>\r\n          <Field component={CustomInput} name=\"email\" placeholder=\"Email\" />\r\n          <Field\r\n            component={CustomInput}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n          />\r\n          <Button onPress={handleSubmit} title=\"Register\" disabled={!isValid} />\r\n        </View>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  registerContainer: {\r\n    width: \"30%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    elevation: 10,\r\n    backgroundColor: \"#e6e6e6\",\r\n  },\r\n});\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}